<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Task01</title>
      <link href="/2023/01/16/Task01/"/>
      <url>/2023/01/16/Task01/</url>
      
        <content type="html"><![CDATA[<h1 id="Task01"><a href="#Task01" class="headerlink" title="Task01"></a>Task01</h1><h2 id="第一节"><a href="#第一节" class="headerlink" title="第一节"></a>第一节</h2><h3 id="1-导包"><a href="#1-导包" class="headerlink" title="1.导包"></a>1.导包</h3><p>对于基础小白，第一次接触 Jupyter的小孩，在网页运行时，注意不要把黑框关掉，不然不能正常使用Jupyter，会显示 <strong>Server Connection Error</strong></p><p><img src="/1673925619699.png" alt="1673925619699"></p><p>另外是在启动 Jupyter时启动位置不同则打开的文件夹也不同。</p><p>推荐安装教程：<a href="https://blog.csdn.net/fakejvruo/article/details/124409158">https://blog.csdn.net/fakejvruo/article/details/124409158</a></p><h3 id="2-载入数据"><a href="#2-载入数据" class="headerlink" title="2.载入数据"></a>2.载入数据</h3><h4 id="1）数据的载入方式"><a href="#1）数据的载入方式" class="headerlink" title="1）数据的载入方式"></a>1）数据的载入方式</h4><p>第一种载入数据方式：使用相对路径载入数据</p><p>报错内容：<strong>FIleNotFoundError</strong>，原因是数据没有放在同一个文件夹下。</p><p>可以使用os.getcwd()查看当前工作目录，然后查找数据集是否在同一文件夹下。</p><p>第二种载入数据方式：使用绝对路径载入数据</p><p>使用绝对路径成功，只要是没有打错名称</p><p><img src="/1673926568197.png" alt="1673926568197"></p><p>【思考】使用pd.read_csv()与pd.read_table()的区别是csv会更加直观，将每个属性（列）都列出来了。而table将所有属性（列）放到了一起。</p><p><img src="/1673926774111.png" alt="1673926774111"></p><p>【补充】TSV与CSV的区别：TSV 是Tab-separated values的缩写，即制表符分隔值，是用制表符（Tab,’\t’）作为字段值的分隔符；CSV，Comma-separated values是用半角逗号（’,’）作为字段值的分隔符； </p><h4 id="2）逐块读取"><a href="#2）逐块读取" class="headerlink" title="2）逐块读取"></a>2）逐块读取</h4><p>【思考】逐块读取：将数据分成小块按块读入，得到的对象指向多个分块对象，在提取数据时才将数据提取进来，没有将实际数据先读入。</p><p>【原因】提高读取效率，在文件过大时，逐块读取可以将大文件切分成小文件，大大降低内存使用量但是消耗了时间。</p><p>【补充】read_csv中有个参数chunksize，通过指定一个chunksize分块大小来读取文件，返回的是一个可迭代的对象TextFileReader。</p><h4 id="3）数据块类型"><a href="#3）数据块类型" class="headerlink" title="3）数据块类型"></a>3）数据块类型</h4><p>数据块（chunker）类型使用<code>print(type(chunker))</code> 查看</p><p>使用for循环打印代码</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">chunker = pd.read_csv(<span class="string">&#x27;train.csv&#x27;</span>, chunksize=<span class="number">1000</span>) </span><br><span class="line"><span class="keyword">for</span> chunk <span class="keyword">in</span> chunker: </span><br><span class="line"><span class="built_in">print</span>(chunk) </span><br></pre></td></tr></table></figure><p>最后得知类型为<strong>可迭代对象</strong><code>&lt;class &#39;pandas.io.parsers.TextFileReader&#39;&gt;</code></p><h4 id="4）文件名中英文替换"><a href="#4）文件名中英文替换" class="headerlink" title="4）文件名中英文替换"></a>4）文件名中英文替换</h4><p>将文件头从英文转化成中文，使用**names&#x3D;[]**进行替换</p><p><img src="/1673927892896.png" alt="1673927892896"></p><ol><li><p>方法一</p><p><strong>主要区别在于是否设置header参数</strong></p><ul><li><p>header&#x3D;0的情况</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;train.csv&#x27;</span>, names = [<span class="string">&#x27;乘客ID&#x27;</span>, <span class="string">&#x27;是否幸存&#x27;</span>, <span class="string">&#x27;仓位等级&#x27;</span>,<span class="string">&#x27;姓名&#x27;</span>,<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;年龄&#x27;</span>,<span class="string">&#x27;兄弟姐妹个数&#x27;</span>,<span class="string">&#x27;父母子女个数&#x27;</span>,<span class="string">&#x27;船票信息&#x27;</span>,<span class="string">&#x27;票价&#x27;</span>,<span class="string">&#x27;客舱&#x27;</span>,<span class="string">&#x27;登船港口&#x27;</span>],index_col=<span class="string">&#x27;乘客ID&#x27;</span>,header=<span class="number">0</span>)</span><br></pre></td></tr></table></figure></li><li><p>没有header的情况</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;train.csv&#x27;</span>, names = [<span class="string">&#x27;乘客ID&#x27;</span>, <span class="string">&#x27;是否幸存&#x27;</span>, <span class="string">&#x27;仓位等级&#x27;</span>,<span class="string">&#x27;姓名&#x27;</span>,<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;年龄&#x27;</span>,<span class="string">&#x27;兄弟姐妹个数&#x27;</span>,<span class="string">&#x27;父母子女个数&#x27;</span>,<span class="string">&#x27;船票信息&#x27;</span>,<span class="string">&#x27;票价&#x27;</span>,<span class="string">&#x27;客舱&#x27;</span>,<span class="string">&#x27;登船港口&#x27;</span>],index_col=<span class="string">&#x27;乘客ID&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>header&#x3D;None的情况</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&#x27;train.csv&#x27;</span>, names = [<span class="string">&#x27;乘客ID&#x27;</span>, <span class="string">&#x27;是否幸存&#x27;</span>, <span class="string">&#x27;仓位等级&#x27;</span>,<span class="string">&#x27;姓名&#x27;</span>,<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;年龄&#x27;</span>,<span class="string">&#x27;兄弟姐妹个数&#x27;</span>,<span class="string">&#x27;父母子女个数&#x27;</span>,<span class="string">&#x27;船票信息&#x27;</span>,<span class="string">&#x27;票价&#x27;</span>,<span class="string">&#x27;客舱&#x27;</span>,<span class="string">&#x27;登船港口&#x27;</span>],index_col=<span class="string">&#x27;乘客ID&#x27;</span>,header=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>方法二</p><p>直接使用<code>df.columns=[]</code>修改列名。</p></li><li><p>方法三</p><p>使用方法通过字典对columns的键值对来设置修改：<code>df.rename(columns=&#123;&#39;PassengerId&#39;:&#39;乘客ID&#39;,&#39;Age&#39;:&#39;年龄&#39;&#125;,inplace=True)</code>，inplace参数代码是否在原表上修改。</p></li></ol><h3 id="3-初步观察"><a href="#3-初步观察" class="headerlink" title="3.初步观察"></a>3.初步观察</h3><p>查看数据基本信息：<strong>df.info()</strong></p><p><img src="/1673931546205.png" alt="1673931546205"></p><p>观察表格前10行的数据：<strong>df.head(10)</strong></p><p><img src="/1673931568280.png" alt="1673931568280"></p><p>观察表格后15行的数据：<strong>df.head(15)</strong></p><p><img src="/1673931599534.png" alt="1673931599534"></p><p>判断数据是否为空，空的地方返回True，其余地方返回False：<strong>df.isnull( ).head( )</strong></p><p><img src="/1673931618503.png" alt="1673931618503"></p><p>【思考】通过<strong>指标分析法</strong>，观察数据的平均数、众数、中位数、最大值、最小值、比率、绝对数、计数。</p><h3 id="4-保存数据"><a href="#4-保存数据" class="headerlink" title="4.保存数据"></a>4.保存数据</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.to_csv(<span class="string">&#x27;train_chinese.csv&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果出现乱码，就加入<code>encoding=&#39;GBK&#39; 或者 ’encoding = ’utf-8‘‘</code>修改字符集为GBK或者utf-8，解决乱码问题。</p><h2 id="第二节"><a href="#第二节" class="headerlink" title="第二节"></a>第二节</h2><h4 id="1-Series和DataFrame"><a href="#1-Series和DataFrame" class="headerlink" title="1.Series和DataFrame"></a>1.Series和DataFrame</h4><p>pandas只有两种数据类型，<strong>Series和DataFrame</strong> </p><p>Series你可以简单的理解为Excel中的行或者列，DataFrame可以理解为整个Excel表格。</p><ul><li>Series：一维数组，与Numpy种的一维array类似。二者与Python基本的数据结构List也很相近。字符串、布尔值、数字等都能保存在这里。</li><li>Time-Series：以时间为索引的Series</li><li>DataFrame：二维的表格型数据结构。可以将DataFrame理解为Series的容器。</li><li>Panel：三维的数组，可以理解为DataFrame的容器。</li></ul><p>查看DataFrame数据的每列名称：<strong>df.columns</strong></p><p><img src="/1673932775940.png" alt="1673932775940"></p><p>查看“Cabin”这列的所有值：<strong>df[‘Cablin’].head(3)</strong> or <strong>df.Cabin.head(3)</strong></p><p>这里参考给的是英文版的文件，如果使用中文的文件需要修改一下引号里面的值，不然会报KeyError。</p><p>修改为&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》<strong>df[‘客舱’].head(3)</strong> or <strong>df.客舱.head(3)</strong><img src="/1673933026770.png" alt="1673933026770"></p><h4 id="2-删除多余的列"><a href="#2-删除多余的列" class="headerlink" title="2.删除多余的列"></a>2.删除多余的列</h4><ol><li>&#96;&#96;&#96;python<br>del test_1[‘a’]<br>test_1.head(3)<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">2. 找到需要删除的列明，并对应索引，使用list获取列名，使用索引获取需要删除的列。如：**list(data)[2:5]**，然后嵌套入drop函数，删除对应的列：**datanor=data.drop(list(data)[2:5],axis=1)** axis=1表示对列进行操作 </span><br><span class="line"></span><br><span class="line">将[&#x27;PassengerId&#x27;,&#x27;Name&#x27;,&#x27;Age&#x27;,&#x27;Ticket&#x27;]这几个列元素隐藏：**df.drop([&#x27;PassengerId&#x27;,&#x27;Name&#x27;,&#x27;Age&#x27;,&#x27;Ticket&#x27;],axis=1).head(3)**</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">显示年龄在10岁以下的乘客信息：</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">df[df[&quot;年龄&quot;]&lt;10].head(3)</span><br></pre></td></tr></table></figure></li></ol><p><img src="/1673934406204.png" alt="1673934406204"></p><p>将年龄在10岁以上和50岁以下的乘客信息：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">midage = df[(df[<span class="string">&quot;年龄&quot;</span>]&gt;<span class="number">10</span>)&amp; (df[<span class="string">&quot;年龄&quot;</span>]&lt;<span class="number">50</span>)]</span><br></pre></td></tr></table></figure><p><img src="/1673934520641.png" alt="1673934520641"></p><p>将midage的数据中第100行的“Pclass”和“Sex”显示出来：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">midage = midage.reset_index(drop=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="/1673934668961.png" alt="1673934668961"></p><h4 id="3-了解resert-index"><a href="#3-了解resert-index" class="headerlink" title="3.了解resert_index()"></a>3.了解resert_index()</h4><p>【思考】resert_index()函数：</p><pre><code>Series.reset_index(level=None, drop=False, name=NoDefault.no_default, inplace=False)</code></pre><ul><li><p>drop: 重新设置索引后是否将原索引作为新的一列并入DataFrame，默认为False</p></li><li><p>inplace: 是否在原DataFrame上改动，默认为False</p></li><li><p>level: 如果索引(index)有多个列，仅从索引中删除level指定的列，默认删除所有列</p></li><li><p>col_level: 如果列名(columns)有多个级别，决定被删除的索引将插入哪个级别，默认插入第一级</p></li><li><p>col_fill: 如果列名(columns)有多个级别，决定其他级别如何命名</p></li></ul><p>作用： 用索引重置生成一个新的DataFrame或Series。当索引需要被视为列，或者索引没有意义，需要在另一个操作之前重置为默认值时。在机器学习中常常会对索引进行一定的处理，用于是否保留原有的索引。</p><h4 id="4-loc方法和iloc方法"><a href="#4-loc方法和iloc方法" class="headerlink" title="4.loc方法和iloc方法"></a>4.loc方法和iloc方法</h4><p>使用loc方法将midage的数据中第100，105，108行的“Pclass”，“Name”和“Sex”的数据显示出来：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">midage.loc[[<span class="number">100</span>,<span class="number">105</span>,<span class="number">108</span>],[<span class="string">&#x27;Pclass&#x27;</span>,<span class="string">&#x27;Name&#x27;</span>,<span class="string">&#x27;Sex&#x27;</span>]]</span><br></pre></td></tr></table></figure><p>使用iloc方法将midage的数据中第100，105，108行的“Pclass”，“Name”和“Sex”的数据显示出来：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">midage.iloc[[<span class="number">100</span>,<span class="number">105</span>,<span class="number">108</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]]</span><br></pre></td></tr></table></figure><p>【思考】loc是指location，iloc中的i是指integer。</p><p>区别：</p><p>1.<code>loc</code>和<code>iloc</code>在切片时，范围的区间有些许差别。</p><p><code>iloc</code>中范围是前闭后开区间<br> <code>loc</code>中范围是前闭后闭区间</p><p>2.loc使用范围比iloc更广更实用，loc可以使用切片、名称(index,columns)、也可以切片和名称混合使用；但是loc不能使用不存在的索引来充当切片取值,像-1 </p><p>3.iloc只能用整数来取数 </p><h3 id="第三节"><a href="#第三节" class="headerlink" title="第三节"></a>第三节</h3><h4 id="1-利用Pandas对是咧数据进行排序。"><a href="#1-利用Pandas对是咧数据进行排序。" class="headerlink" title="1.利用Pandas对是咧数据进行排序。"></a>1.利用Pandas对是咧数据进行排序。</h4><p>自己构建一个数组，然后进行排序，要求升序</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">frame = pd.DataFrame(np.arange(<span class="number">8</span>).reshape((<span class="number">2</span>, <span class="number">4</span>)), </span><br><span class="line">                     index=[<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>], </span><br><span class="line">                     columns=[<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br><span class="line">frame</span><br></pre></td></tr></table></figure><p><img src="/1673936728604.png" alt="1673936728604"></p><p>pd.DataFrame() ：创建一个DataFrame对象</p><p>np.arange(8).reshape((2, 4)) : 生成一个二维数组（2*4）,第一列：0，1，2，3 第二列：4，5，6，7</p><p>index&#x3D;[‘2, 1] ：DataFrame 对象的索引列</p><p>columns&#x3D;[‘d’, ‘a’, ‘b’, ‘c’] ：DataFrame 对象的索引行</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 大多数时候我们都是想根据列的值来排序,所以，将你构建的DataFrame中的数据根据某一列，升序排列</span></span><br><span class="line">frame.sort_values(by=<span class="string">&#x27;c&#x27;</span>, ascending=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="/1673939470081.png" alt="1673939470081"></p><p>by参数指向要排列的列，ascending参数指向排序的方式（升序还是降序） </p><h5 id="让行索引升序排序："><a href="#让行索引升序排序：" class="headerlink" title="让行索引升序排序："></a>让行索引升序排序：</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">frame.sort_index()</span><br></pre></td></tr></table></figure><p><img src="/1673939806124.png" alt="1673939806124"></p><h5 id="让列索引升序排序："><a href="#让列索引升序排序：" class="headerlink" title="让列索引升序排序："></a>让列索引升序排序：</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">frame.sort_index(axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="/1673939843678.png" alt="1673939843678"></p><h5 id="让列索引降序排序："><a href="#让列索引降序排序：" class="headerlink" title="让列索引降序排序："></a>让列索引降序排序：</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">frame.sort_index(axis=<span class="number">1</span>, ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p><img src="/1673939981715.png" alt="1673939981715"></p><h5 id="让任选两列数据同时降序排序："><a href="#让任选两列数据同时降序排序：" class="headerlink" title="让任选两列数据同时降序排序："></a>让任选两列数据同时降序排序：</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">frame.sort_values(by=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>], ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p><img src="/1673940124209.png" alt="1673940124209"></p><h5 id="对泰坦尼克号数据按票价和年龄两列进行综合排序（降序排列）"><a href="#对泰坦尼克号数据按票价和年龄两列进行综合排序（降序排列）" class="headerlink" title="对泰坦尼克号数据按票价和年龄两列进行综合排序（降序排列）"></a>对泰坦尼克号数据按票价和年龄两列进行综合排序（降序排列）</h5><p><strong>text.sort_values(by&#x3D;[‘票价’，’年龄’],ascending&#x3D;False).head(3)</strong></p><h4 id="2-利用Pandas进行算术计算，计算两个DataFrame数据相加结果。"><a href="#2-利用Pandas进行算术计算，计算两个DataFrame数据相加结果。" class="headerlink" title="2.利用Pandas进行算术计算，计算两个DataFrame数据相加结果。"></a>2.利用Pandas进行算术计算，计算两个DataFrame数据相加结果。</h4><p>首先也是自己先构建表格。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">frame1_a = pd.DataFrame(np.arange(<span class="number">9.</span>).reshape(<span class="number">3</span>, <span class="number">3</span>),</span><br><span class="line">                     columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>],</span><br><span class="line">                     index=[<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>])</span><br><span class="line">frame1_b = pd.DataFrame(np.arange(<span class="number">12.</span>).reshape(<span class="number">4</span>, <span class="number">3</span>),</span><br><span class="line">                     columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;c&#x27;</span>],</span><br><span class="line">                     index=[<span class="string">&#x27;first&#x27;</span>, <span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;second&#x27;</span>])</span><br></pre></td></tr></table></figure><p><img src="/1673940503386.png" alt="1673940503386"></p><p>1.展示a表：frame1_a</p><p>2.展示b表：frame1_b</p><p>3.将frame_a和frame_b进行相加：<strong>frame1_a  + frame1_b</strong></p><p>再两个DataFrame相加后，会返回一个新的DataFrame，对应的行和列的值会相加，没有对应的会变成空值NaN。</p><p>【问题】通过泰坦尼克号数据如何计算出再船上最大的家族有多少人？</p><p>方法一：max(text[‘兄弟姐妹个数’] + text[‘父母子女个数’])</p><h4 id="3-使用describe-函数查看数据基本统计信息"><a href="#3-使用describe-函数查看数据基本统计信息" class="headerlink" title="3.使用describe()函数查看数据基本统计信息"></a>3.使用describe()函数查看数据基本统计信息</h4><p>首先仍然是先建立一个例子，然后对例子进行操作</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">frame2 = pd.DataFrame([[<span class="number">1.4</span>, np.nan], </span><br><span class="line">                       [<span class="number">7.1</span>, -<span class="number">4.5</span>],</span><br><span class="line">                       [np.nan, np.nan], </span><br><span class="line">                       [<span class="number">0.75</span>, -<span class="number">1.3</span>]</span><br><span class="line">                      ], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>], columns=[<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>])</span><br></pre></td></tr></table></figure><p>调用函数的代码：<strong>frame2.describe( )</strong></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">count : 样本数据大小</span><br><span class="line">mean : 样本数据的平均值</span><br><span class="line">std : 样本数据的标准差</span><br><span class="line">min : 样本数据的最小值</span><br><span class="line">25% : 样本数据25%的时候的值</span><br><span class="line">50% : 样本数据50%的时候的值</span><br><span class="line">75% : 样本数据75%的时候的值</span><br><span class="line">max : 样本数据的最大值</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特征工程</title>
      <link href="/2023/01/05/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/"/>
      <url>/2023/01/05/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h1><p>特征工程是一个过程：将数据转换为能更好地表示潜在问题的特征，从而提高机器学习性能。</p><p>特征工程具体包含：</p><ul><li><p>转换数据的过程</p><p>特征工程适用于任何阶段的数据，应用于已经<strong>处理过</strong>的数据。处理的数据经常是表格形式的，数据会被组织成行（观察值）和列（属性）。</p></li><li><p>特征</p><p>特征是对机器学习过程有意义的数据属性。</p></li><li><p>更好地表示潜在问题</p><p>转换数据的目的在是要更好地表达更大的问题</p></li><li><p>提高机器学习性能</p><p>执行特征工程不仅是要获取更干净的数组，而且最终要在机器学习流水线中使用这些数据</p></li></ul><p>大体上，机器学习分成两类：<strong>监督学习</strong>和<strong>无监督学习</strong>。</p><p>1.监督学习</p><p>监督学习（预测分析）算法专门处理预测一个值的任务，通常是用数据中的其他属性来预测余下的一个属性。</p><p>在监督学习中，我们一般将数据集中希望预测的属性（一般只有一个，但是也不一定）叫做响应（response），其余的属性叫做特征（feature）</p><p>2.无监督学习</p><p>监督学习的目的是预测，而无监督学习就是对数据进行分类。此类分析和类型的创建属于无监督学习的一个特殊类别，称作<strong>聚类</strong>。</p><p>特征和属性通常有明显的区分，属性一般是表格数据的列，特征则一般只指代对机器学习算法有益的属性。我们一般将所有的列都称为特征，直到证明某些列是无用或有害的。</p><p>评估监督学习算法</p><p>当进行预测建模时，性能直接与模型利用数据结构能力，以及使用数据结构进行恰当预测的能力有关。</p><p>分为具体的类型：分类（预测定性响应）和回归（预测定量响应）</p><p>回归问题：我们用线性回归的<strong>均方误差（MSE）</strong></p><p>评估无监督学修方法算法</p><p>聚类分析：我们会利用<strong>轮廓系数</strong>（一个表示聚类分离性的变量，在-1和1之间）</p><ul><li><p>监督学习：预测分析</p><ul><li><p>回归——预测<strong>定量</strong>数据</p><p>主要使用均方差作为测量指标</p></li><li><p>分类——预测<strong>定性</strong>数据</p><p>主要使用准确率作为测量指标</p></li></ul></li><li><p>无监督学习：聚类——将数据按特征行为进行分类</p><ul><li>主要用轮廓系数作为测量指标</li></ul></li><li><p>统计检验：用相关系数、t检验、卡方检验，以及其他方法评估并量化袁术数据和转换后数据的效果</p></li></ul><p>特征增强：清洗数据</p><ul><li>对非结构化数据进行结构化</li><li>数据填充——在原先没有数据的位置填充（缺失）数据</li><li>数据归一化：<ul><li>标准化（也称为z分数标准化）</li><li>极差法（也称为min-max标准化）</li><li>L1和L2正则化（将数据投影到不同的空间）</li></ul></li></ul><p>简单方式（把有缺失值的特征删掉）&#x3D;&#x3D;&#x3D;&#x3D;》复杂方式（在其他特征上进行机器学习，填充缺失值）</p><p>归一化使用一般比较简单的数学工具改变数据的缩放比例</p><p>提问：属性在何种程度上才能成为真正的特征。</p><p>说人话就是：哪些列对我们的机器学习流水线没有帮助且有害，应该嘎掉？</p><ul><li>相关系数</li><li>识别并移除多重共线性</li><li>卡方检验</li><li>方差分析</li><li>理解p值</li><li>迭代特征选择</li><li>用机器学习测量熵和信息增益</li></ul><p>上述过程中都会建议删掉某些特征，但是需要给出不同的理由</p><p>实体匹配：通过手上目前已知的数据从数据集里找出这些具体属性。</p><p>主成分分析（PCA）</p><p>第二章</p><p>拿到一个新的数据集，首要任务是确认数据是结构化还是非结构化的。</p><p>问题来了，什么是结构化的数据？</p><p><strong>结构化的数据</strong>就是有组织的，可以分成观察值和特征的数据，一般以<strong>表格</strong>的形式组织。（行是观察值，列是特征。）</p><p><strong>非结构化的数据</strong>就是<strong>一团</strong>数据，或者只有一个特征（列）</p><p>定量数据本质上是数值，应该是衡量某样东西的数量。</p><p>定性数据本质上是类别，应该是描述某样东西的性质。</p><p>事实上，在大多数数据集中，我们会同时处理<strong>定量数据</strong>和<strong>定性数据</strong>。</p><p>由于定量数据和定性数据之间的模糊性，我们会使用一个更深层次的方法进行处理，称为数据的4个等级。</p><p>Pandas包中有很多方法可以识别和处理缺失值，最快的<strong>salary_ranges.isnull( ).sum( )</strong></p><p>还有一个方法时<strong>climate.dropna(axios&#x3D;0,inplace&#x3D;True)</strong></p><p>**salary_ranges.describe( )**方法默认描述定量列，但是如果没有定量列，也会描述定性列</p><p>当处理定量数据时，一般使用整数或浮点数作为类型（最好使用浮点数）；定性数据则一般适用<strong>字符串</strong>或者<strong>Unicode</strong>对象。</p><p>用Pandas中的map功能，将函数映射到整个数据集</p><ul><li><p>定类等级</p><p>数据第一个等级，结构最弱。整个等级的数据只按名称分类。</p><p>不能执行任何定量数学操作，例如加法或除法。这些数学操作没有意义。</p><p><strong>salary_ranges[‘Grade’].value_counts( ).head( )</strong></p></li><li><p>定序等级</p><p>定序等级继承了定类等级的所有属性，而且有重要的附加属性</p><ul><li>定序等级的数据可以自然排序</li><li>列中的某些数据比其他数据更好</li></ul><p>在定序等级，我们可以像定类等级那样进行计数，也可以引入比较和排序。</p></li><li><p>定距等级</p><p>这个等级中我们开始研究定量数据。数值数据不仅可以像定序里一样排序，而且值之间的差异也有意义。在定距等级，我们不仅可以对值进行<strong>排序和比较</strong>，还可以<strong>加减</strong>。</p><p>在该等级上可以进行加减，可以引入<strong>算术平均数</strong>和<strong>标准差</strong>。</p><p>用groupby清除大部分的噪声。</p><p>climate_sub_us.groupby(‘year’).mean( )[‘AverageTemperature’].plot( )</p><p>用滑动均值平滑图像</p><p>climate_sub_us.groupby(‘year’).mean( )[‘AverageTemperature’].rolling(10).mean( ).plot( )</p></li><li><p>定比等级</p><p>最高等级，在继承定距等级的加减运算，多了一个<strong>绝对零点</strong>的概念，可以坐乘除运算。</p></li></ul><p>第三章</p><p>清洗和增强数据：前者是指调整已有的列和行，后者则是指在数据集中删除和添加新的列。</p><p>数据增强的第一种方法是识别数据的缺失值。</p><p>空准确率：指当模型总是预测频率较高的类别时达到的正确率。</p><p>缺失值的常见<strong>填充方法</strong>有：</p><ul><li>0（数值型）</li><li>unknown或者Unknown（类别型）</li><li>？（类别型）</li></ul><p>缺失值会引发很多问题，但是大部分学习算法都不能处理缺失值。</p><p>缺失值的常见<strong>填充方法</strong>有：</p><ul><li>删除缺少值的行</li><li>填充缺失值</li></ul><p>K最近邻（KNN分类模型），网格搜索模块。这个模块会自动找到最合适我们模型的、交叉验证准确率最好的KNN参数组合（暴力搜索）。</p><p>P59</p><p>如果用0填充，准确率会低于直接删掉有缺失值的行。</p><p>如果训练集和测试集都是用整个x矩阵的均值填充的，违反了机器学习流程的核心原则（？）</p><p>当预测测试集的响应值时，不能假设我们已经知道了整个数据集的均值。</p><p>正确的方法是我们先计算出训练集的均值，然后用它填充测试集的缺失值。（？）</p><p>泛化能力：从训练集的特征中学习并将所学应用到未知隐藏数据上的能力。</p><ol><li>我们地Pinpeline分两步：<ul><li>拥有strategy &#x3D; ‘mean’的Imputer</li><li>KNN类型的分类器</li></ul></li><li>要为网格搜索重新定义param字典，因为必须明确n——neighbors参数所属地步骤</li></ol><p>Pinpeline类会为我们处理大部分的流程：可以恰当地从多个训练集取值并用其填充测试集的缺失值，还可以正确测试KNN的泛化能力，最终输出性能最佳的模型。</p><p>所有的数据尺度都不同，数据工程师可以选用某种<strong>归一化</strong>操作，在机器学习流水线上处理该问题。</p><p>归一化的操作旨在将行和列对其并转化为一致的规则。</p><ul><li><p>z分数标准化</p><p>z分数标准化是最常见的技术，利用了统计学里简单的z分数（标准分数）思想，z分数标准化的输出会被重新缩放，使均值为0、标准差为1。</p><p>内置的z分数归一化：</p><p><strong>from sklearn.preprocessing import StandardScaler</strong></p></li><li><p>min-max标准化</p><p>min-max标准化与上面类似，因为它也是用一个公式替换列中的每个值。使用这个公式可以看到，每列所有的值都会位于0~1.这种缩放的副作用是标准差非常小，这有可能不利于某种模型，因为异常值的权重降低了。</p></li><li><p>行归一化</p><p>行归一化不是计算每列的统计值（均值、最小值、最大值等），而是会保证每行有<strong>单位范数</strong>，意味着每行的向量长度相同。</p><p><strong>from sklearn.preprocessing import Normalizer</strong></p></li></ul><p>以上三点，是我们需要关注的3种数据归一化的方法。</p><p>很多算法会受尺度的影响</p><ul><li>KNN——因为依赖欧几里得距离</li><li>K均值聚类——和KNN的原因一样</li><li>逻辑回归、支持向量机、神经网络——如果使用梯度下降来学习权重</li><li>主成分分析——特征向量将偏向较大的列</li></ul><p><strong>特征增强的意义是，识别有问题的区域，并确定哪种修复方法最有效。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python</title>
      <link href="/2022/11/20/Python/"/>
      <url>/2022/11/20/Python/</url>
      
        <content type="html"><![CDATA[<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p>在python中变量是没有类型的，但是变量存储的数据是有类型的。</p><p>想要将字符串转换成数字，必须要求字符串的内容都是数字</p><p>字符串拼接只能和字符串本身拼接，无法和非字符串类型进行拼接</p><p>.n会对小数部分做精度限制，同时会对小数部分做四舍五入</p><p>输出不换行在print里面加上一个逗号end&#x3D;‘’</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&quot;itheima is a brand of itcast&quot;</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for 临时变量 in 被统计的数据：</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> name:</span><br><span class="line">    <span class="keyword">if</span> x == <span class="string">&quot;a&quot;</span>:</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;itheima is a brand of itcast中共含有：<span class="subst">&#123;num&#125;</span>个字母a&quot;</span>)</span><br></pre></td></tr></table></figure><p>for循环语句，本质上遍历：序列类型</p><p>语法一：range(num)</p><p>获取一个从0开始，到num结束的数字序列（不含num本身）</p><p>如，range（5）取得的数据是：[0，1，2，3，4]</p><p>语法二：range(num1,num2)</p><p>获得一个从num1开始，到num2结束的数字序列（不含num2本身）</p><p>如，range(5，10)取得的数据是：[5，6，7，8，9]</p><p>语法三：range(num1，num2，num3)</p><p>获得一个从num1开始，到num2结束的数字序列（不含num2本身）</p><p>数字之间的步长以step为准，默认情况下为1</p><p>如，range(5，10，2)取得的数据是：[5，7，9]</p><p>continue：在循环中，因某些原因，临时结束本次循环</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">accout = <span class="number">10000</span></span><br><span class="line">flag = <span class="literal">True</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> flag:</span><br><span class="line"></span><br><span class="line">    num = random.randint(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">if</span> i &lt; <span class="number">20</span>:</span><br><span class="line">        <span class="keyword">if</span> accout &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> num &lt; <span class="number">5</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;员工<span class="subst">&#123;i&#125;</span>,绩效分<span class="subst">&#123;num&#125;</span>,不发工资下一位&quot;</span>)</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                accout -= <span class="number">1000</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;向员工<span class="subst">&#123;i&#125;</span>发放工资1000,账户余额还剩余<span class="subst">&#123;accout&#125;</span>元&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>: <span class="keyword">break</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;工资发完了，下个月领取吧！&quot;</span>)</span><br></pre></td></tr></table></figure><p>None</p><ul><li>用在函数无返回值上</li><li>用在if判断上<ul><li>在if判断上，None等同于False</li><li>一般用于在函数中主动返回None，配合if判断做相关处理</li></ul></li><li>用于声明无内容的变量上<ul><li>定义变量，但暂时不需要变量有具体值，可以用None来代替</li></ul></li></ul><p>global关键字，在函数内声明变量为全局变量</p><p>数据容器根据特点的不同：</p><ul><li>是否支持重复元素</li><li>是否可以修改</li><li>是否有序</li></ul><p>列表、元组、字符串、集合、字典</p><p>1.1 查找某元素在列表内下标索引</p><p>index  &#x3D; mylist.index()</p><p>1.2 修改特定下标索引的值</p><p>mylist[0] &#x3D; “”</p><p>1.3 在指定下标位置插入新元素</p><p>mylist.insert()</p><p>1.4 在列表的尾部追加单个新元素</p><p>mylist.append()</p><p>1.5 在列表尾部追加一批新元素</p><p>mylist2 &#x3D; []</p><p>mylist.extend(mylist2)</p><p>1.6 删除指定下标索引的元素（2种方式）</p><p>del mylist[2]    element &#x3D; mylist.pop(2)</p><p>1.7 删除某元素在列表中的第一个匹配项</p><p>mylist.remove</p><p>1.8 清空列表</p><p>mylist.clear()</p><p>1.9 统计列表内某元素的数量</p><p>count  &#x3D; mylist.count</p><p>1.10 统计列表内全部元素数量</p><p>count &#x3D; len(mylist)</p><p>元组一旦定义完成，就不可修改</p><p>应用场景：当我们需要在程序内封装数据，又不希望封装的数据被篡改，那么元组就非常适合</p><p>统计元组内的元素个数</p><p>len()</p><p>字符串是一个<strong>无法修改</strong>的数据容器</p><p>修改指定下标的字符+移除特定下标的字符+追加字符等都<strong>无法做到</strong></p><ul><li><p>查找特定字符串的下标索引</p><p>value &#x3D; my_str[-16] </p><p>负数代表从后向前找 </p><p>my_str.index()</p></li><li><p>字符串的替换</p><p>字符串的替换不是修改字符串本身，而是得到了一个新字符串</p><p>my_str.replace()</p></li><li><p>字符串的分割</p><p>字符串本身不变，而是得到了一个列表对象</p><p>my_str.strip() </p><p>不传入参数，去除首尾空格</p></li><li><p>字符串的规整操作</p><p>去空格：my_str_list &#x3D; my_str.split(“ “)</p><p>去字符串：my_str_list &#x3D; my_str.split(“12”)</p></li></ul><p>序列：内容连续、有序，可使用下标索引的一类数据容器</p><p>列表、元组、字符串均可以视为序列</p><p>切片不会影响序列本身，而是会得到新的序列</p><ul><li>添加新元素</li></ul><p>my_set.add(”Python“)</p><ul><li>移除元素</li></ul><p>my_set.remove()</p><ul><li>随机取出一个元素</li></ul><p>element &#x3D; my_set.pop()</p><ul><li>清空集合</li></ul><p>my_set.clear()</p><ul><li>取2个集合的差集</li></ul><p>set &#x3D; set1.difference(f”{set2}“)</p><ul><li>消除2个集合的差集</li></ul><p>set &#x3D; set1.difference_update(set2)</p><ul><li>2个集合合并为1个</li></ul><p>set3 &#x3D; set1.union(set2)</p><ul><li>统计集合元素数量len()</li></ul><p>len()</p><p>集合的遍历</p><p>集合不支持下标索引，不能用while循环</p><p>可以用for循环</p><p>定义重复key的字典</p><p>从字典中基于Key获取Value</p><ul><li>新增元素</li></ul><p>stu_score[“ “] &#x3D; 66</p><ul><li>更新元素</li></ul><p>stu_score[“ “] &#x3D; 66</p><p>注意：字典key不可以重复，所以对已存在的Key执行上述操作，就是更新Value值</p><ul><li>删除元素</li></ul><p>my_dict.pop()</p><ul><li>清空元素</li></ul><p>my_dict.clear()</p><ul><li>获取全部的key</li></ul><p>my_dict.keys()</p><ul><li>遍历字典</li></ul><p>for key in keys:</p><p>​字典的key：{key}</p><p>​字典的value：{my_dict[key]}</p><p>for key in my_dict:</p><p>​key:{key}</p><p>​value:{my_dict[key]}</p><ul><li>统计字典内的元素数量</li></ul><p>len()</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">my_dict = &#123;</span><br><span class="line">    <span class="string">&quot;王力宏&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;部门&quot;</span>:<span class="string">&quot;科技部&quot;</span>,</span><br><span class="line">        <span class="string">&quot;工资&quot;</span>:<span class="string">&quot;3000&quot;</span>,</span><br><span class="line">        <span class="string">&quot;级别&quot;</span>:<span class="string">&quot;1&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;周杰伦&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;部门&quot;</span>:<span class="string">&quot;市场部&quot;</span>,</span><br><span class="line">        <span class="string">&quot;工资&quot;</span>:<span class="string">&quot;5000&quot;</span>,</span><br><span class="line">        <span class="string">&quot;级别&quot;</span>:<span class="string">&quot;2&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;林俊杰&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;部门&quot;</span>:<span class="string">&quot;市场部&quot;</span>,</span><br><span class="line">        <span class="string">&quot;工资&quot;</span>:<span class="string">&quot;7000&quot;</span>,</span><br><span class="line">        <span class="string">&quot;级别&quot;</span>:<span class="string">&quot;3&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;张学友&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;部门&quot;</span>:<span class="string">&quot;科技部&quot;</span>,</span><br><span class="line">        <span class="string">&quot;工资&quot;</span>:<span class="string">&quot;4000&quot;</span>,</span><br><span class="line">        <span class="string">&quot;级别&quot;</span>:<span class="string">&quot;1&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;刘德华&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;部门&quot;</span>:<span class="string">&quot;市场部&quot;</span>,</span><br><span class="line">        <span class="string">&quot;工资&quot;</span>:<span class="string">&quot;6000&quot;</span>,</span><br><span class="line">        <span class="string">&quot;级别&quot;</span>:<span class="string">&quot;2&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> my_dict:</span><br><span class="line">    <span class="comment"># if找到符合条件的员工</span></span><br><span class="line">    <span class="keyword">if</span> my_dict[name][<span class="string">&quot;级别&quot;</span>] == <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 升值加薪的操作</span></span><br><span class="line">        <span class="comment"># 获取到员工的信息字典</span></span><br><span class="line">        employee = my_dict[name]</span><br><span class="line">        <span class="comment"># 修改员工信息</span></span><br><span class="line">        employee[<span class="string">&quot;级别&quot;</span>] = <span class="number">2</span></span><br><span class="line">        employee[<span class="string">&quot;工作&quot;</span>] += <span class="number">1000</span></span><br><span class="line">        <span class="comment"># 将员工的信息更新回my_dict</span></span><br><span class="line">        my_dict[name] = employee</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(my_dict)</span><br></pre></td></tr></table></figure><p>数据容器可以从以下视角进行简单的分类：</p><ul><li><p>是否支持下标索引</p><ul><li>支持：列表、元组、字符串 - 序列类型</li><li>不支持：集合、字典 + 非序列类型</li></ul></li><li><p>是否支持重复元素</p><ul><li>支持：列表、元组、字符串 - 序列类型</li><li>不支持：集合、字典 - 非序列类型</li></ul></li><li><p>是否可以修改</p><ul><li>支持：列表、集合、字典</li><li>不支持：元组、字符串</li></ul></li><li><p>列表：一批数据，可修改、可重复的存储场景</p></li><li><p>元组：一批数据，不可修改、可重复的存储场景</p></li><li><p>字符串：一串字符串的存储场景</p></li><li><p>集合：一批数据，去重存储场景</p></li><li><p>字典：一批数据，可用key检索Value的存储场景</p></li></ul><p>翻转左右label_opts&#x3D;LabelOpts（position&#x3D;”right”） </p><p> 创建时间线Timeline</p><p>设置自动播放</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">timeline.add_schema(</span><br><span class="line"></span><br><span class="line">play_interval=<span class="number">1000</span>,<span class="comment">#自动播放的时间间隔，单位毫秒</span></span><br><span class="line"></span><br><span class="line">is_timeline_show=<span class="literal">True</span>,<span class="comment">#是否在自动播放的时候，显示时间线</span></span><br><span class="line"></span><br><span class="line">is_auto_play=<span class="literal">True</span>,<span class="comment">#是否自动播放</span></span><br><span class="line"></span><br><span class="line">is_loop_play=<span class="literal">True</span><span class="comment">#是否循环自动播放</span></span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>在方法内部，想要访问类的成员变量，必须使用self</p><p> 为什么非要创建对象才能使用？</p><p>类只是一种程序内的“设计图纸”，需要基于图纸生产实体（对象），才能正常工作，这种套路称之为：面向对象编程</p><p>python类可以使用： <code>__init__（）</code>称之为构造方法</p><p><code>__str__（）</code>字符串方法 &#x2F;x</p><p> <code>__lt__（）</code>小于和大于符g                                                                                                                                                                                                     rtf</p><p>dx  a号比较方法</p><p> <code>__le__（）</code>小于等于和大于等于</p><p> <code>__eq__（）</code>比较运算符实现方法</p><p>pass关键字继承之后不想写新功能，防止报语法错误</p><p>多继承注意：多个父类中，如果有同名的成员，默认以继承顺序（从左到右）为优先级</p><p>先继承的保留，后继承的覆盖</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CET-4</title>
      <link href="/2022/10/25/CET-4/"/>
      <url>/2022/10/25/CET-4/</url>
      
        <content type="html"><![CDATA[<h1 id="CET-4"><a href="#CET-4" class="headerlink" title="CET-4"></a>CET-4</h1><h2 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h2><p>第一阶段的学习将持续到11月10日，学习内容主要是积累，听力+阅读的积累。</p><p>听力每日至少一集Lisa一集瑞秋，阅读每日五十单词，每两天一篇阅读<strong>精读</strong>。</p><h3 id="10月25号"><a href="#10月25号" class="headerlink" title="10月25号"></a>10月25号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input checked="" disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="10月26号"><a href="#10月26号" class="headerlink" title="10月26号"></a>10月26号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input checked="" disabled="" type="checkbox"> 瑞秋</li><li><input checked="" disabled="" type="checkbox"> 阅读精读</li></ul><h3 id="10月27号"><a href="#10月27号" class="headerlink" title="10月27号"></a>10月27号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input checked="" disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="10月28号"><a href="#10月28号" class="headerlink" title="10月28号"></a>10月28号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input checked="" disabled="" type="checkbox"> 瑞秋</li><li><input checked="" disabled="" type="checkbox"> 阅读精读</li></ul><h3 id="10月29号"><a href="#10月29号" class="headerlink" title="10月29号"></a>10月29号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input checked="" disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="10月30号"><a href="#10月30号" class="headerlink" title="10月30号"></a>10月30号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input checked="" disabled="" type="checkbox"> 瑞秋</li><li><input checked="" disabled="" type="checkbox"> 阅读精读</li></ul><h3 id="10月31号"><a href="#10月31号" class="headerlink" title="10月31号"></a>10月31号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input checked="" disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月01号"><a href="#11月01号" class="headerlink" title="11月01号"></a>11月01号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input checked="" disabled="" type="checkbox"> 瑞秋</li><li><input disabled="" type="checkbox"> 阅读精读</li></ul><h3 id="11月02号"><a href="#11月02号" class="headerlink" title="11月02号"></a>11月02号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月03号"><a href="#11月03号" class="headerlink" title="11月03号"></a>11月03号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li><li><input disabled="" type="checkbox"> 阅读精读</li></ul><h3 id="11月04号"><a href="#11月04号" class="headerlink" title="11月04号"></a>11月04号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月05号"><a href="#11月05号" class="headerlink" title="11月05号"></a>11月05号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li><li><input disabled="" type="checkbox"> 阅读精读</li></ul><h3 id="11月06号"><a href="#11月06号" class="headerlink" title="11月06号"></a>11月06号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月07号"><a href="#11月07号" class="headerlink" title="11月07号"></a>11月07号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li><li><input disabled="" type="checkbox"> 阅读精读</li></ul><h3 id="11月08号"><a href="#11月08号" class="headerlink" title="11月08号"></a>11月08号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月09号"><a href="#11月09号" class="headerlink" title="11月09号"></a>11月09号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li><li><input disabled="" type="checkbox"> 阅读精读</li></ul><h3 id="11月10号"><a href="#11月10号" class="headerlink" title="11月10号"></a>11月10号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h2 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h2><p>第二阶段的学习将持续到11月30日，学习规划是听力方面的主要内容是16&#x2F;18真题，<strong>精听</strong>。阅读是每天两篇<strong>计时</strong>练习&#x2F;总结生词+错题+技巧。</p><ul><li>泛听：<strong>盲听</strong>1~2遍，做题，<strong>不看原文</strong>，<strong>不看答案</strong></li><li>精听：从头放到尾，会的地方不用停，听不懂的地方，<strong>以单词和语音现象</strong>为单位，<strong>反复听</strong><ul><li>3~5遍懂了 - &gt; 不熟练&#x2F;发音错 -&gt; 记笔记 -&gt; <strong>跟读纠正</strong></li><li>5遍还没懂  - &gt; 生词没见过 -&gt; 看原文 -&gt; 记笔记</li></ul></li><li>复盘：对答案，找<strong>出题点</strong>，总结<strong>新学</strong>的单词和发音。</li></ul><h3 id="11月11号"><a href="#11月11号" class="headerlink" title="11月11号"></a>11月11号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> 计时阅读两篇</li><li><input disabled="" type="checkbox"> 精听16年第一套</li></ul><h3 id="11月12号"><a href="#11月12号" class="headerlink" title="11月12号"></a>11月12号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月13号"><a href="#11月13号" class="headerlink" title="11月13号"></a>11月13号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月14号"><a href="#11月14号" class="headerlink" title="11月14号"></a>11月14号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input checked="" disabled="" type="checkbox"> 精听16年第一套</li><li><input checked="" disabled="" type="checkbox"> 计时阅读两篇</li></ul><h3 id="11月15号"><a href="#11月15号" class="headerlink" title="11月15号"></a>11月15号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月16号"><a href="#11月16号" class="headerlink" title="11月16号"></a>11月16号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月17号"><a href="#11月17号" class="headerlink" title="11月17号"></a>11月17号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月18号"><a href="#11月18号" class="headerlink" title="11月18号"></a>11月18号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月19号"><a href="#11月19号" class="headerlink" title="11月19号"></a>11月19号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h3 id="11月20号"><a href="#11月20号" class="headerlink" title="11月20号"></a>11月20号</h3><ul><li><input disabled="" type="checkbox"> 五十单词</li><li><input disabled="" type="checkbox"> Lisa</li><li><input disabled="" type="checkbox"> 瑞秋</li></ul><h2 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h2><p>第三阶段的学习将直接持续到考试（12月10日）前，学习规划主要是阅读练习写5套<strong>真题</strong>+匹配题+有时间就练填空。听力<strong>计时</strong>完成18年以后的考试真题。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 应试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UCB CS61A</title>
      <link href="/2022/10/07/CS61A/"/>
      <url>/2022/10/07/CS61A/</url>
      
        <content type="html"><![CDATA[<h1 id="UCB-CS61A"><a href="#UCB-CS61A" class="headerlink" title="UCB CS61A"></a>UCB CS61A</h1><h2 id="1-Lectures"><a href="#1-Lectures" class="headerlink" title="1-Lectures"></a>1-Lectures</h2><h3 id="1-1-Lecture-1-Computer-Science"><a href="#1-1-Lecture-1-Computer-Science" class="headerlink" title="1.1 Lecture 1.Computer Science"></a>1.1 Lecture 1.Computer Science</h3><p>“Python like a prolifi bard.”</p><ul><li><p><em>Numeric expressions</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span></span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br><span class="line"></span><br><span class="line"><span class="number">2000</span> + <span class="number">20</span></span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br><span class="line"></span><br><span class="line">-<span class="number">1</span> + <span class="number">2</span> + <span class="number">3</span> + <span class="number">4</span> * ((<span class="number">5</span> // <span class="number">6</span>) + <span class="number">7</span> * <span class="number">8</span> * <span class="number">9</span>)</span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br></pre></td></tr></table></figure></li><li><p><em>Functions</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">abs</span>(-<span class="number">2</span>)</span><br><span class="line">&gt;&gt;<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">abs</span>(<span class="number">2301</span> - <span class="number">4321</span>)</span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br></pre></td></tr></table></figure><p>tips:abs函数为返回数字的绝对值 </p></li><li><p><em>Values</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Go Bears&quot;</span></span><br><span class="line">&gt;&gt;<span class="string">&quot;Go Bears&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;Gob&quot;</span> + <span class="string">&quot;ears&quot;</span></span><br><span class="line">&gt;&gt;<span class="string">&quot;Gobears&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><em>Objects</em></p></li><li><p>*Note: Download from <a href="http://composingprograms.com/shakespeare.txt">http://composingprograms.com/shakespeare.txt</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">shakes = <span class="built_in">open</span>(<span class="string">&#x27;shakespeare.txt&#x27;</span>)</span><br><span class="line">text = shakes.read().split()</span><br><span class="line"><span class="built_in">len</span>(text)</span><br><span class="line">text[:<span class="number">25</span>]</span><br><span class="line">text.count(<span class="string">&#x27;the&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;thou&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;you&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;forsooth&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;,&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p><em>Sets</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">words = <span class="built_in">set</span>(text)</span><br><span class="line"><span class="built_in">len</span>(words)</span><br></pre></td></tr></table></figure></li><li><p><em>Combinations</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;draw&#x27;</span></span><br><span class="line">&gt;&gt;<span class="string">&#x27;draw&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;draw&#x27;</span>[<span class="number">0</span>]</span><br><span class="line">&gt;&gt;<span class="string">&#x27;d&#x27;</span></span><br><span class="line"></span><br><span class="line">&#123;w[<span class="number">0</span>] <span class="keyword">for</span> w <span class="keyword">in</span> words&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>Data</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;draw&#x27;</span>[::-<span class="number">1</span>]</span><br><span class="line">&gt;&gt;<span class="string">&#x27;ward&#x27;</span></span><br><span class="line"></span><br><span class="line">&#123;w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w == w[::-<span class="number">1</span>] <span class="keyword">and</span> <span class="built_in">len</span>(w)&gt;<span class="number">4</span>&#125;</span><br><span class="line">&gt;&gt;</span><br><span class="line"></span><br><span class="line">&#123;w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w[::-<span class="number">1</span>] <span class="keyword">in</span> words <span class="keyword">and</span> <span class="built_in">len</span>(w) == <span class="number">4</span>&#125;</span><br><span class="line">&gt;&gt;</span><br><span class="line"></span><br><span class="line">&#123;w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w[::-<span class="number">1</span>] <span class="keyword">in</span> words <span class="keyword">and</span> <span class="built_in">len</span>(w) &gt; <span class="number">6</span>&#125;</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop【连载中】</title>
      <link href="/2022/10/07/Hadoop/"/>
      <url>/2022/10/07/Hadoop/</url>
      
        <content type="html"><![CDATA[<h1 id="Hadoop"><a href="#Hadoop" class="headerlink" title="Hadoop"></a>Hadoop</h1><p>Hadoop的优势（4高）</p><p>1）高可靠性：Hadoop底层维护多个数据副本，所以即使Hadoop某个计算元素或存储出现故障，也不会导致数据丢失。</p><p>2）高扩展性：在集群间分配任务数据，可方便的扩展数以千计的节点。</p><p>3）高效性：在MapReduce的思想下，Hadoop是并行工作的，以加快任务处理速度。</p><p>4）高容错性：能够自动将失败的任务重新分配。</p><p>Hadoop1.x和Hadoop2.x区别</p><p>在Hadoop1.x时代，Hadoop中的MapReduce同时处理业务逻辑运算和资源的调度，耦合性较大，在Hadoop2.x时代，增加了Yarn。Yarn只负责资源的调度，MapReduce只负责运算。</p><p>HDFS架构概述</p><p>1）NameNode（nn）：存储文件的元数据，如文件名，文件目录结构，文件属性（生成时间、副本数、文件权限），以及每个文件的块列表和块所在的DataNode等。</p><p>2）DataNode（dn）：在本地文件系统存储文件块数据，以及块数据的校验和。</p><p>3）SecondaryName Node（2nn）：每隔一段时间对NameNode元数据备份。</p><p>YARN架构</p>]]></content>
      
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硅谷课堂【上】</title>
      <link href="/2022/10/07/%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82/"/>
      <url>/2022/10/07/%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82/</url>
      
        <content type="html"><![CDATA[<h3 id="一、搭建项目工程"><a href="#一、搭建项目工程" class="headerlink" title="一、搭建项目工程"></a>一、搭建项目工程</h3><h4 id="1、项目数据库设计"><a href="#1、项目数据库设计" class="headerlink" title="1、项目数据库设计"></a>1、项目数据库设计</h4><h5 id="1-1、创建数据库和表"><a href="#1-1、创建数据库和表" class="headerlink" title="1.1、创建数据库和表"></a>1.1、创建数据库和表</h5><p><img src="/1665794310601.png" alt="1665794310601"></p><p>前半段视频使用<code>ggkt_vod.sql</code>，浅浅分析一下建表细节。</p><p><img src="/img" alt="1665827555419"></p><p>主键id自动增长，无符号，无默认。课程id无自动增长，无符号，默认为0。章节名称无默认，字符集utf8mb4，排序规则utf8mb4_0900_ai_ci。显示排序无自动增长，无符号，默认为0。创建时间默认为CURRENT_TIMESTAMP，不跟据当前时间戳更新。修改时间默认为CURRENT_TIMESTAMP，根据当前时间戳更新。逻辑删除标志，默认为0，其他全无。</p><h5 id="1-2、数据库设计规则"><a href="#1-2、数据库设计规则" class="headerlink" title="1.2、数据库设计规则"></a>1.2、数据库设计规则</h5><p>更全面的文档参考<a href="https://www.w3cschool.cn/alibaba_java/">《阿里巴巴 Java开发手册》</a></p><h4 id="2、创建父工程"><a href="#2、创建父工程" class="headerlink" title="2、创建父工程"></a>2、创建父工程</h4><h5 id="2-1、创建父工程edu-online-springboot父工程，聚合其他模块，统一管理依赖版本贺放公共依赖"><a href="#2-1、创建父工程edu-online-springboot父工程，聚合其他模块，统一管理依赖版本贺放公共依赖" class="headerlink" title="2.1、创建父工程edu_online(springboot父工程，聚合其他模块，统一管理依赖版本贺放公共依赖)"></a>2.1、创建父工程edu_online(springboot父工程，聚合其他模块，统一管理依赖版本贺放公共依赖)</h5><h5 id="2-2、删除src目录（父工程仅作聚合使用）"><a href="#2-2、删除src目录（父工程仅作聚合使用）" class="headerlink" title="2.2、删除src目录（父工程仅作聚合使用）"></a>2.2、删除src目录（父工程仅作聚合使用）</h5><h5 id="2-3、引入依赖"><a href="#2-3、引入依赖" class="headerlink" title="2.3、引入依赖"></a>2.3、引入依赖</h5><p>修改SpringBoot版本为 ：2.2.1.RELEASE</p><p><img src="/.%5Cimg%5C1665918781647.png" alt="1665918781647"></p><p><strong>添加依赖</strong></p><p><em><strong>ps：有些依赖爆红也不用紧张，随后在整合过程中会逐步导包。</strong></em></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cloud.version</span>&gt;</span>Hoxton.RELEASE<span class="tag">&lt;/<span class="name">cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">alibaba.version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">alibaba.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mybatis-plus.version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">mybatis-plus.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>8.0.26<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">swagger.version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">swagger.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jwt.version</span>&gt;</span>0.7.0<span class="tag">&lt;/<span class="name">jwt.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.29<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.5.1<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">easyexcel.version</span>&gt;</span>2.2.0-beta2<span class="tag">&lt;/<span class="name">easyexcel.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun.version</span>&gt;</span>4.5.14<span class="tag">&lt;/<span class="name">aliyun.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jodatime.version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">jodatime.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jwt.version</span>&gt;</span>0.7.0<span class="tag">&lt;/<span class="name">jwt.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xxl-job.version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">xxl-job.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun.oss.version</span>&gt;</span>3.9.0<span class="tag">&lt;/<span class="name">aliyun.oss.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置dependencyManagement锁定依赖的版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mybatis-plus 持久层--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-plus.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jwt.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;httpclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;easyexcel.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--aliyunOSS--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun.oss.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--日期时间工具--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jodatime.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xuxueli<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xxl-job-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;xxl-job.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--swagger ui--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3、创建model模块"><a href="#3、创建model模块" class="headerlink" title="3、创建model模块"></a>3、创建model模块</h4><h5 id="3-1、创建子模块model（表对应实体类贺公共枚举类等）"><a href="#3-1、创建子模块model（表对应实体类贺公共枚举类等）" class="headerlink" title="3.1、创建子模块model（表对应实体类贺公共枚举类等）"></a>3.1、创建子模块model（表对应实体类贺公共枚举类等）</h5><p>ps：有可能会遇到创建模块之后文件都没有变色，选择添加maven框架支持，报出下面错误（仅截取部分）。<img src="/.%5Cimg%5C1665919071470.png" alt="1665919071470"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java.lang.RuntimeException: java.lang.RuntimeException: org.codehaus.plexus.component.repository.exception.ComponentLookupException: com.google.inject.ProvisionException: Unable to provision, see the following errors:</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>) Error injecting constructor, java.lang.NoSuchMethodError: org.apache.maven.model.validation.DefaultModelValidator: method &lt;init&gt;()V not found</span><br><span class="line">  at org.jetbrains.idea.maven.server.embedder.CustomModelValidator.&lt;init&gt;(Unknown Source)</span><br><span class="line">  <span class="keyword">while</span> locating org.jetbrains.idea.maven.server.embedder.CustomModelValidator</span><br><span class="line">  at ClassRealm[plexus.core, parent: <span class="literal">null</span>] (via modules: org.eclipse.sisu.wire.WireModule -&gt; org.eclipse.sisu.plexus.PlexusBindingModule)</span><br><span class="line">  <span class="keyword">while</span> locating org.apache.maven.model.validation.ModelValidator annotated with <span class="meta">@com</span>.google.inject.name.Named(value=ide)</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> error</span><br><span class="line">      role: org.apache.maven.model.validation.ModelValidator</span><br><span class="line">  roleHint: ide</span><br><span class="line">at org.jetbrains.idea.maven.server.Maven3XServerEmbedder.getComponent(Maven3XServerEmbedder.java:<span class="number">488</span>)</span><br><span class="line">      ......</span><br></pre></td></tr></table></figure><p>检查maven路径，是否是最常用的版本，我一般用3.6.1。如果maven版本太高，比如3.8.X都会出现该错误。</p><p><em><strong>网上查询之后都是说 ide跟 maven版本不兼容，最后我找出来的情况其实是创建父工程 springboot本身就没创建好，使用了之前创建的 springboot模板，再创建 maven子模块没有再报错。</strong></em></p><h5 id="3-2、引入依赖"><a href="#3-2、引入依赖" class="headerlink" title="3.2、引入依赖"></a>3.2、引入依赖</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--在引用时请在maven中央仓库搜索2.X最新版本号--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--创建索引库的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-3、复制model代码"><a href="#3-3、复制model代码" class="headerlink" title="3.3、复制model代码"></a>3.3、复制model代码</h5><p>这里后期补充一下解析</p><h4 id="4、创建service模块"><a href="#4、创建service模块" class="headerlink" title="4、创建service模块"></a>4、创建service模块</h4><h5 id="4-1、创建子模块service"><a href="#4-1、创建子模块service" class="headerlink" title="4.1、创建子模块service"></a>4.1、创建子模块service</h5><h5 id="4-2、service模块引入依赖"><a href="#4-2、service模块引入依赖" class="headerlink" title="4.2、service模块引入依赖"></a>4.2、service模块引入依赖</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据载体--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cimaog<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--web 需要启动项目--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--        &amp;lt;!&amp;ndash; 服务注册 &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--        &amp;lt;!&amp;ndash; 服务调用feign &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--        &amp;lt;!&amp;ndash; 流量控制 &amp;ndash;&amp;gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-alibaba-sentinel&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开发者工具--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ps：要把nacos、Feign和sentinel的依赖都注释掉，不然会影响我们正常启动程序。</p><h4 id="5、创建service-vod模块"><a href="#5、创建service-vod模块" class="headerlink" title="5、创建service_vod模块"></a>5、创建service_vod模块</h4><p><strong>在service模块中创建子模块service_vod</strong></p><h4 id="6、创建common模块"><a href="#6、创建common模块" class="headerlink" title="6、创建common模块"></a>6、创建common模块</h4><h5 id="6-1、创建子模块common，继承于父工程"><a href="#6-1、创建子模块common，继承于父工程" class="headerlink" title="6.1、创建子模块common，继承于父工程"></a>6.1、创建子模块common，继承于父工程</h5><h5 id="6-2、common模块引入依赖"><a href="#6-2、common模块引入依赖" class="headerlink" title="6.2、common模块引入依赖"></a>6.2、common模块引入依赖</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided <span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="6-3、在common模块下创建子模块service-utils"><a href="#6-3、在common模块下创建子模块service-utils" class="headerlink" title="6.3、在common模块下创建子模块service_utils"></a>6.3、在common模块下创建子模块service_utils</h5><h5 id="6-3、在service-utils模块下创建swagger配置类"><a href="#6-3、在service-utils模块下创建swagger配置类" class="headerlink" title="6.3、在service_utils模块下创建swagger配置类"></a>6.3、在service_utils模块下创建swagger配置类</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cimaog.cmjy.config.swagger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Swagger2Config</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">webApiConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">&quot;cmjy&quot;</span>)</span><br><span class="line">                .apiInfo(webApiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                <span class="comment">//只显示api路径下的页面</span></span><br><span class="line">                <span class="comment">//.paths(Predicates.and(PathSelectors.regex(&quot;/api/.*&quot;)))</span></span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApiInfo <span class="title function_">webApiInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">                .title(<span class="string">&quot;网站-API文档&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;本文档描述了网站微服务接口定义&quot;</span>)</span><br><span class="line">                .version(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">                .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>(<span class="string">&quot;ciamog&quot;</span>, <span class="string">&quot;http://cimaog.top&quot;</span>, <span class="string">&quot;295376682@qq.com&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-4、在service模块下导入service-utils的依赖（仿照进入model的格式写）"><a href="#6-4、在service模块下导入service-utils的依赖（仿照进入model的格式写）" class="headerlink" title="6.4、在service模块下导入service_utils的依赖（仿照进入model的格式写）"></a>6.4、在service模块下导入service_utils的依赖（仿照进入model的格式写）</h5><h5 id="6-5、最重要的一步是在启动类上写上一个包扫描注解"><a href="#6-5、最重要的一步是在启动类上写上一个包扫描注解" class="headerlink" title="6.5、最重要的一步是在启动类上写上一个包扫描注解"></a>6.5、最重要的一步是在启动类上写上一个包扫描注解</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cimaog.cmjy.vod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Cimaog</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/16 21:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.cimaog&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServiceVodApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ServiceVodApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-6、启动测试"><a href="#6-6、启动测试" class="headerlink" title="6.6、启动测试"></a>6.6、启动测试</h5><p><img src="/.%5Cimg%5C1665965778002.png" alt="1665965778002"></p><h3 id="二、后台管理系统-讲师管理接口"><a href="#二、后台管理系统-讲师管理接口" class="headerlink" title="二、后台管理系统-讲师管理接口"></a>二、后台管理系统-讲师管理接口</h3><h4 id="1、讲师管理模块需求"><a href="#1、讲师管理模块需求" class="headerlink" title="1、讲师管理模块需求"></a>1、讲师管理模块需求</h4><p>添加课程时候，需要选择所属讲师，所以要对讲师进行管理，就是基于讲师的CRUD操作</p><h4 id="2、讲师管理模块配置"><a href="#2、讲师管理模块配置" class="headerlink" title="2、讲师管理模块配置"></a>2、讲师管理模块配置</h4><h5 id="2-1、生成模块代码"><a href="#2-1、生成模块代码" class="headerlink" title="2.1、生成模块代码"></a>2.1、生成模块代码</h5><p><strong>（1）引入代码生成器依赖</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>（2）复制生成代码工具类</strong></p><p>修改代码中路径、数据库、包和表，复制到test目录下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cimaog;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">projectPath</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        <span class="comment">//gc.setOutputDir(projectPath + &quot;/src/main/java&quot;);</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//  ※※※ 这个地方要修改路径 ※※※</span></span><br><span class="line">        </span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\subject\\edu_online\\service\\service_vod&quot;</span>+<span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line"></span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);    <span class="comment">//去掉Service接口的首字母I</span></span><br><span class="line">        gc.setAuthor(<span class="string">&quot;atcimaog&quot;</span>);</span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  ※※※ 这个地方要修改密码，不然会报一个localhost@XXX&#x27;Yes&#x27;的异常 ※※※</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/glkt_vod?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line"></span><br><span class="line">        pc.setParent(<span class="string">&quot;com.cimaog.cmjy&quot;</span>);</span><br><span class="line">        pc.setModuleName(<span class="string">&quot;vod&quot;</span>); <span class="comment">//模块名</span></span><br><span class="line"></span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  ※※※ 这个地方要修改成表名 ※※※</span></span><br><span class="line">        </span><br><span class="line">        strategy.setInclude(<span class="string">&quot;teacher&quot;</span>);  </span><br><span class="line"></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//数据库表映射到实体的命名策略</span></span><br><span class="line"></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//数据库表字段映射到实体的命名策略</span></span><br><span class="line">        </span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>); </span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line"></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>); <span class="comment">//restful api风格控制器</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>); <span class="comment">//url中驼峰转连字符</span></span><br><span class="line"></span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（3）实体类统一替换为model模块的实体类</strong></p><p><img src="/.%5Cimg%5C1665922527208.png" alt="1665922527208"></p><p><em><strong>ps：按照视频操作可能会出现以下问题，解决方法就是把mapper中的实体类引用也改成需要的。</strong></em></p><p><img src="/.%5Cimg%5C1665923284715.png" alt="1665923284715"></p><h4 id="3、查询所有讲师列表接口"><a href="#3、查询所有讲师列表接口" class="headerlink" title="3、查询所有讲师列表接口"></a>3、查询所有讲师列表接口</h4><h5 id="3-1、编写controller"><a href="#3-1、编写controller" class="headerlink" title="3.1、编写controller"></a>3.1、编写controller</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 讲师 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> atcimaog</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2022-10-16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/admin/vod/teacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TeacherController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TeacherService teacherService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;findAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Teacher&gt; <span class="title function_">findAll</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;Teacher&gt; findAllTeacher = teacherService.list();</span><br><span class="line">        <span class="keyword">return</span> findAllTeacher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-2、编写配置类"><a href="#3-2、编写配置类" class="headerlink" title="3.2、编写配置类"></a>3.2、编写配置类</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cimaog.cmjy.vod.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Cimaog</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/16 21:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.cimaog.cmjy.vod.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VodConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-3、运行启动类"><a href="#3-3、运行启动类" class="headerlink" title="3.3、运行启动类"></a>3.3、运行启动类</h5><p>访问<a href="http://localhost:8301/admin/vod/teacher/findAll">http://localhost:8301/admin/vod/teacher/findAll</a></p><p>ps：启动之后出现下面这个错误单纯是因为配置文件<code>application.properties</code>的时候没修改数据库密码，但是我在修复bug的过程中修改了mysql的版本，改成8.0.26版本的了，于是数据源那边做了修改。从<code>com.mysql.jdbc.Driver</code>修改成<code>com.mysql.cj.jdbc.Driver</code>。</p><p><img src="/.%5Cimg%5C1665926785733.png" alt="1665926785733"></p><p>修改之后完美启动</p><p><img src="/.%5Cimg%5C1665928470690.png" alt="1665928470690"></p><h4 id="4、逻辑删除讲师接口"><a href="#4、逻辑删除讲师接口" class="headerlink" title="4、逻辑删除讲师接口"></a>4、逻辑删除讲师接口</h4><h5 id="4-1、编写controller"><a href="#4-1、编写controller" class="headerlink" title="4.1、编写controller"></a>4.1、编写controller</h5><p>TeacherController添加删除方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping(value = &quot;remove/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteTeacher</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isSuccess</span> <span class="operator">=</span> teacherService.removeById(id);</span><br><span class="line">    <span class="keyword">return</span> isSuccess;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-2、启用swagger测试方法"><a href="#4-2、启用swagger测试方法" class="headerlink" title="4.2、启用swagger测试方法"></a>4.2、启用swagger测试方法</h5><p><img src="/.%5Cimg%5C1665969140365.png" alt="1665969140365"></p><h4 id="6、定义统一返回结果对象"><a href="#6、定义统一返回结果对象" class="headerlink" title="6、定义统一返回结果对象"></a>6、定义统一返回结果对象</h4><p>因为在实际开发过程中，每个人对于统一返回类型的的想法不一样，为了统一接口，定义统一返回结果对象。</p><h5 id="6-1、创建结果类"><a href="#6-1、创建结果类" class="headerlink" title="6.1、创建结果类"></a>6.1、创建结果类</h5><p><strong>在service_utils模块创建interfacle定义返回状态码</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cimaog.cmjy.config.result;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Cimaog</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>  统一返回结果状态信息类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/17 9:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ResultCodeEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    SUCCESS(<span class="number">200</span>,<span class="string">&quot;成功&quot;</span>),</span><br><span class="line">    FAIL(<span class="number">201</span>, <span class="string">&quot;失败&quot;</span>),</span><br><span class="line">    SERVICE_ERROR(<span class="number">2012</span>, <span class="string">&quot;服务异常&quot;</span>),</span><br><span class="line">    DATA_ERROR(<span class="number">204</span>, <span class="string">&quot;数据异常&quot;</span>),</span><br><span class="line">    ILLEGAL_REQUEST(<span class="number">205</span>, <span class="string">&quot;非法请求&quot;</span>),</span><br><span class="line">    REPEAT_SUBMIT(<span class="number">206</span>, <span class="string">&quot;重复提交&quot;</span>),</span><br><span class="line"></span><br><span class="line">    LOGIN_AUTH(<span class="number">208</span>, <span class="string">&quot;未登陆&quot;</span>),</span><br><span class="line">    PERMISSION(<span class="number">209</span>, <span class="string">&quot;没有权限&quot;</span>),</span><br><span class="line"></span><br><span class="line">    PHONE_CODE_ERROR(<span class="number">211</span>, <span class="string">&quot;手机验证码错误&quot;</span>),</span><br><span class="line"></span><br><span class="line">    MTCLOUD_ERROR(<span class="number">210</span>, <span class="string">&quot;直播接口异常&quot;</span>),</span><br><span class="line"></span><br><span class="line">    COUPON_GET(<span class="number">220</span>, <span class="string">&quot;优惠券已经领取&quot;</span>),</span><br><span class="line">    COUPON_LIMIT_GET(<span class="number">221</span>, <span class="string">&quot;优惠券已发放完毕&quot;</span>),</span><br><span class="line"></span><br><span class="line">    FILE_UPLOAD_ERROR( <span class="number">21004</span>, <span class="string">&quot;文件上传错误&quot;</span>),</span><br><span class="line">    FILE_DELETE_ERROR( <span class="number">21005</span>, <span class="string">&quot;文件刪除错误&quot;</span>),</span><br><span class="line"></span><br><span class="line">    VOD_PALY_ERROR(<span class="number">209</span>, <span class="string">&quot;请购买后观看&quot;</span>),;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ResultCodeEnum</span><span class="params">(Integer code, String message)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>在service_utils模块创建结果类</strong> </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cimaog.cmjy.config.result;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局统一返回结果类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(value = &quot;全局统一返回结果&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回消息&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回数据&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">build</span><span class="params">(T body, Integer code, String message)</span> &#123;</span><br><span class="line">        Result&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">Result</span>&lt;T&gt;();</span><br><span class="line">        <span class="keyword">if</span> (body != <span class="literal">null</span>) &#123;</span><br><span class="line">            result.setData(body);</span><br><span class="line">        &#125;</span><br><span class="line">        result.setCode(code);</span><br><span class="line">        result.setMessage(message);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="title function_">ok</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.ok(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作成功</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data  baseCategory1List</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="title function_">ok</span><span class="params">(T data)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> build(data,<span class="number">200</span>,<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="title function_">fail</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.fail(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作失败</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>&lt;T&gt; Result&lt;T&gt; <span class="title function_">fail</span><span class="params">(T data)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> build(data, <span class="number">201</span>,<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Result&lt;T&gt; <span class="title function_">message</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setMessage(msg);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Result&lt;T&gt; <span class="title function_">code</span><span class="params">(Integer code)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setCode(code);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-2、修改controller返回结果"><a href="#6-2、修改controller返回结果" class="headerlink" title="6.2、修改controller返回结果"></a>6.2、修改controller返回结果</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cimaog.cmjy.vod.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ciamog.cmjy.model.vod.Teacher;</span><br><span class="line"><span class="keyword">import</span> com.cimaog.cmjy.config.result.Result;</span><br><span class="line"><span class="keyword">import</span> com.cimaog.cmjy.vod.service.TeacherService;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 讲师 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> atcimaog</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2022-10-16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;讲师管理接口&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(value=&quot;/admin/vod/teacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TeacherController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TeacherService teacherService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1 查询所有讲师</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;查询所有讲师&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;findAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">findAllTeacher</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//调用service方法</span></span><br><span class="line">        List&lt;Teacher&gt; list = teacherService.list();</span><br><span class="line">        <span class="keyword">return</span> Result.ok(list).message(<span class="string">&quot;查询数据成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// remove/1</span></span><br><span class="line">    <span class="comment">//2 逻辑删除讲师</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;逻辑删除讲师&quot;)</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;remove/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">removeTeacher</span><span class="params">(<span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;ID&quot;, required = true)</span></span></span><br><span class="line"><span class="params">                                <span class="meta">@PathVariable</span> Long id)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isSuccess</span> <span class="operator">=</span> teacherService.removeById(id);</span><br><span class="line">        <span class="keyword">if</span>(isSuccess) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.ok(<span class="literal">null</span>);    <span class="comment">//后面也可以跟.message(&quot;查询数据成功&quot;)</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.fail(<span class="literal">null</span>);  <span class="comment">//后面也可以跟.message(&quot;查询数据失败&quot;)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-3、启动测试"><a href="#6-3、启动测试" class="headerlink" title="6.3、启动测试"></a>6.3、启动测试</h5><p><img src="/.%5Cimg%5C1665973308475.png" alt="1665973308475"></p><p><em><strong>ps：测试的是时候控制台出现以下错误。可能是重启项目的时候 ide自动修改设置，jdk默认为了 15，然后控制台报错，显示 jdk版本过高。修改 bug如下图所示，选择 jdk为 1.8的版本。</strong></em></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">WARNING: An illegal reflective access operation has occurred</span><br><span class="line">WARNING: Illegal reflective access by org.springframework.cglib.core.ReflectUtils (file:/D:/learn/Heima/day04-MavenMyBatis/apache-maven-<span class="number">3.6</span><span class="number">.1</span>/mvn_resp/org/springframework/spring-core/<span class="number">5.2</span><span class="number">.1</span>.RELEASE/spring-core-<span class="number">5.2</span><span class="number">.1</span>.RELEASE.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,<span class="type">byte</span>[],<span class="type">int</span>,<span class="type">int</span>,java.security.ProtectionDomain)</span><br><span class="line">WARNING: Please consider reporting <span class="built_in">this</span> to the maintainers of org.springframework.cglib.core.ReflectUtils</span><br><span class="line">WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations</span><br><span class="line">WARNING: All illegal access operations will be denied in a future release</span><br></pre></td></tr></table></figure><p><img src="/.%5Cimg%5C1665973755322.png" alt="1665973755322"></p><h4 id="7、条件分页查询讲师列表接口"><a href="#7、条件分页查询讲师列表接口" class="headerlink" title="7、条件分页查询讲师列表接口"></a>7、条件分页查询讲师列表接口</h4><h5 id="7-1、创建配置类"><a href="#7-1、创建配置类" class="headerlink" title="7.1、创建配置类"></a>7.1、创建配置类</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Cimaog</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/16 21:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.cimaog.cmjy.vod.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VodConfig</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页插件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-2、查询条件对象TeacherQueryVo"><a href="#7-2、查询条件对象TeacherQueryVo" class="headerlink" title="7.2、查询条件对象TeacherQueryVo"></a>7.2、查询条件对象TeacherQueryVo</h5><p>在之前model模块中已经从资料包中复制的话，就可以不用再自己创建了。</p><h5 id="7-3、创建条件查询带分页的方法"><a href="#7-3、创建条件查询带分页的方法" class="headerlink" title="7.3、创建条件查询带分页的方法"></a>7.3、创建条件查询带分页的方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//条件查询分页列表</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;获取分页列表&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;&#123;limit&#125;/&#123;page&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">index</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;page&quot;, value = &quot;当前页码&quot;, required = true)</span></span></span><br><span class="line"><span class="params">        <span class="meta">@PathVariable</span> Long page,</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;limit&quot;, value = &quot;每页记录数&quot;, required = true)</span></span></span><br><span class="line"><span class="params">        <span class="meta">@PathVariable</span> Long limit,</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;teacherVo&quot;, value = &quot;查询对象&quot;, required = false)</span></span></span><br><span class="line"><span class="params">        <span class="meta">@RequestBody(required = false)</span> TeacherQueryVo teacherQueryVo)</span> &#123;</span><br><span class="line">    <span class="comment">//创建page对象，传递当前页和每页记录数</span></span><br><span class="line">    Page&lt;Teacher&gt; pageParam = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line">    <span class="comment">//获取条件值</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> teacherQueryVo.getName();<span class="comment">//讲师名称</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">level</span> <span class="operator">=</span> teacherQueryVo.getLevel();<span class="comment">//讲师级别</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">joinDateBegin</span> <span class="operator">=</span> teacherQueryVo.getJoinDateBegin();<span class="comment">//开始时间</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">joinDateEnd</span> <span class="operator">=</span> teacherQueryVo.getJoinDateEnd();<span class="comment">//结束时间</span></span><br><span class="line">    <span class="comment">//封装条件</span></span><br><span class="line">    QueryWrapper&lt;Teacher&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(name)) &#123;</span><br><span class="line">        wrapper.like(<span class="string">&quot;name&quot;</span>,name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(level)) &#123;</span><br><span class="line">        wrapper.eq(<span class="string">&quot;level&quot;</span>,level);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(joinDateBegin)) &#123;</span><br><span class="line">        wrapper.ge(<span class="string">&quot;join_date&quot;</span>,joinDateBegin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(joinDateEnd)) &#123;</span><br><span class="line">        wrapper.le(<span class="string">&quot;join_date&quot;</span>,joinDateEnd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//调用方法得到分页查询结果</span></span><br><span class="line">    IPage&lt;Teacher&gt; pageModel = teacherService.page(pageParam, wrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.ok(pageModel);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>ps：这个 StringUtils的导包，我使用的是 maven仓库下， springboot 5.X版本的 utils。当我使用阿帕奇和苞米豆版本的，在 level那个 isEmpty都会报红。</strong></em></p><p><strong>@RequestBody</strong>(required &#x3D; false) TeacherQueryVo teacherQueryVo</p><ul><li>提交参数以json格式提交</li><li>条件值可以为空</li><li>和post提交一起使用</li></ul><h5 id="7-4、测试方法"><a href="#7-4、测试方法" class="headerlink" title="7.4、测试方法"></a>7.4、测试方法</h5><p><img src="/.%5Cimg%5C1666002739415.png" alt="1666002739415"></p><p><em><strong>ps：测试倒是成功了，但是控制台一打开 swagger就报如下的警告，从网上搜了解决方法也没有成功解决</strong></em></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">2022</span>-<span class="number">10</span>-<span class="number">17</span> <span class="number">18</span>:<span class="number">29</span>:<span class="number">32.907</span>  WARN <span class="number">12296</span> --- [nio-<span class="number">8301</span>-exec-<span class="number">9</span>] i.s.m.p.AbstractSerializableParameter    : Illegal DefaultValue <span class="literal">null</span> <span class="keyword">for</span> parameter type integer</span><br><span class="line"></span><br><span class="line">java.lang.NumberFormatException: For input string: <span class="string">&quot;&quot;</span></span><br><span class="line">at java.lang.NumberFormatException.forInputString(NumberFormatException.java:<span class="number">65</span>) ~[na:<span class="number">1.8</span><span class="number">.0_131</span>]</span><br><span class="line">at java.lang.Long.parseLong(Long.java:<span class="number">601</span>) ~[na:<span class="number">1.8</span><span class="number">.0_131</span>]</span><br><span class="line">at java.lang.Long.valueOf(Long.java:<span class="number">803</span>) ~[na:<span class="number">1.8</span><span class="number">.0_131</span>]</span><br></pre></td></tr></table></figure><h4 id="8、新增讲师接口"><a href="#8、新增讲师接口" class="headerlink" title="8、新增讲师接口"></a>8、新增讲师接口</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//4 新增讲师接口</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;新增讲师&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;saveTeacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> Teacher teacher)</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isSuccess</span> <span class="operator">=</span> teacherService.save(teacher);</span><br><span class="line">    <span class="keyword">if</span>(isSuccess) &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.ok(<span class="literal">null</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.fail(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9、修改讲师接口"><a href="#9、修改讲师接口" class="headerlink" title="9、修改讲师接口"></a>9、修改讲师接口</h4><h5 id="9-1、编写获取id的方法"><a href="#9-1、编写获取id的方法" class="headerlink" title="9.1、编写获取id的方法"></a>9.1、编写获取id的方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//5 修改-根据id查询</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;查询讲师id&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;getTeacher/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">getTeacher</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span>&#123;</span><br><span class="line">    <span class="type">Teacher</span> <span class="variable">teacher</span> <span class="operator">=</span> teacherService.getById(id);</span><br><span class="line">    <span class="keyword">return</span> Result.ok(teacher);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="9-2、编写最后根据id修改的方法"><a href="#9-2、编写最后根据id修改的方法" class="headerlink" title="9.2、编写最后根据id修改的方法"></a>9.2、编写最后根据id修改的方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//6 修改-根据id修改</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;修改讲师&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;updateTeacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">updateTeacher</span><span class="params">(<span class="meta">@RequestBody</span> Teacher teacher)</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isSuccess</span> <span class="operator">=</span> teacherService.updateById(teacher);</span><br><span class="line">    <span class="keyword">if</span>(isSuccess) &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.ok(<span class="literal">null</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.fail(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="9-3、测试成功"><a href="#9-3、测试成功" class="headerlink" title="9.3、测试成功"></a>9.3、测试成功</h5><p><img src="/.%5Cimg%5C1666009730372.png" alt="1666009730372"></p><h4 id="10、修改讲师接口"><a href="#10、修改讲师接口" class="headerlink" title="10、修改讲师接口"></a>10、修改讲师接口</h4><h5 id="10-1、编写获取id的方法"><a href="#10-1、编写获取id的方法" class="headerlink" title="10.1、编写获取id的方法"></a>10.1、编写获取id的方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//7 批量删除</span></span><br><span class="line"><span class="meta">@ApiOperation(&quot;批量删除讲师&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;removeBatch&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">removeBatch</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;Long&gt; idList)</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isSuccess</span> <span class="operator">=</span> teacherService.removeByIds(idList);</span><br><span class="line">    <span class="keyword">if</span>(isSuccess) &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.ok(<span class="literal">null</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.fail(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="10-2、报错了但是结果正常了"><a href="#10-2、报错了但是结果正常了" class="headerlink" title="10.2、报错了但是结果正常了"></a>10.2、报错了但是结果正常了</h5><p><img src="/1666099262444.png" alt="1666099262444"></p><h3 id="三、全局异常处理"><a href="#三、全局异常处理" class="headerlink" title="三、全局异常处理"></a>三、全局异常处理</h3><h4 id="1-创建自定义异常类cmjyException"><a href="#1-创建自定义异常类cmjyException" class="headerlink" title="1.创建自定义异常类cmjyException"></a>1.创建自定义异常类<code>cmjyException</code></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CmjyException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-编写全局异常处理类GlobalExceptionHandle"><a href="#2-编写全局异常处理类GlobalExceptionHandle" class="headerlink" title="2.编写全局异常处理类GlobalExceptionHandle"></a>2.编写全局异常处理类GlobalExceptionHandle</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用到了aop技术，在不改变代码的情况下，对系统功能做了加强</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(&#123;Exception.class&#125;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="comment">//全局异常处理</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">error</span><span class="params">(Error e)</span>&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.fail(<span class="literal">null</span>).message(<span class="string">&quot;执行全局异常处理&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//特定异常处理ArithmeticException</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(&#123;ArithmeticException.class&#125;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="comment">//全局异常处理</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">error</span><span class="params">(ArithmeticException e)</span>&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.fail(<span class="literal">null</span>).message(<span class="string">&quot;执行特定异常处理&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义异常处理</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(&#123;CmjyException.class&#125;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="comment">//全局异常处理</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">error</span><span class="params">(CmjyException e)</span>&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> Result.fail(<span class="literal">null</span>).code(e.getCode()).message(<span class="string">&quot;执行自定义异常处理&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、搭建项目前端环境"><a href="#四、搭建项目前端环境" class="headerlink" title="四、搭建项目前端环境"></a>四、搭建项目前端环境</h3><h4 id="1、vue-admin-template模板"><a href="#1、vue-admin-template模板" class="headerlink" title="1、vue-admin-template模板"></a>1、vue-admin-template模板</h4><p>vue-admin-template是基于vue-element-admin的一套后台管理系统基础模板（最少精简版），可作为模板进行二次开发。</p><p>GitHub地址：<a href="https://github.com/PanJiaChen/vue-admin-template">https://github.com/PanJiaChen/vue-admin-template</a></p><h4 id="2、项目准备"><a href="#2、项目准备" class="headerlink" title="2、项目准备"></a>2、项目准备</h4><p>创建一个空文件夹，创建工作区，将vue-admin-template模板复制进来</p><h4 id="3、项目启动"><a href="#3、项目启动" class="headerlink" title="3、项目启动"></a>3、项目启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">/*下载依赖*/</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm install</span></span><br><span class="line"></span><br><span class="line">/*启动项目*/</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm run dev</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em><strong>ps：当执行完 npm install之后控制台会报很多 warn，但属于正常情况，不影响我们的模板正常启动。</strong></em></p><p><img src="/1666313448949.png" alt="1666313448949"></p><h4 id="4、修改登录功能"><a href="#4、修改登录功能" class="headerlink" title="4、修改登录功能"></a>4、修改登录功能</h4><h5 id="4-1、创建登录接口"><a href="#4-1、创建登录接口" class="headerlink" title="4.1、创建登录接口"></a>4.1、创建登录接口</h5><p><strong>创建UserLoginController</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Cimaog</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/21 9:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin/vod/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserLoginController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//login登录接口</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;token&quot;</span>,<span class="string">&quot;admin-token&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> Result.ok(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//info信息接口</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;info&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;roles&quot;</span>,<span class="string">&quot;[admin]&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;avatar&quot;</span>,<span class="string">&quot;https://oss.aliyuncs.com/aliyun_id_photo_bucket/default_handsome.jpg&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> Result.ok(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//退出</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;logout&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">logout</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.ok();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/1666321246875.png" alt="1666321246875"></p><p><img src="/1666403747100.png" alt="1666403747100"></p><h3 id="五、跨域问题"><a href="#五、跨域问题" class="headerlink" title="五、跨域问题"></a>五、跨域问题</h3><h4 id="1、什么是跨域"><a href="#1、什么是跨域" class="headerlink" title="1、什么是跨域"></a>1、什么是跨域</h4><p>（1）浏览器从一个域名的网页去请求另一个域名的资源时，域名、端口、协议任一不同，都是跨域 。前后端分离开发中，需要考虑ajax跨域的问题。</p><p><strong>（2）跨域的本质：浏览器对Ajax请求的一种限制</strong></p><h4 id="2、解决办法"><a href="#2、解决办法" class="headerlink" title="2、解决办法"></a>2、解决办法</h4><p>（1）在后端接口controller添加注解</p><p>（2）使用HTTP client</p><p>（3）通过gateway网关</p><p>小问题：退出时出现网络问题，可以修改前端代码实现</p><p><img src="/1666404682965.png" alt="1666404682965"></p><h3 id="六、讲师管理模块前端"><a href="#六、讲师管理模块前端" class="headerlink" title="六、讲师管理模块前端"></a>六、讲师管理模块前端</h3><h4 id="1、设置路由定义"><a href="#1、设置路由定义" class="headerlink" title="1、设置路由定义"></a>1、设置路由定义</h4><p><strong>注意：</strong>每个路由的name不能相同</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">export</span> <span class="keyword">const</span> constantRouterMap = [</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/login/index&#x27;</span>), <span class="attr">hidden</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/404&#x27;</span>, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/404&#x27;</span>), <span class="attr">hidden</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  <span class="comment">// 首页</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;/dashboard&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Dashboard&#x27;</span>,</span><br><span class="line">    <span class="attr">children</span>: [&#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;dashboard&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/dashboard/index&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;硅谷课堂后台管理系统&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;dashboard&#x27;</span> &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;,</span><br><span class="line">    <span class="comment">// 讲师管理</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/vod&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&#x27;/vod/course/list&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;Vod&#x27;</span>,</span><br><span class="line">      <span class="attr">meta</span>: &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;点播管理&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&#x27;el-icon-bank-card&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">alwaysShow</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;teacher/list&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;TeacherList&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/vod/teacher/list&#x27;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;讲师列表&#x27;</span> &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;teacher/create&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;TeacherCreate&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/vod/teacher/form&#x27;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;添加讲师&#x27;</span> &#125;,</span><br><span class="line">          <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;teacher/edit/:id&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;TeacherEdit&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/vod/teacher/form&#x27;</span>),</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;编辑讲师&#x27;</span> &#125;,</span><br><span class="line">          <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;*&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;/404&#x27;</span>, <span class="attr">hidden</span>: <span class="literal">true</span> &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="2、创建vue组件"><a href="#2、创建vue组件" class="headerlink" title="2、创建vue组件"></a>2、创建vue组件</h4><p>在src&#x2F;views文件夹下创建以下文件夹和文件</p><p><img src="/1666508179529.png" alt="1666508179529"></p><h4 id="3、form-vue"><a href="#3、form-vue" class="headerlink" title="3、form.vue"></a>3、form.vue</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    讲师表单</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="4、list-vue"><a href="#4、list-vue" class="headerlink" title="4、list.vue"></a>4、list.vue</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    讲师列表</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="七、讲师分页列表"><a href="#七、讲师分页列表" class="headerlink" title="七、讲师分页列表"></a>七、讲师分页列表</h3><h4 id="1、定义api"><a href="#1、定义api" class="headerlink" title="1、定义api"></a>1、定义api</h4><p><strong>创建文件 src&#x2F;api&#x2F;vod&#x2F;teacher.js</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api_name = <span class="string">&#x27;/admin/vod/teacher&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//讲师条件分页</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// current 当前页， limit 每页记录数， searchObj条件对象</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_">pageList</span>(<span class="params">current,limit,searchObj</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line"></span><br><span class="line">           <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/findQueryPage/<span class="subst">$&#123;current&#125;</span>/<span class="subst">$&#123;limit&#125;</span>`</span>,</span><br><span class="line"></span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">//使用json格式传递  data:searchObj</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//使用普通格式传递  params:searchObj</span></span><br><span class="line"></span><br><span class="line">            <span class="attr">data</span>: searchObj</span><br><span class="line"></span><br><span class="line">          &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2、编写vue组件"><a href="#2、编写vue组件" class="headerlink" title="2、编写vue组件"></a>2、编写vue组件</h4><p><strong>src&#x2F;views&#x2F;vod&#x2F;teacher&#x2F;list.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">      讲师列表</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">//引入定义接口 js文件</span><br><span class="line"></span><br><span class="line">import teacherApi from &#x27;@/api/vod/teacher&#x27;</span><br><span class="line"></span><br><span class="line">export default&#123;</span><br><span class="line">  data() &#123;  //初始值</span><br><span class="line">    return &#123;</span><br><span class="line">      list: [], // 讲师列表</span><br><span class="line">      total: 0, // 总记录数</span><br><span class="line">      page: 1, // 当前页码</span><br><span class="line">      limit: 10, // 每页记录数</span><br><span class="line">      searchObj: &#123;&#125;, // 查询条件</span><br><span class="line">      multipleSelection: []// 批量删除选中的记录列表</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created()&#123;  //页面渲染之前</span><br><span class="line">    this.fetchData()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;   //具体方法</span><br><span class="line">    fetchData()&#123;</span><br><span class="line">      //ajax</span><br><span class="line">      teacherApi.pageList(this.page,this.limit,this.searchObj)</span><br><span class="line">       .then(response =&gt; &#123;</span><br><span class="line">          this.list = response.data.records</span><br><span class="line">          this.total = response.data.total</span><br><span class="line">       &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><em><strong>注意：需要在 controller中添加跨域注解，不然会出现跨域问题，以及老师的分页方法跟文档中的不太一样，多一个 findQueryPage。</strong></em></p><p><img src="/1666513288097.png" alt="1666513288097"></p><p><img src="/1666511979280.png" alt="1666511979280"></p><h4 id="3、改造页面"><a href="#3、改造页面" class="headerlink" title="3、改造页面"></a>3、改造页面</h4><h5 id="3-1、表格插件"><a href="#3-1、表格插件" class="headerlink" title="3.1、表格插件"></a>3.1、表格插件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 表格 --&gt;</span><br><span class="line">&lt;el-table</span><br><span class="line">  :data=&quot;list&quot;</span><br><span class="line">  border</span><br><span class="line">  stripe</span><br><span class="line">  @selection-change=&quot;handleSelectionChange&quot;&gt;</span><br><span class="line">  &lt;el-table-column type=&quot;selection&quot;/&gt;</span><br><span class="line">  &lt;el-table-column</span><br><span class="line">    label=&quot;#&quot;</span><br><span class="line">    width=&quot;50&quot;&gt;</span><br><span class="line">    &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">      &#123;&#123; (page - 1) * limit + scope.$index + 1 &#125;&#125;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/el-table-column&gt;</span><br><span class="line">  &lt;el-table-column prop=&quot;name&quot; label=&quot;名称&quot; width=&quot;80&quot; /&gt;</span><br><span class="line">  &lt;el-table-column label=&quot;头衔&quot; width=&quot;90&quot;&gt;</span><br><span class="line">    &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">      &lt;el-tag v-if=&quot;scope.row.level === 1&quot; type=&quot;success&quot; size=&quot;mini&quot;&gt;高级讲师&lt;/el-tag&gt;</span><br><span class="line">      &lt;el-tag v-if=&quot;scope.row.level === 0&quot; size=&quot;mini&quot;&gt;首席讲师&lt;/el-tag&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/el-table-column&gt;</span><br><span class="line">  &lt;el-table-column prop=&quot;intro&quot; label=&quot;简介&quot; /&gt;</span><br><span class="line">  &lt;el-table-column prop=&quot;sort&quot; label=&quot;排序&quot; width=&quot;60&quot; /&gt;</span><br><span class="line">  &lt;el-table-column prop=&quot;joinDate&quot; label=&quot;入驻时间&quot; width=&quot;160&quot; /&gt;</span><br><span class="line">  &lt;el-table-column label=&quot;操作&quot; width=&quot;200&quot; align=&quot;center&quot;&gt;</span><br><span class="line">    &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">      &lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;removeById(scope.row.id)&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">      &lt;router-link :to=&quot;&#x27;/vod/teacher/edit/&#x27;+scope.row.id&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;text&quot; size=&quot;mini&quot;&gt;修改&lt;/el-button&gt;</span><br><span class="line">      &lt;/router-link&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/el-table-column&gt;</span><br><span class="line">&lt;/el-table&gt;</span><br></pre></td></tr></table></figure><h5 id="3-2、分页插件"><a href="#3-2、分页插件" class="headerlink" title="3.2、分页插件"></a>3.2、分页插件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 分页组件 --&gt;</span><br><span class="line">&lt;el-pagination</span><br><span class="line">  :current-page=&quot;page&quot;</span><br><span class="line">  :total=&quot;total&quot;</span><br><span class="line">  :page-size=&quot;limit&quot;</span><br><span class="line">  :page-sizes=&quot;[5, 10, 20, 30, 40, 50, 100]&quot;</span><br><span class="line">  style=&quot;padding: 30px 0; text-align: center;&quot;</span><br><span class="line">  layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">  @size-change=&quot;changePageSize&quot;</span><br><span class="line">  @current-change=&quot;changeCurrentPage&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><h5 id="3-3、分页插件"><a href="#3-3、分页插件" class="headerlink" title="3.3、分页插件"></a>3.3、分页插件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--查询表单--&gt;</span><br><span class="line">&lt;el-card class=&quot;operate-container&quot; shadow=&quot;never&quot;&gt;</span><br><span class="line">  &lt;el-form :inline=&quot;true&quot; class=&quot;demo-form-inline&quot;&gt;</span><br><span class="line">  &lt;el-form-item label=&quot;名称&quot;&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;searchObj.name&quot; placeholder=&quot;讲师名&quot; /&gt; </span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">  &lt;el-form-item label=&quot;头衔&quot;&gt;</span><br><span class="line">    &lt;el-select v-model=&quot;searchObj.level&quot; clearable placeholder=&quot;头衔&quot;&gt;</span><br><span class="line">      &lt;el-option value=&quot;1&quot; label=&quot;高级讲师&quot;/&gt;</span><br><span class="line">      &lt;el-option value=&quot;0&quot; label=&quot;首席讲师&quot;/&gt;</span><br><span class="line">    &lt;/el-select&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">  &lt;el-form-item label=&quot;入驻时间&quot;&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">      v-model=&quot;searchObj.joinDateBegin&quot;</span><br><span class="line">      placeholder=&quot;开始时间&quot;</span><br><span class="line">      value-format=&quot;yyyy-MM-dd&quot; /&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;el-form-item label=&quot;-&quot;&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">      v-model=&quot;searchObj.joinDateEnd&quot;</span><br><span class="line">      placeholder=&quot;结束时间&quot;</span><br><span class="line">      value-format=&quot;yyyy-MM-dd&quot; /&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">&lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-search&quot; @click=&quot;fetchData()&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">&lt;el-button type=&quot;default&quot; @click=&quot;resetData()&quot;&gt;清空&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line">&lt;/el-form&gt;</span><br><span class="line">&lt;/el-card&gt;</span><br></pre></td></tr></table></figure><h5 id="3-4、分页和清空方法"><a href="#3-4、分页和清空方法" class="headerlink" title="3.4、分页和清空方法"></a>3.4、分页和清空方法</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 每页记录数改变，size：回调参数，表示当前选中的“每页条数”</span></span><br><span class="line"><span class="title function_">changePageSize</span>(<span class="params">size</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">limit</span> = size</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">fetchData</span>()</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变页码，page：回调参数，表示当前选中的“页码”</span></span><br><span class="line"><span class="title function_">changeCurrentPage</span>(<span class="params">page</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">page</span> = page</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">fetchData</span>()</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重置表单</span></span><br><span class="line"><span class="title function_">resetData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">searchObj</span> = &#123;&#125;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">fetchData</span>()</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="4、测试成功★-°-☆-￣▽￣-x2F-°★-。"><a href="#4、测试成功★-°-☆-￣▽￣-x2F-°★-。" class="headerlink" title="4、测试成功★,°:.☆(￣▽￣)&#x2F;$:.°★ 。"></a>4、测试成功<em>★,°</em>:.☆(￣▽￣)&#x2F;$:<em>.°★</em> 。</h4><p><img src="/1666514656763.png" alt="1666514656763"></p><h3 id="八、讲师删除"><a href="#八、讲师删除" class="headerlink" title="八、讲师删除"></a>八、讲师删除</h3><h4 id="1、定义api-1"><a href="#1、定义api-1" class="headerlink" title="1、定义api"></a>1、定义api</h4><p><strong>src&#x2F;api&#x2F;vod&#x2F;teacher.js</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">removeTeacherId</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/remove/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">`delete`</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="2、定义methods"><a href="#2、定义methods" class="headerlink" title="2、定义methods"></a>2、定义methods</h4><p><strong>src&#x2F;views&#x2F;vod&#x2F;teacher&#x2F;list.vue</strong></p><p>使用MessageBox 弹框组</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//讲师删除</span></span><br><span class="line"><span class="comment">//根据id删除数据</span></span><br><span class="line"><span class="title function_">removeById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;此操作将永久删除该讲师信息, 是否继续?&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span><br><span class="line">        <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> teacherApi.<span class="title function_">removeById</span>(id)</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">fetchData</span>()</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;删除成功！&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="九、讲师新增"><a href="#九、讲师新增" class="headerlink" title="九、讲师新增"></a>九、讲师新增</h3><h4 id="1、定义api-2"><a href="#1、定义api-2" class="headerlink" title="1、定义api"></a>1、定义api</h4><p> <strong>src&#x2F;api&#x2F;vod&#x2F;teacher.js</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">save</span>(<span class="params">teacher</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/saveTeacher`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">`post`</span>,</span><br><span class="line">    <span class="attr">data</span>: teacher</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="2、初始化组件"><a href="#2、初始化组件" class="headerlink" title="2、初始化组件"></a>2、初始化组件</h4><p><strong>src&#x2F;views&#x2F;vod&#x2F;teacher&#x2F;form.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;!-- 输入表单 --&gt;</span><br><span class="line">    &lt;el-form label-width=&quot;120px&quot;&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;讲师名称&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;teacher.name&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;入驻时间&quot;&gt;</span><br><span class="line">        &lt;el-date-picker v-model=&quot;teacher.joinDate&quot; value-format=&quot;yyyy-MM-dd&quot; /&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;讲师排序&quot;&gt;</span><br><span class="line">        &lt;el-input-number v-model=&quot;teacher.sort&quot; :min=&quot;0&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;讲师头衔&quot;&gt;</span><br><span class="line">        &lt;el-select v-model=&quot;teacher.level&quot;&gt;</span><br><span class="line">          &lt;!--</span><br><span class="line">            数据类型一定要和取出的json中的一致，否则没法回填</span><br><span class="line">            因此，这里value使用动态绑定的值，保证其数据类型是number</span><br><span class="line">            --&gt;</span><br><span class="line">          &lt;el-option :value=&quot;1&quot; label=&quot;高级讲师&quot;/&gt;</span><br><span class="line">          &lt;el-option :value=&quot;2&quot; label=&quot;首席讲师&quot;/&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;讲师简介&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;teacher.intro&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;讲师资历&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;teacher.career&quot; :rows=&quot;10&quot; type=&quot;textarea&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 讲师头像 --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;讲师头像&quot;&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;saveOrUpdate()&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="3、实现新增功能"><a href="#3、实现新增功能" class="headerlink" title="3、实现新增功能"></a>3、实现新增功能</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> teacherApi <span class="keyword">from</span> <span class="string">&#x27;@/api/vod/teacher&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">BASE_API</span>: <span class="string">&#x27;http://localhost:8301&#x27;</span>,</span><br><span class="line">      <span class="comment">// 初始化讲师默认数据</span></span><br><span class="line">      <span class="attr">teacher</span>: &#123;</span><br><span class="line">        <span class="attr">sort</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">1</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">saveBtnDisabled</span>: <span class="literal">false</span> <span class="comment">// 保存按钮是否禁用，防止表单重复提交</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 页面渲染成功</span></span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">saveOrUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 禁用保存按钮</span></span><br><span class="line">      <span class="comment">// this.saveBtnDisabled = true</span></span><br><span class="line">      <span class="comment">// if (!this.teacher.id) &#123;</span></span><br><span class="line">      <span class="comment">//   this.saveData()</span></span><br><span class="line">      <span class="comment">// &#125; else &#123;</span></span><br><span class="line">      <span class="comment">//   this.updateData()</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      teacherApi.<span class="title function_">saveTeacherId</span>(<span class="variable language_">this</span>.<span class="property">teacher</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;添加成功！&#x27;</span></span><br><span class="line">          <span class="comment">// message: response.message</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123; <span class="attr">path</span>: <span class="string">&#x27;/vod/teacher/list&#x27;</span> &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 根据id更新记录</span></span><br><span class="line">    <span class="title function_">updateData</span>(<span class="params"></span>) &#123;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.avatar-uploader</span> <span class="selector-class">.avatar-uploader-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#d9d9d9</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">28px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#8c939d</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">178px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">178px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">178px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.avatar-uploader</span> <span class="selector-class">.avatar-uploader-icon</span><span class="selector-pseudo">:hover</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-color</span>: <span class="number">#409EFF</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.avatar-uploader</span> <span class="selector-tag">img</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">178px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">178px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 实战项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目设计</title>
      <link href="/2022/10/07/%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/"/>
      <url>/2022/10/07/%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>学生页</p><p>1.1 首页：用Echarts显示打卡，公告，问题数据（anty.gitee.io）</p><p>1.2 考勤记录：每日考勤打卡（redis）</p><p>1.3 公告：管理员发布的公告，只可查看，有时间戳</p><p>1.4 问题管理：所有学生发布的问题（宿舍问题和学生问题两种），可查看（根据楼栋、宿舍，学生姓名查询），发布问题，有时间戳。</p><p>1.5 我的问题：查看学生发布的问题，可进行查看，修改，删除操作</p><p>1.6 宿舍成员：查看宿舍的成员</p><p>1.7 个人中心：个人信息展示，修改密码，登出。</p><p>管理员页</p><p>1.1 首页：用Echarts显示打卡，公告，问题数据</p><p>1.2 公告：管理员发布的公告，可增加，查看，修改，删除，有时间戳</p><p>1.3  考勤管理：缺勤记录，打卡记录</p><p>1.4 问题管理：查看学生发布的问题（宿舍问题和学生问题两种），可进行查看（根据楼栋、宿舍，学生姓名和问题状态查询），管理状态（是否通过），删除操作，有时间戳。</p><p>1.5 宿舍人员：查看所有人员信息，可进行查看，添加，删除操作</p><p>1.6 用户管理：查看所有管理员，可添加删除管理员，有时间戳</p>]]></content>
      
      
      
        <tags>
            
            <tag> 实战项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/2022/09/22/Linux/"/>
      <url>/2022/09/22/Linux/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux【连载中】"><a href="#Linux【连载中】" class="headerlink" title="Linux【连载中】"></a>Linux【连载中】</h1><p>快照——非常重要的一个功能</p><p>系统进行快照之后，即使文件进入到回收站被清空之后，返回快照状态依然可以恢复。</p><h2 id="Linux文件"><a href="#Linux文件" class="headerlink" title="Linux文件"></a>Linux文件</h2><p>linux中万物皆文件。</p><p>Linux中几个重要的目录结构</p><p>&#x2F;home </p><p>存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</p><p>&#x2F;root</p><p>该目录为系统管理员，也称作超级权限者的用户主目录。</p><p>&#x2F;etc</p><p>所有的系统管理所需要的配置文件和子目录</p><p>&#x2F;user</p><p>非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</p><p>&#x2F;boot</p><p>存在的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件，自己安装的东西别放这里。</p><p>&#x2F;media</p><p>linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。</p><p>&#x2F;mnt</p><p>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在&#x2F;mnt&#x2F;上，然后进入该目录就可以查看里面的内容了。</p><h3 id="一般模式"><a href="#一般模式" class="headerlink" title="一般模式"></a>一般模式</h3><p>以 vi&#x2F;vim 打开一个档案就直接进入一般模式了。</p><table><thead><tr><th>语法</th><th>功能描述</th></tr></thead><tbody><tr><td>yy</td><td><strong>复制</strong>光标当前一行</td></tr><tr><td>y数字y</td><td>复制一段（从第几行到第几行）</td></tr><tr><td>p</td><td>箭头移动到目的行<strong>粘贴</strong></td></tr><tr><td>u</td><td><strong>撤销上一步</strong></td></tr><tr><td>dd</td><td><strong>删除</strong>光标当前行</td></tr><tr><td>d数字d</td><td>删除光标（含）后多少行</td></tr><tr><td>x</td><td>删除一个字母，相当于del，<strong>向后删</strong></td></tr><tr><td>X</td><td>删除一个字母，相当于Backspace，向前删</td></tr><tr><td>yw</td><td>复制一个词</td></tr><tr><td>dw</td><td>删除一个词</td></tr><tr><td>^</td><td><strong>移动到行头</strong></td></tr><tr><td>$</td><td><strong>移动到行尾</strong></td></tr><tr><td>gg或者1+G</td><td><strong>移动到页头</strong></td></tr><tr><td>G</td><td><strong>移动到页尾</strong></td></tr><tr><td>数字+G（先输入数字，在按G）</td><td><strong>移动到目标行</strong></td></tr></tbody></table><h3 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h3><p>在一般模式中可以进行删除、复制、粘贴等的动作，但是无法编辑文件内容！要等到你按下『i, I, o, O, a, A』等任何一个字母之后才会进入编辑模式。</p><p>注意了！通常在Linux中，按下这些按键时，在画面的左下方会出现『INSERT或 REPLACE』的字样，此时才可以进行编辑。而如果要回到一般模式时， 则必须要按下<code>Esc</code>键这个按键即可退出编辑模式。</p><p>1）进入编辑模式</p><p>表1-2 常用语法</p><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>i</td><td><strong>当前光标前</strong></td></tr><tr><td>a</td><td>当前光标后</td></tr><tr><td>o</td><td><strong>当前光标行的下一行</strong></td></tr><tr><td>I</td><td>光标所在行最前</td></tr><tr><td>A</td><td>光标所在行最后</td></tr><tr><td>O</td><td>当前光标行的上一行</td></tr></tbody></table><p>2）退出编辑模式</p><p>按<code>Esc</code>键</p><p>命令模式</p><p><strong>在一般模式当中</strong>，输入『 **: &#x2F; ?**』3个中的任何一个按钮，就可以将光标移动到最底下那一行。</p><p>在这个模式当中， 可以提供你『搜寻资料』的动作，而读取、存盘、大量取代字符、离开 vi 、显示行号等动作是在此模式中达成的！</p><p>基本语法</p><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>:w</td><td><strong>保存</strong></td></tr><tr><td>:q</td><td><strong>退出</strong></td></tr><tr><td>:!</td><td><strong>强制执行</strong></td></tr><tr><td>: %s&#x2F;旧字符&#x2F;新字符</td><td><strong>批量替换 只替换第一个词</strong></td></tr><tr><td>&#x2F; 要查找的词</td><td>n 查找下一个，N 往上查找</td></tr><tr><td>? 要查找的词</td><td>n是查找上一个，N是往下查找</td></tr><tr><td>:set nu</td><td>显示行号</td></tr><tr><td>:set nonu</td><td>关闭行号</td></tr><tr><td>ZZ（shift+zz） :nohl</td><td><strong>没有修改文件直接退出，如果修改了文件保存后退</strong>。去除高亮显示</td></tr></tbody></table><p>运行级别（runlevel）</p><p>开机 &#x3D;》BIOS &#x3D;》&#x2F;boot &#x3D;》init进程 &#x3D;》运行级别 &#x3D;》运行级对应的服务</p><p>查看默认级别：vi&#x2F;etc&#x2F;inittab</p><p>Linux系统有7种运行级别：<strong>常用的是级别3和5</strong></p><ul><li>运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动</li><li>运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆</li><li>运行级别2：多用户状态（没有NFS），不支持网络</li><li>运行级别3：完全的多用户状态（有NFS），登陆后进入控制台命令行模式</li><li>运行级别4：系统未使用，保留</li><li>运行级别5：X11控制台，登陆后进入图像GUI模式</li><li>运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud Alibaba【连载中】</title>
      <link href="/2022/09/20/Spring%20Cloud%20Alibaba/"/>
      <url>/2022/09/20/Spring%20Cloud%20Alibaba/</url>
      
        <content type="html"><![CDATA[<p>#Spring Cloud Alibaba</p><p>1.1.1</p><p>单体应用架构</p><p>垂直架构</p><p>分布式架构</p><p>SOA架构</p><p>微服务架构</p><p>1.2.1 </p><p>管理：nacos【服务治理，注册中心[服务注册 发现 剔除]】</p><p>通讯：springBoot restTemplate（”url“，参数）【自动将数据序列化成json，也可以反序列化】，feign</p><p>访问：gateway</p><p>自处理：sentinel   【实现熔断降级等功能】 </p><p>排错：skywalking  【链路追踪】</p><p>1.2.2 常见微服务架构</p><p>1.dubbo：zookeeper + dubbo + SpringMVC&#x2F;SpringBoot</p><ul><li>配套 通信方式：rpc</li><li>注册中心：zookeeper&#x2F;redis</li><li>配置中心：diamond</li></ul><p>2.SpringCloud：全家桶+嵌入第三方组件（Netflix）</p><ul><li>配套 通信方式：http restful</li><li>注册中心：eruka&#x2F;consul</li><li>配置中心：config</li><li>断路器：hystrix</li><li>网关：zuul</li><li>分布式追踪系统：sleuth + zipkin</li></ul><p>要在order模块中调用stock模块要用到springMVC，所以要添加web依赖，并且注释掉plugin</p><h2 id="Alibaba微服务组件Nacos注册中心"><a href="#Alibaba微服务组件Nacos注册中心" class="headerlink" title="Alibaba微服务组件Nacos注册中心"></a>Alibaba微服务组件Nacos注册中心</h2><p>2.1注册中心演变及其设计思想</p><p> 注册中心引入了一个心跳的机制（Time Task）</p><p>每5s发送一个心跳到注册中心 ，注册中心在超过5s没有收到心跳，默认本模块修改成下线down，超过30s就默认本模块已经宕机，剔除该模块。</p><p><strong>服务注册</strong>：Nacos Client会通过发送REST请求的方式向Nacos Server注册自己的服务，提供自身的元数据，比如ip地址、端口等信息，Nacos Server接收到注册请求后，就会把这些元数据信息存储在一个双层的内存Map中。</p><p><strong>服务心跳</strong>：在服务注册后，Nacos Client会维护一个定时心跳来持续通知Nacos Server，说明服务一直处于可用状态，防止被剔除。默认5s发送一次心跳。</p><p><strong>服务同步</strong>：Nacos Server集群之间会互相同步服务实例，用来保证服务信息的一致性。</p><p><strong>服务发现</strong>：服务消费者在调用服务提供者的服务时，会发送一个REST请求给Nacos Server，获取上面注册的服务清单，并且缓存在Nacos Client本地，同时会在Nacos Client本地开启一个定时任务拉去服务端最新的注册表信息更新到本地缓存。</p><p><strong>服务健康检查</strong>：Nacos Server会开启一个定时任务用来检查注册服务实例的健康情况，对于超过15s没有收到客户端心跳的实例会将它的healthy属性设为false（客户端检查时不会发现），如果某个实例超过30s没有收到心跳，直接剔除该实例（被剔除的实例如果恢复发送心跳时会重新注册）。</p><p>三个指标：C一致性 A可用性 P分区容错性</p><p>一致性协议：CP+AP</p><p>先在setting中使用ignorance排除灰掉的pom依赖，再maven刷新</p><p>雪崩保护：</p><p>​保护阈值：设置0-1之间的值 比如0.5</p><p>​临时实例：当服务器宕机了也不会从服务列表中剔除</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">order-service</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">        <span class="attr">ephemeral:</span> <span class="literal">false</span> <span class="comment">#永久实例  哪怕宕机了也不会删除实例</span></span><br></pre></td></tr></table></figure><p>有可能在注册中心服务下线了，但是因为定时拉取服务列表，还可能能够访问到。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#service：默认取 $&#123;spring.application.name&#125;,也可以通过该选项配置</span></span><br><span class="line"><span class="comment">#group：默认DEFAULT_GROUP 更细的相同特征的服务进行归类分组管理</span></span><br><span class="line"><span class="comment">#weight：通常要结合 安装 权重的负载均衡策略，权重越高分配的流量越大</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1 cd nacos/ </span><br><span class="line">2 mvn ‐Prelease‐nacos clean install ‐U </span><br><span class="line">3 cd nacos/distribution/target/ </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos ~]# yum -y install java-1.8.0-openjdk*</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认安装目录: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.x86_64</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:371)</span><br><span class="line">at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:452)</span><br><span class="line">at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:462)</span><br><span class="line">at org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:473)</span><br><span class="line">at org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:480)</span><br><span class="line">at com.alibaba.nacos.config.server.service.repository.extrnal.ExternalStoragePersistServiceImpl.findConfigMaxId(ExternalStoragePersistServiceImpl.java:553)</span><br><span class="line">at com.alibaba.nacos.config.server.service.dump.processor.DumpAllProcessor.process(DumpAllProcessor.java:51)</span><br><span class="line">at com.alibaba.nacos.config.server.service.dump.DumpService.dumpConfigInfo(DumpService.java:260)</span><br><span class="line">at com.alibaba.nacos.config.server.service.dump.DumpService.dumpOperate(DumpService.java:172)</span><br><span class="line">... 48 common frames omitted</span><br></pre></td></tr></table></figure><p>默认负载均衡策略类似于轮询机制，但是在轮询的基础上加入了区域和可用性。</p><p>负载均衡策略是在我们的消费端进行调用的。</p><p>线程安全：ThreadLocalRandom</p><p>使用配置文件进行负载均衡策略更方便一点</p><p>开启饥饿加载，解决第一次调用慢的问题</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">1 ribbon:</span> </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>   <span class="string">eager‐load:</span> </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>     <span class="comment"># 开启ribbon饥饿加载 </span></span><br><span class="line"></span><br><span class="line"><span class="attr">4     enabled:</span> <span class="literal">true</span> </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>     <span class="comment"># 配置mall‐user使用ribbon饥饿加载，多个使用逗号分隔 </span></span><br><span class="line"></span><br><span class="line"><span class="attr">6     clients:</span> <span class="string">mall‐order</span> </span><br></pre></td></tr></table></figure><p>Spring Cloud LoadBalancer </p><p>spring官方提供了两种负载均衡的客户端：</p><p>1.RestTemplate</p><p>2.WebClient （国内使用较少，但是该技术填补了其他技术没有的空缺）</p><p>WebClient 是从Spring WebFlux 5.0版本开始提供的一个非阻塞的基于响应式编程的进行http请求的客户端工具。</p><p>注意：nacos-discovery中引入了ribbon，需要移除ribbon的包，如果不移除，也可以在yml中配置不使用ribbon</p><h3 id="Feign"><a href="#Feign" class="headerlink" title="Feign"></a>Feign</h3><p>Spring Cloud openfeign对Feign进行了增强，使其支持SpringMVC注解，另外还整合了Ribbon和Nacos，从而使得Feign的使用更加方便。</p><p>全局配置：当使用@Configuartion 会将配置作用所有的服务提供放</p><p>局部配置：1.通过配置类：如果只想针对某一个服务进行配置，就不要加@Configuration</p><p>​   2.通过配置文件</p><p>springboot默认的日志级别是info，feign的debug日志级别就不会输入</p><p>3.2契约配置</p><p>1）修改契约配置，支持Fegin原生的注解</p><p>注意：修改契约配置后，OrderFeignService不再支持springmvc的注解，需要使用Feign原生的注解</p><p>在既能升级cloud版本的同时又能使用原生Feign，减少因为注解更迭而产生的bug</p><p>在做全局异常处理的时候可以使用Thread.sleep对超时异常处理的bug进行修改。</p><p>负载均衡器首选Ribbon,服务熔断使用Sentinel</p><p>Nacos客户端 默认设计Properties的文件拓展名</p><p>一旦 修改成了非Properties格式，则必须通过file-extension进行设置</p><h3 id="Sentinel"><a href="#Sentinel" class="headerlink" title="Sentinel"></a>Sentinel</h3><p>服务的可用性问题</p><p>当服务器挂掉的时候，我们首先想到什么原因？</p><p>1.<strong>激增流量打垮</strong>，Load飙高。有可能你的服务器抗住了，但是缓存还没有预热，或者我的数据连接池来不及创建，把这些请求全部打入数据库中，数据库的服务器挂掉了，正在使用的客户迟迟得不到响应。所有线程都堆积在服务器前得不到回应，从而导致线程池打满，拖垮我们的服务器。</p><p>2.<strong>被其他服务拖垮</strong>，当我们请求一些慢sql，db超时或者第三方的服务，出现的卡顿或者网络不稳定。</p><p>3.<strong>异常未处理</strong>。本该正常执行的一些代码，比如说释放内存，清空对象，因为异常没有进行处理，久而久之导致内存溢出。</p><p>缺乏高可用防护&#x2F;容错机制，尤其是针对流量的防护。</p><p>服务雪崩效应：因服务提供者的不可用导致服务调用者的不可用，并将不可用逐渐放大的过程，就叫服务雪崩效应。</p><p>Sentinel:</p><p>面向分布式服务架构的流量控制组件，主要以流量为切入点，从限流、流量整形、熔断降级、系统负载保护、热点防护等多个维度来帮助开发者保障微服务的稳定性。</p><p>于nacos等注册中心结合较好</p><p>就讲讲QPS控流机制。首先添加依赖，sentinel核心库，web产品启动器，创建一个requestMapping的接口，使用entry针对资源进行限制，再对限制该资源的规则进行控制，通过一个list集合，放入系统定义好的FlowRule，通过setResource指定对哪个资料进行流控，最后用Set limit设置受保护资源的阈值。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Spring Cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《谷粒学苑》项目</title>
      <link href="/2022/09/18/%E8%B0%B7%E7%B2%92%E5%AD%A6%E8%8B%91/"/>
      <url>/2022/09/18/%E8%B0%B7%E7%B2%92%E5%AD%A6%E8%8B%91/</url>
      
        <content type="html"><![CDATA[<h1 id="《谷粒学苑》项目总结1-0"><a href="#《谷粒学苑》项目总结1-0" class="headerlink" title="《谷粒学苑》项目总结1.0"></a>《谷粒学苑》项目总结1.0</h1><p>本项目基于尚硅谷 <code>2020-05-11</code> 年的视频，进行总结复习。</p><h2 id="1-前景知识篇"><a href="#1-前景知识篇" class="headerlink" title="1-前景知识篇"></a>1-前景知识篇</h2><h3 id="1-1商业模式"><a href="#1-1商业模式" class="headerlink" title="1.1商业模式"></a>1.1商业模式</h3><p>本项目采用，B2C模式（Business To Customer 会员模式 ） </p><p><img src="C:\Users\86182\AppData\Local\Temp\1662559527690.png" alt="1662559527690"></p><h3 id="1-2项目功能模块"><a href="#1-2项目功能模块" class="headerlink" title="1.2项目功能模块"></a>1.2项目功能模块</h3><p>通过项目功能模块，回忆起对应代码如何实现效果。</p><p><img src="C:\Users\86182\AppData\Local\Temp\1662631718440.png" alt="1662631718440"></p><h3 id="1-3系统架构"><a href="#1-3系统架构" class="headerlink" title="1.3系统架构"></a>1.3系统架构</h3><p><img src="D:\photo\8fed6b485db444e9a4d0e31102628a59.png"></p><p><img src="D:\photo\4cd65e1f7e8042b7ab1af10531af9b25.png"></p><hr><h2 id="2-项目构建篇"><a href="#2-项目构建篇" class="headerlink" title="2-项目构建篇"></a>2-项目构建篇</h2><h3 id="1-1MySQL环境"><a href="#1-1MySQL环境" class="headerlink" title="1.1MySQL环境"></a>1.1MySQL环境</h3><ul><li><p>数据库名称：guli</p></li><li><p>运行资料 <code>guli_edu.sql</code> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_chapter&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_chapter` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;章节ID&#x27;,</span><br><span class="line">  `course_id` char(19) NOT NULL COMMENT &#x27;课程ID&#x27;,</span><br><span class="line">  `title` varchar(50) NOT NULL COMMENT &#x27;章节名称&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;显示排序&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_course_id` (`course_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_chapter&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_chapter` VALUES (&#x27;1&#x27;,&#x27;14&#x27;,&#x27;第一章：HTML&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:55:30&#x27;),(&#x27;1181729226915577857&#x27;,&#x27;18&#x27;,&#x27;第七章：I/O流&#x27;,70,&#x27;2019-10-09 08:32:58&#x27;,&#x27;2019-10-09 08:33:20&#x27;),(&#x27;1192252428399751169&#x27;,&#x27;1192252213659774977&#x27;,&#x27;第一章节&#x27;,0,&#x27;2019-11-07 09:28:25&#x27;,&#x27;2019-11-07 09:28:25&#x27;),(&#x27;15&#x27;,&#x27;18&#x27;,&#x27;第一章：Java入门&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-10-09 09:13:19&#x27;),(&#x27;3&#x27;,&#x27;14&#x27;,&#x27;第二章：CSS&#x27;,0,&#x27;2019-01-01 12:55:35&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;32&#x27;,&#x27;18&#x27;,&#x27;第二章：控制台输入和输出&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;44&#x27;,&#x27;18&#x27;,&#x27;第三章：控制流&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;48&#x27;,&#x27;18&#x27;,&#x27;第四章：类的定义&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;63&#x27;,&#x27;18&#x27;,&#x27;第五章：数组&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;64&#x27;,&#x27;18&#x27;,&#x27;第六章：继承&#x27;,61,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-10-09 08:32:47&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_comment&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_comment` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;讲师ID&#x27;,</span><br><span class="line">  `course_id` varchar(19) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;课程id&#x27;,</span><br><span class="line">  `teacher_id` char(19) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;讲师id&#x27;,</span><br><span class="line">  `member_id` varchar(19) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;会员id&#x27;,</span><br><span class="line">  `nickname` varchar(50) DEFAULT NULL COMMENT &#x27;会员昵称&#x27;,</span><br><span class="line">  `avatar` varchar(255) DEFAULT NULL COMMENT &#x27;会员头像&#x27;,</span><br><span class="line">  `content` varchar(500) DEFAULT NULL COMMENT &#x27;评论内容&#x27;,</span><br><span class="line">  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_course_id` (`course_id`),</span><br><span class="line">  KEY `idx_teacher_id` (`teacher_id`),</span><br><span class="line">  KEY `idx_member_id` (`member_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=&#x27;评论&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_comment&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_comment` VALUES (&#x27;1194499162790211585&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三123&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;课程很好&#x27;,0,&#x27;2019-11-13 14:16:08&#x27;,&#x27;2019-11-13 14:16:08&#x27;),(&#x27;1194898406466420738&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三123&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;11&#x27;,0,&#x27;2019-11-14 16:42:35&#x27;,&#x27;2019-11-14 16:42:35&#x27;),(&#x27;1194898484388200450&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三123&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;111&#x27;,0,&#x27;2019-11-14 16:42:53&#x27;,&#x27;2019-11-14 16:42:53&#x27;),(&#x27;1195251020861317122&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,NULL,NULL,&#x27;2233&#x27;,0,&#x27;2019-11-15 16:03:45&#x27;,&#x27;2019-11-15 16:03:45&#x27;),(&#x27;1195251382720700418&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,NULL,NULL,&#x27;4455&#x27;,0,&#x27;2019-11-15 16:05:11&#x27;,&#x27;2019-11-15 16:05:11&#x27;),(&#x27;1195252819177570306&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;55&#x27;,0,&#x27;2019-11-15 16:10:53&#x27;,&#x27;2019-11-15 16:10:53&#x27;),(&#x27;1195252899448160258&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;55&#x27;,0,&#x27;2019-11-15 16:11:13&#x27;,&#x27;2019-11-15 16:11:13&#x27;),(&#x27;1195252920587452417&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;223344&#x27;,0,&#x27;2019-11-15 16:11:18&#x27;,&#x27;2019-11-15 16:11:18&#x27;),(&#x27;1195262128095559681&#x27;,&#x27;14&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;11&#x27;,0,&#x27;2019-11-15 16:47:53&#x27;,&#x27;2019-11-15 16:47:53&#x27;),(&#x27;1196264505170767874&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;666666&#x27;,0,&#x27;2019-11-18 11:10:58&#x27;,&#x27;2019-11-18 11:10:58&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_course&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_course` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;课程ID&#x27;,</span><br><span class="line">  `teacher_id` char(19) NOT NULL COMMENT &#x27;课程讲师ID&#x27;,</span><br><span class="line">  `subject_id` char(19) NOT NULL COMMENT &#x27;课程专业ID&#x27;,</span><br><span class="line">  `subject_parent_id` char(19) NOT NULL COMMENT &#x27;课程专业父级ID&#x27;,</span><br><span class="line">  `title` varchar(50) NOT NULL COMMENT &#x27;课程标题&#x27;,</span><br><span class="line">  `price` decimal(10,2) unsigned NOT NULL DEFAULT &#x27;0.00&#x27; COMMENT &#x27;课程销售价格，设置为0则可免费观看&#x27;,</span><br><span class="line">  `lesson_num` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;总课时&#x27;,</span><br><span class="line">  `cover` varchar(255) CHARACTER SET utf8 NOT NULL COMMENT &#x27;课程封面图片路径&#x27;,</span><br><span class="line">  `buy_count` bigint(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;销售数量&#x27;,</span><br><span class="line">  `view_count` bigint(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;浏览数量&#x27;,</span><br><span class="line">  `version` bigint(20) unsigned NOT NULL DEFAULT &#x27;1&#x27; COMMENT &#x27;乐观锁&#x27;,</span><br><span class="line">  `status` varchar(10) NOT NULL DEFAULT &#x27;Draft&#x27; COMMENT &#x27;课程状态 Draft未发布  Normal已发布&#x27;,</span><br><span class="line">  `is_deleted` tinyint(3) DEFAULT NULL COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_title` (`title`),</span><br><span class="line">  KEY `idx_subject_id` (`subject_id`),</span><br><span class="line">  KEY `idx_teacher_id` (`teacher_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_course&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_course` VALUES (&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1178214681139539969&#x27;,&#x27;1178214681118568449&#x27;,&#x27;java基础课程：test&#x27;,0.01,2,&#x27;https://guli-file-190513.oss-cn-beijing.aliyuncs.com/cover/default.gif&#x27;,4,387,1,&#x27;Normal&#x27;,0,&#x27;2019-11-07 09:27:33&#x27;,&#x27;2019-11-18 13:35:03&#x27;),(&#x27;14&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1101348944971091969&#x27;,&#x27;1101348944920760321&#x27;,&#x27;XHTML CSS2 JS整站制作教程课程学习&#x27;,0.00,3,&#x27;http://guli-file.oss-cn-beijing.aliyuncs.com/cover/2019/03/13/d0086eb0-f2dc-45f7-bba1-744d95e5be0f.jpg&#x27;,3,44,15,&#x27;Normal&#x27;,0,&#x27;2018-04-02 18:33:34&#x27;,&#x27;2019-11-16 21:21:45&#x27;),(&#x27;15&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1101348944971091969&#x27;,&#x27;1101348944920760321&#x27;,&#x27;HTML5入门课程学习&#x27;,0.00,23,&#x27;http://guli-file.oss-cn-beijing.aliyuncs.com/cover/2019/03/13/22997b8e-3606-4d2e-9b4f-09f48418b6e4.jpg&#x27;,0,51,17,&#x27;Normal&#x27;,0,&#x27;2018-04-02 18:34:32&#x27;,&#x27;2019-11-12 10:19:20&#x27;),(&#x27;18&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1178214681139539969&#x27;,&#x27;1178214681118568449&#x27;,&#x27;Java精品课程&#x27;,0.01,20,&#x27;http://guli-file.oss-cn-beijing.aliyuncs.com/cover/2019/03/06/866e9aca-b530-4f71-a690-72d4a4bfd1e7.jpg&#x27;,151,737,6,&#x27;Normal&#x27;,0,&#x27;2018-04-02 21:28:46&#x27;,&#x27;2019-11-18 11:14:52&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_course_collect&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_course_collect` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;收藏ID&#x27;,</span><br><span class="line">  `course_id` char(19) NOT NULL COMMENT &#x27;课程讲师ID&#x27;,</span><br><span class="line">  `member_id` char(19) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;课程专业ID&#x27;,</span><br><span class="line">  `is_deleted` tinyint(3) NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程收藏&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_course_collect&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_course_collect` VALUES (&#x27;1196269345666019330&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1&#x27;,1,&#x27;2019-11-18 11:30:12&#x27;,&#x27;2019-11-18 11:30:12&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_course_description&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_course_description` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;课程ID&#x27;,</span><br><span class="line">  `description` text COMMENT &#x27;课程简介&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=&#x27;课程简介&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_course_description&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_course_description` VALUES (&#x27;1104870479077879809&#x27;,&#x27;&lt;p&gt;11&lt;/p&gt;&#x27;,&#x27;2019-03-11 06:23:44&#x27;,&#x27;2019-03-11 06:23:44&#x27;),(&#x27;1192252213659774977&#x27;,&#x27;&lt;p&gt;测试&lt;/p&gt;&#x27;,&#x27;2019-11-07 09:27:33&#x27;,&#x27;2019-11-13 16:21:28&#x27;),(&#x27;14&#x27;,&#x27;&#x27;,&#x27;2019-03-13 06:04:43&#x27;,&#x27;2019-03-13 06:05:33&#x27;),(&#x27;15&#x27;,&#x27;&#x27;,&#x27;2019-03-13 06:03:33&#x27;,&#x27;2019-03-13 06:04:22&#x27;),(&#x27;18&#x27;,&#x27;&lt;p&gt;本套Java视频完全针对零基础学员，课堂实录，自发布以来，好评如潮！Java视频中注重与学生互动，讲授幽默诙谐、细致入微，覆盖Java基础所有核心知识点，同类Java视频中也是代码量大、案例多、实战性强的。同时，本Java视频教程注重技术原理剖析，深入JDK源码，辅以代码实战贯穿始终，用实践驱动理论，并辅以必要的代码练习。&lt;/p&gt;\n&lt;p&gt;------------------------------------&lt;/p&gt;\n&lt;p&gt;视频特点：&lt;/p&gt;\n&lt;p&gt;通过学习本Java视频教程，大家能够真正将Java基础知识学以致用、活学活用，构架Java编程思想，牢牢掌握\&quot;源码级\&quot;的Javase核心技术，并为后续JavaWeb等技术的学习奠定扎实基础。&lt;br /&gt;&lt;br /&gt;1.通俗易懂，细致入微：每个知识点高屋建瓴，深入浅出，简洁明了的说明问题&lt;br /&gt;2.具实战性：全程真正代码实战，涵盖上百个企业应用案例及练习&lt;br /&gt;3.深入：源码分析，更有 Java 反射、动态代理的实际应用等&lt;br /&gt;4.登录尚硅谷官网，技术讲师免费在线答疑&lt;/p&gt;&#x27;,&#x27;2019-03-06 18:06:36&#x27;,&#x27;2019-10-30 19:58:36&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_subject&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_subject` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;课程类别ID&#x27;,</span><br><span class="line">  `title` varchar(10) NOT NULL COMMENT &#x27;类别名称&#x27;,</span><br><span class="line">  `parent_id` char(19) NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;父ID&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;排序字段&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_parent_id` (`parent_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程科目&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_subject&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_subject` VALUES (&#x27;1178214681118568449&#x27;,&#x27;后端开发&#x27;,&#x27;0&#x27;,1,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681139539969&#x27;,&#x27;Java&#x27;,&#x27;1178214681118568449&#x27;,1,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681181483010&#x27;,&#x27;前端开发&#x27;,&#x27;0&#x27;,3,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681210843137&#x27;,&#x27;JavaScript&#x27;,&#x27;1178214681181483010&#x27;,4,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681231814658&#x27;,&#x27;云计算&#x27;,&#x27;0&#x27;,5,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681252786178&#x27;,&#x27;Docker&#x27;,&#x27;1178214681231814658&#x27;,5,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681294729217&#x27;,&#x27;Linux&#x27;,&#x27;1178214681231814658&#x27;,6,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681324089345&#x27;,&#x27;系统/运维&#x27;,&#x27;0&#x27;,7,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681353449473&#x27;,&#x27;Linux&#x27;,&#x27;1178214681324089345&#x27;,7,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681382809602&#x27;,&#x27;Windows&#x27;,&#x27;1178214681324089345&#x27;,8,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681399586817&#x27;,&#x27;数据库&#x27;,&#x27;0&#x27;,9,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681428946945&#x27;,&#x27;MySQL&#x27;,&#x27;1178214681399586817&#x27;,9,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681454112770&#x27;,&#x27;MongoDB&#x27;,&#x27;1178214681399586817&#x27;,10,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681483472898&#x27;,&#x27;大数据&#x27;,&#x27;0&#x27;,11,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681504444418&#x27;,&#x27;Hadoop&#x27;,&#x27;1178214681483472898&#x27;,11,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681529610242&#x27;,&#x27;Spark&#x27;,&#x27;1178214681483472898&#x27;,12,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681554776066&#x27;,&#x27;人工智能&#x27;,&#x27;0&#x27;,13,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681584136193&#x27;,&#x27;Python&#x27;,&#x27;1178214681554776066&#x27;,13,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681613496321&#x27;,&#x27;编程语言&#x27;,&#x27;0&#x27;,14,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681626079234&#x27;,&#x27;Java&#x27;,&#x27;1178214681613496321&#x27;,14,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178585108407984130&#x27;,&#x27;Python&#x27;,&#x27;1178214681118568449&#x27;,2,&#x27;2019-09-30 16:19:22&#x27;,&#x27;2019-09-30 16:19:22&#x27;),(&#x27;1178585108454121473&#x27;,&#x27;HTML/CSS&#x27;,&#x27;1178214681181483010&#x27;,3,&#x27;2019-09-30 16:19:22&#x27;,&#x27;2019-09-30 16:19:22&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_teacher&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_teacher` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;讲师ID&#x27;,</span><br><span class="line">  `name` varchar(20) NOT NULL COMMENT &#x27;讲师姓名&#x27;,</span><br><span class="line">  `intro` varchar(500) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;讲师简介&#x27;,</span><br><span class="line">  `career` varchar(500) DEFAULT NULL COMMENT &#x27;讲师资历,一句话说明讲师&#x27;,</span><br><span class="line">  `level` int(10) unsigned NOT NULL COMMENT &#x27;头衔 1高级讲师 2首席讲师&#x27;,</span><br><span class="line">  `avatar` varchar(255) DEFAULT NULL COMMENT &#x27;讲师头像&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;排序&#x27;,</span><br><span class="line">  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_name` (`name`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=&#x27;讲师&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_teacher&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_teacher` VALUES (&#x27;1&#x27;,&#x27;张三&#x27;,&#x27;近年主持国家自然科学基金（6项）、江苏省重大科技成果转化项目（5项）、江苏省产学研前瞻性联合研究项目（3项）、省工业科技支撑、省高技术、省自然科学基金等省部级及其企业的主要科研项目40多个，多个项目在企业成功转化，产生了较好的经济、社会和环境效益。积极开展产学研科技合作，并与省内16家企业建立了江苏省研究生工作站，其中6家为江苏省优秀研究生工作站&#x27;,&#x27;高级&#x27;,1,&#x27;https://guli-file-190513.oss-cn-beijing.aliyuncs.com/avatar/default.jpg&#x27;,0,0,&#x27;2019-10-30 14:18:46&#x27;,&#x27;2019-11-12 13:36:36&#x27;),(&#x27;1189389726308478977&#x27;,&#x27;晴天&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师资历&#x27;,2,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/10/30/de47ee9b-7fec-43c5-8173-13c5f7f689b2.png&#x27;,1,0,&#x27;2019-10-30 11:53:03&#x27;,&#x27;2019-10-30 11:53:03&#x27;),(&#x27;1189390295668469762&#x27;,&#x27;李刚&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师&#x27;,2,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/10/30/b8aa36a2-db50-4eca-a6e3-cc6e608355e0.png&#x27;,2,0,&#x27;2019-10-30 11:55:19&#x27;,&#x27;2019-11-12 13:37:52&#x27;),(&#x27;1189426437876985857&#x27;,&#x27;王二&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师&#x27;,1,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/08/e44a2e92-2421-4ea3-bb49-46f2ec96ef88.png&#x27;,0,0,&#x27;2019-10-30 14:18:56&#x27;,&#x27;2019-11-12 13:37:35&#x27;),(&#x27;1189426464967995393&#x27;,&#x27;王五&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师&#x27;,1,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/10/30/65423f14-49a9-4092-baf5-6d0ef9686a85.png&#x27;,0,0,&#x27;2019-10-30 14:19:02&#x27;,&#x27;2019-11-12 13:37:18&#x27;),(&#x27;1192249914833055746&#x27;,&#x27;李四&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师&#x27;,1,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/07/91871e25-fd83-4af6-845f-ea8d471d825d.png&#x27;,0,0,&#x27;2019-11-07 09:18:25&#x27;,&#x27;2019-11-12 13:37:01&#x27;),(&#x27;1192327476087115778&#x27;,&#x27;1222-12-12&#x27;,&#x27;1111&#x27;,&#x27;11&#x27;,1,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/08/5805c6cd-c8ad-4a77-aafd-d2e083bfd8a4.png&#x27;,0,1,&#x27;2019-11-07 14:26:37&#x27;,&#x27;2019-11-11 16:26:26&#x27;),(&#x27;1195337453429129218&#x27;,&#x27;test&#x27;,&#x27;sdfsdf&#x27;,&#x27;sdfdf&#x27;,1,&#x27;https://guli-file-190513.oss-cn-beijing.aliyuncs.com/avatar/default.jpg&#x27;,0,1,&#x27;2019-11-15 21:47:12&#x27;,&#x27;2019-11-15 21:47:27&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_video&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_video` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;视频ID&#x27;,</span><br><span class="line">  `course_id` char(19) NOT NULL COMMENT &#x27;课程ID&#x27;,</span><br><span class="line">  `chapter_id` char(19) NOT NULL COMMENT &#x27;章节ID&#x27;,</span><br><span class="line">  `title` varchar(50) NOT NULL COMMENT &#x27;节点名称&#x27;,</span><br><span class="line">  `video_source_id` varchar(100) DEFAULT NULL COMMENT &#x27;云端视频资源&#x27;,</span><br><span class="line">  `video_original_name` varchar(100) DEFAULT NULL COMMENT &#x27;原始文件名称&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;排序字段&#x27;,</span><br><span class="line">  `play_count` bigint(20) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;播放次数&#x27;,</span><br><span class="line">  `is_free` tinyint(1) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;是否可以试听：0收费 1免费&#x27;,</span><br><span class="line">  `duration` float NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;视频时长（秒）&#x27;,</span><br><span class="line">  `status` varchar(20) NOT NULL DEFAULT &#x27;Empty&#x27; COMMENT &#x27;Empty未上传 Transcoding转码中  Normal正常&#x27;,</span><br><span class="line">  `size` bigint(20) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;视频源文件大小（字节）&#x27;,</span><br><span class="line">  `version` bigint(20) unsigned NOT NULL DEFAULT &#x27;1&#x27; COMMENT &#x27;乐观锁&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_course_id` (`course_id`),</span><br><span class="line">  KEY `idx_chapter_id` (`chapter_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程视频&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_video&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_video` VALUES (&#x27;1182499307429339137&#x27;,&#x27;18&#x27;,&#x27;32&#x27;,&#x27;第一节&#x27;,&#x27;&#x27;,&#x27;&#x27;,0,0,0,0,&#x27;&#x27;,0,1,&#x27;2019-10-11 11:32:59&#x27;,&#x27;2019-10-11 11:57:38&#x27;),(&#x27;1185312444399071234&#x27;,&#x27;14&#x27;,&#x27;1&#x27;,&#x27;12&#x27;,&#x27;&#x27;,&#x27;&#x27;,0,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-10-19 05:51:23&#x27;,&#x27;2019-10-19 05:51:33&#x27;),(&#x27;1189434737808990210&#x27;,&#x27;18&#x27;,&#x27;44&#x27;,&#x27;测试&#x27;,&#x27;&#x27;,&#x27;&#x27;,1,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-10-30 14:51:55&#x27;,&#x27;2019-10-30 14:51:55&#x27;),(&#x27;1189471423678939138&#x27;,&#x27;18&#x27;,&#x27;1181729226915577857&#x27;,&#x27;test&#x27;,&#x27;2b887dc9584d4dc68908780ec57cd3b9&#x27;,&#x27;视频&#x27;,1,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-10-30 17:17:41&#x27;,&#x27;2019-10-30 17:17:41&#x27;),(&#x27;1189476403626409986&#x27;,&#x27;18&#x27;,&#x27;1181729226915577857&#x27;,&#x27;22&#x27;,&#x27;5155c73dc112475cbbddccf4723f7cef&#x27;,&#x27;视频.mp4&#x27;,0,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-10-30 17:37:29&#x27;,&#x27;2019-10-30 17:37:29&#x27;),(&#x27;1192252824606289921&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第一课时&#x27;,&#x27;756cf06db9cb4f30be85a9758b19c645&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,0,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-07 09:29:59&#x27;,&#x27;2019-11-07 09:29:59&#x27;),(&#x27;1192628092797730818&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第二课时&#x27;,&#x27;2a02d726622f4c7089d44cb993c531e1&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,0,0,1,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-08 10:21:10&#x27;,&#x27;2019-11-08 10:21:22&#x27;),(&#x27;1192632495013380097&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第三课时&#x27;,&#x27;4e560c892fdf4fa2b42e0671aa42fa9d&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,0,0,1,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-08 10:38:40&#x27;,&#x27;2019-11-08 10:38:40&#x27;),(&#x27;1194117638832111617&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第四课时&#x27;,&#x27;4e560c892fdf4fa2b42e0671aa42fa9d&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,0,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-12 13:00:05&#x27;,&#x27;2019-11-12 13:00:05&#x27;),(&#x27;1196263770832023554&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第五课时&#x27;,&#x27;27d21158b0834cb5a8d50710937de330&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,5,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-18 11:08:03&#x27;,&#x27;2019-11-18 11:08:03&#x27;),(&#x27;17&#x27;,&#x27;18&#x27;,&#x27;15&#x27;,&#x27;第一节：Java简介&#x27;,&#x27;196116a6fee742e1ba9f6c18f65bd8c1&#x27;,&#x27;1&#x27;,1,1000,1,100,&#x27;Draft&#x27;,0,1,&#x27;2019-01-01 13:08:57&#x27;,&#x27;2019-10-11 11:26:39&#x27;),(&#x27;18&#x27;,&#x27;18&#x27;,&#x27;15&#x27;,&#x27;第二节：表达式和赋值语句&#x27;,&#x27;2d99b08ca0214909899910c9ba042d47&#x27;,&#x27;7 - How Do I Find Time for My &#x27;,2,999,1,100,&#x27;Draft&#x27;,0,1,&#x27;2019-01-01 13:09:02&#x27;,&#x27;2019-03-08 03:30:27&#x27;),(&#x27;19&#x27;,&#x27;18&#x27;,&#x27;15&#x27;,&#x27;第三节：String类&#x27;,&#x27;51120d59ddfd424cb5ab08b44fc8b23a&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,3,888,0,100,&#x27;Draft&#x27;,0,1,&#x27;2019-01-01 13:09:05&#x27;,&#x27;2019-11-12 12:50:45&#x27;),(&#x27;20&#x27;,&#x27;18&#x27;,&#x27;15&#x27;,&#x27;第四节：程序风格&#x27;,&#x27;2a38988892d84df598752226c50f3fa3&#x27;,&#x27;00-day10总结.avi&#x27;,4,666,0,100,&#x27;Draft&#x27;,0,1,&#x27;2019-01-01 13:09:05&#x27;,&#x27;2019-10-11 09:20:09&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>表目录结构：<img src="D:\photo\谷粒数据库表图.png"></p></li></ul><p>ps：数据库设计遵循规约 ，详情可以查看<a href="https://www.cnblogs.com/yujiwei/p/6886260.html">《阿里巴巴Java开发手册》</a>。</p><h3 id="1-2项目架构"><a href="#1-2项目架构" class="headerlink" title="1.2项目架构"></a>1.2项目架构</h3><p><img src="D:\photo\项目架构.png" alt="项目架构"></p><h3 id="1-3前后端分离概念"><a href="#1-3前后端分离概念" class="headerlink" title="1.3前后端分离概念"></a>1.3前后端分离概念</h3><p><img src="D:\photo\前后端分离概念图.png" alt="前后端分离概念图"></p><h3 id="1-4创建父工程"><a href="#1-4创建父工程" class="headerlink" title="1.4创建父工程"></a>1.4创建父工程</h3><h5 id="1-创建springboot工程guli-parent"><a href="#1-创建springboot工程guli-parent" class="headerlink" title="1.创建springboot工程guli-parent"></a>1.创建springboot工程guli-parent</h5><p>版本使用：<code>2.2.1.RELEASE</code> </p><p>创建期间不勾选任何工具，并且若无以上版本，可以先使用其他版本，最后修改pom文件进行依赖导入。</p><h5 id="2-删除src目录"><a href="#2-删除src目录" class="headerlink" title="2.删除src目录"></a>2.删除src目录</h5><p>父工程主要是进行依赖管理和版本控制，所以并不需要src目录，故删除。</p><h5 id="3-配置-pom-xml-♥"><a href="#3-配置-pom-xml-♥" class="headerlink" title="3.配置 pom.xml ♥"></a>3.配置 pom.xml ♥</h5><p>加标注为需要谨慎的地方，这个地方会报很多红，但是影响不大。</p><p>指定打包方式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;artifactId&gt;guli-parent&lt;/artifactId&gt;</span><br><span class="line">&lt;packaging&gt;pom&lt;/packaging&gt;</span><br></pre></td></tr></table></figure><p>添加依赖：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class="line">         xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/POM/4.0.0   http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;guli_parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;com.atguigu&lt;/groupId&gt;</span><br><span class="line">        &lt;version&gt;<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;modelVersion&gt;<span class="number">4.0</span><span class="number">.0</span>&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">&lt;artifactId&gt;service&lt;/artifactId&gt;</span><br><span class="line">&lt;packaging&gt;pom&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;maven.compiler.source&gt;<span class="number">8</span>&lt;/maven.compiler.source&gt;</span><br><span class="line">    &lt;maven.compiler.target&gt;<span class="number">8</span>&lt;/maven.compiler.target&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-netflix-ribbon&lt;/artifactId&gt;--&gt;</span><br><span class="line">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;!--hystrix依赖，主要是用 <span class="meta">@HystrixCommand</span> --&gt;</span><br><span class="line">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;/artifactId&gt;--&gt;</span><br><span class="line">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;!--服务注册--&gt;</span><br><span class="line">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;--&gt;</span><br><span class="line">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;!--服务调用--&gt;</span><br><span class="line">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;--&gt;</span><br><span class="line">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--mybatis-plus--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--mysql--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.velocity&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;velocity-engine-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--swagger--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--xls--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;poi&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--httpclient--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;httpclient&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--commons-io--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--gson--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;gson&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;<span class="number">4.12</span>&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><p><em><strong>注意：中间部分保持注解的状态，防止其影响项目启动。另外是，首次导入依赖会报红，原因是需要在子工程中逐步导入，此处也可将老师的 <code> repository</code> 导入到自己本地 maven仓库。</strong></em></p><h5 id="4-搭建service-edu模块"><a href="#4-搭建service-edu模块" class="headerlink" title="4.搭建service-edu模块"></a>4.搭建service-edu模块</h5><p>1.在resources目录下修改配置文件。</p><p><em><strong>注意：下面两个配置都是基于 MySQL为 8.0以上版本。</strong></em></p><p>properites:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># 服务端口</span><br><span class="line"></span><br><span class="line">server.port=<span class="number">8001</span></span><br><span class="line"></span><br><span class="line"># 服务名</span><br><span class="line"></span><br><span class="line">spring.application.name=service-edu</span><br><span class="line"></span><br><span class="line"># 环境设置：dev、test、prod</span><br><span class="line"></span><br><span class="line">spring.profiles.active=dev</span><br><span class="line"></span><br><span class="line"># mysql数据库连接</span><br><span class="line"></span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url=jdbc:mysql:<span class="comment">//localhost:3306/guli?serverTimezone=GMT%2B8</span></span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=root</span><br><span class="line"></span><br><span class="line"># mybatis日志</span><br><span class="line"></span><br><span class="line">mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</span><br></pre></td></tr></table></figure><p>YML:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line"> # 服务名</span><br><span class="line">  application:</span><br><span class="line">    name: service-edu</span><br><span class="line"></span><br><span class="line"># 环境设置：dev、test、prod</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev</span><br><span class="line"></span><br><span class="line"># mysql数据库连接</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//192.168.88.130:3306/guli?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line"></span><br><span class="line"># 统一返回的json时间格式</span><br><span class="line"></span><br><span class="line">  jackson:</span><br><span class="line">    date-format: yyyy-MM-dd HH:mm:ss</span><br><span class="line">    time-zone: GMT+<span class="number">8</span></span><br><span class="line"></span><br><span class="line"># mybatis日志</span><br><span class="line"></span><br><span class="line">mybatis-plus:</span><br><span class="line">  configuration:</span><br><span class="line">    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl</span><br><span class="line"></span><br><span class="line"># 服务端口</span><br><span class="line"></span><br><span class="line">server:</span><br><span class="line">  port: <span class="number">8001</span></span><br></pre></td></tr></table></figure><p>2.创建MP代码生成器</p><p>在test&#x2F;java下创建 <code>com.atguigu.demo</code>  的包，接着创建 <code>CodeGenerator.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.DateType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGenerator</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">projectPath</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\work\\guli_parent\\service\\service_edu&quot;</span> + <span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line"></span><br><span class="line">        gc.setAuthor(<span class="string">&quot;testjava&quot;</span>);</span><br><span class="line">        gc.setOpen(<span class="literal">false</span>); <span class="comment">//生成后是否打开资源管理器</span></span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>); <span class="comment">//重新生成时文件是否覆盖</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//UserServie</span></span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);    <span class="comment">//去掉Service接口的首字母I</span></span><br><span class="line"></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR); <span class="comment">//主键策略</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);<span class="comment">//定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);<span class="comment">//开启Swagger2模式</span></span><br><span class="line"></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        pc.setModuleName(<span class="string">&quot;eduservice&quot;</span>); <span class="comment">//模块名</span></span><br><span class="line">        <span class="comment">//包  com.atguigu.eduservice</span></span><br><span class="line">        pc.setParent(<span class="string">&quot;com.atguigu&quot;</span>);</span><br><span class="line">        <span class="comment">//包  com.atguigu.eduservice.controller</span></span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line"></span><br><span class="line">        strategy.setInclude(<span class="string">&quot;edu_teacher&quot;</span>);</span><br><span class="line"></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//数据库表映射到实体的命名策略</span></span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">&quot;_&quot;</span>); </span><br><span class="line">        <span class="comment">//生成实体时去掉表前缀</span></span><br><span class="line"></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>); </span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line"></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>); <span class="comment">//restful api风格控制器</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>); </span><br><span class="line">        <span class="comment">//url中驼峰转连字符</span></span><br><span class="line"></span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>tips：使用本代码生成器时需要注意全局配置路径是否为项目路径，其次在数据源配置时与自己设备的配置保持一致（查看 username和 password），不然会报  <code>Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: YES)</code>  。</strong></em></p><p><img src="D:\photo\代码生成器运行失败.png"></p><h3 id="1-5后台管理系统-讲师管理接口"><a href="#1-5后台管理系统-讲师管理接口" class="headerlink" title="1.5后台管理系统-讲师管理接口"></a>1.5后台管理系统-讲师管理接口</h3><h4 id="1、测试查询所有讲师功能"><a href="#1、测试查询所有讲师功能" class="headerlink" title="1、测试查询所有讲师功能"></a>1、测试查询所有讲师功能</h4><h5 id="1）创建MP配置类"><a href="#1）创建MP配置类" class="headerlink" title="1）创建MP配置类"></a>1）创建MP配置类</h5><p>在edu模块下，创建config包，包下创建<code>EduConfig.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.eduservice.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EduConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2）编写controller进行测试"><a href="#2）编写controller进行测试" class="headerlink" title="2）编写controller进行测试"></a>2）编写controller进行测试</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/eduservice/teacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EduTeacherController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduTeacherService eduTeacherService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询讲师表所有数据</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;EduTeacher&gt; <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> eduTeacherService.list(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>tips：代码生成器的名字为edu-teacher，视频中为teacher，为保证与视频一致不报错不失误，建议修改。另外补充知识  <code>@RestController</code> &#x3D; <code>@Controller</code> + <code>@ResponseBody</code> ，当开发一个和页面交互数据的控制时，比如 bbs-web（电子布告栏系统）的api接口需要此注解</strong></em> </p><h5 id="3）主启动类"><a href="#3）主启动类" class="headerlink" title="3）主启动类"></a>3）主启动类</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class EduApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(EduApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4）启动项目★-°-☆-￣▽￣-x2F-°★"><a href="#4）启动项目★-°-☆-￣▽￣-x2F-°★" class="headerlink" title="4）启动项目★,°:.☆(￣▽￣)&#x2F;$:.°★"></a>4）启动项目<em>★,°</em>:.☆(￣▽￣)&#x2F;$:<em>.°★</em></h5><p>访问：<code>http://localhost:8001/eduservice/teacher/findAll</code></p><p><img src="D:\photo\返回数据.png"></p><h4 id="2、测试逻辑删除功能"><a href="#2、测试逻辑删除功能" class="headerlink" title="2、测试逻辑删除功能"></a>2、测试逻辑删除功能</h4><h5 id="1）在实体类上加注解-TableLogic"><a href="#1）在实体类上加注解-TableLogic" class="headerlink" title="1）在实体类上加注解@TableLogic"></a>1）在实体类上加注解<code>@TableLogic</code></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="keyword">private</span> Boolean isDeleted;</span><br></pre></td></tr></table></figure><h5 id="2）在EduConfig中加入逻辑删除的插件"><a href="#2）在EduConfig中加入逻辑删除的插件" class="headerlink" title="2）在EduConfig中加入逻辑删除的插件"></a>2）在EduConfig中加入逻辑删除的插件</h5><p>（MBP3.1.1以上版本无需配置，本项目采用版本为3.0.5） </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> ISqlInjector <span class="title function_">sqlInjector</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LogicSqlInjector</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3）编写EduTeacherController"><a href="#3）编写EduTeacherController" class="headerlink" title="3）编写EduTeacherController"></a>3）编写EduTeacherController</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping(&quot;/deleteTeacherById/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteTeacherById</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> eduTeacherService.removeById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4）访问地址测试代码"><a href="#4）访问地址测试代码" class="headerlink" title="4）访问地址测试代码"></a>4）访问地址测试代码</h5><p><code>http://localhost:8001/eduservice/teacher/deleteTeacherById/1</code></p><p>:bride_with_veil:<em><strong>虽然页面内容显示 <code> Whitelabel Error Page</code>，但是执行成功需要查看数据库 <code>is_deleted</code>字段是否从0变成1。</strong></em> </p><p><img src="D:\photo\逻辑删除.png"></p><h4 id="3、整合Swagger技术"><a href="#3、整合Swagger技术" class="headerlink" title="3、整合Swagger技术"></a>3、整合Swagger技术</h4><h5 id="1）创建公共模块-common-，并且删除src目录"><a href="#1）创建公共模块-common-，并且删除src目录" class="headerlink" title="1）创建公共模块 common ，并且删除src目录"></a>1）创建公共模块 <code>common</code> ，并且删除src目录</h5><h5 id="2）导入需要的坐标依赖"><a href="#2）导入需要的坐标依赖" class="headerlink" title="2）导入需要的坐标依赖"></a>2）导入需要的坐标依赖</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--mybatis-plus--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--swagger--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- redis --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- spring2.X集成redis所需common-pool2</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;--&gt;</span><br></pre></td></tr></table></figure><h5 id="3）创建Maven工程子模块-service-base"><a href="#3）创建Maven工程子模块-service-base" class="headerlink" title="3）创建Maven工程子模块  service-base"></a>3）创建Maven工程子模块  <code>service-base</code></h5><h5 id="4）创建包com-atguigu-servicebase-创建配置类-SwaggerConfig-java"><a href="#4）创建包com-atguigu-servicebase-创建配置类-SwaggerConfig-java" class="headerlink" title="4）创建包com.atguigu.servicebase,创建配置类 SwaggerConfig.java"></a>4）创建包<code>com.atguigu.servicebase</code>,创建配置类 <code>SwaggerConfig.java</code></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span><span class="comment">//配置类</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span> <span class="comment">//swagger注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwaggerConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">webApiConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">&quot;webApi&quot;</span>)</span><br><span class="line">                .apiInfo(webApiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">&quot;/admin/.*&quot;</span>)))</span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">&quot;/error.*&quot;</span>)))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApiInfo <span class="title function_">webApiInfo</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">                .title(<span class="string">&quot;网站-课程中心API文档&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;本文档描述了课程中心微服务接口定义&quot;</span>)</span><br><span class="line">                .version(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">                .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>(<span class="string">&quot;java&quot;</span>, <span class="string">&quot;http://atguigu.com&quot;</span>, <span class="string">&quot;1123@qq.com&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4）在service模块中引入common模板"><a href="#4）在service模块中引入common模板" class="headerlink" title="4）在service模块中引入common模板"></a>4）在service模块中引入common模板</h5><p>因为要在service模块中测试，而common模块主要存放一些依赖，想要启用模板内工具，需要将模块导入到service模块中。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.atguigu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;service_base&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h5 id="5）在启动类上加入扫描注解类"><a href="#5）在启动类上加入扫描注解类" class="headerlink" title="5）在启动类上加入扫描注解类"></a>5）在启动类上加入扫描注解类</h5><p>表示只要是这个包下的类都默认启动加载，保持包名与配置包名一致。主要因为不在同一个模块下@Configuration也没有用╮(╯▽╰)╭。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;com.atguigu&quot;&#125;)</span></span><br></pre></td></tr></table></figure><h5 id="6）重新启动程序后，访问固定地址"><a href="#6）重新启动程序后，访问固定地址" class="headerlink" title="6）重新启动程序后，访问固定地址"></a>6）重新启动程序后，访问固定地址</h5><p><code>http://localhost:8001/swagger-ui.html</code> </p><p><img src="D:\photo\swagger.png"></p><p>:bride_with_veil:<strong>在今后的学习中，swagger将起到重要作用，感兴趣的可以了解一下加强版的swagger——<a href="https://doc.xiaominfo.com/docs/quick-start">knife4j</a>。</strong></p><h5 id="7）配置SwaggerApi文档接口"><a href="#7）配置SwaggerApi文档接口" class="headerlink" title="7）配置SwaggerApi文档接口"></a>7）配置SwaggerApi文档接口</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Api(tags = &quot;讲师管理模块&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/eduservice/teacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EduTeacherController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduTeacherService eduTeacherService;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     查询所有讲师</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="meta">@ApiOperation(&quot;查询所有讲师&quot;)</span></span><br><span class="line">      <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">      <span class="keyword">public</span> List&lt;EduTeacher&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> eduTeacherService.list(<span class="literal">null</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     逻辑删除讲师</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="meta">@ApiOperation(&quot;逻辑删除讲师&quot;)</span></span><br><span class="line">      <span class="meta">@DeleteMapping(&quot;/deleteTeacherById/&#123;id&#125;&quot;)</span></span><br><span class="line">      <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteTeacherById</span><span class="params">(<span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;讲师ID&quot;, required = true)</span>  <span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> eduTeacherService.removeById(id);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>由于技术革新太快，视频的 Api注解已经不能再用，可替换成 tags，功能不变。</strong></em></p><h4 id="4、统一返回结果类-♥"><a href="#4、统一返回结果类-♥" class="headerlink" title="4、统一返回结果类 ♥"></a>4、统一返回结果类 ♥</h4><h5 id="1）在common模块下创建模块-common-utils，创建-R-java-和-ResultCode-java"><a href="#1）在common模块下创建模块-common-utils，创建-R-java-和-ResultCode-java" class="headerlink" title="1）在common模块下创建模块 common_utils，创建 R.java 和 ResultCode.java"></a>1）在<code>common</code>模块下创建模块 <code>common_utils</code>，创建 <code>R.java</code> 和 <code>ResultCode.java</code></h5><p>R.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//统一返回结果的类</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">R</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;是否成功&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回消息&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回数据&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; data = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把构造方法私有</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">R</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成功静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">        r.setSuccess(<span class="literal">true</span>);</span><br><span class="line">        r.setCode(ResultCode.SUCCESS);</span><br><span class="line">        r.setMessage(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//失败静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">        r.setSuccess(<span class="literal">false</span>);</span><br><span class="line">        r.setCode(ResultCode.ERROR);</span><br><span class="line">        r.setMessage(<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">success</span><span class="params">(Boolean success)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setSuccess(success);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">message</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setMessage(message);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">code</span><span class="params">(Integer code)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setCode(code);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">data</span><span class="params">(String key, Object value)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.data.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">data</span><span class="params">(Map&lt;String, Object&gt; map)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setData(map);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ResultCode.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ResultCode</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Integer</span> <span class="variable">SUCCESS</span> <span class="operator">=</span> <span class="number">20000</span>; <span class="comment">//成功</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Integer</span> <span class="variable">ERROR</span> <span class="operator">=</span> <span class="number">20001</span>; <span class="comment">//失败</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tips：代码采用链式编程，Lombok支持链式编程，加注解@Accessors（chain&#x3D;true）即可。【博主还没有测试是否能成功，成功后修改博客内容。】 </p><h5 id="2）在service中引入-common-utils"><a href="#2）在service中引入-common-utils" class="headerlink" title="2）在service中引入 common_utils"></a>2）在<code>service</code>中引入 <code>common_utils</code></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.atguigu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;common_utils&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><em><strong>用 maven把 utils install一下，安装到 maven仓库中</strong></em></p><h5 id="3）对controller内的代码进行修改"><a href="#3）对controller内的代码进行修改" class="headerlink" title="3）对controller内的代码进行修改"></a>3）对controller内的代码进行修改</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Api(tags = &quot;讲师管理模块&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/eduservice/teacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EduTeacherController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduTeacherService eduTeacherService;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     查询所有讲师</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">      <span class="meta">@ApiOperation(&quot;查询所有讲师&quot;)</span></span><br><span class="line">      <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">      <span class="keyword">public</span> R <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">      List&lt;EduTeacher&gt; list = eduTeacherService.list(<span class="literal">null</span>);</span><br><span class="line">      <span class="keyword">return</span> R.ok().data(<span class="string">&quot;items&quot;</span>, list);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     逻辑删除讲师</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">      <span class="meta">@ApiOperation(&quot;逻辑删除讲师&quot;)</span></span><br><span class="line">      <span class="meta">@DeleteMapping(&quot;/deleteTeacherById/&#123;id&#125;&quot;)</span></span><br><span class="line">      <span class="keyword">public</span> R <span class="title function_">deleteTeacherById</span><span class="params">(<span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;讲师ID&quot;, required = true)</span> <span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">      <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> eduTeacherService.removeById(id);</span><br><span class="line">      <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">              <span class="keyword">return</span> R.ok();</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> R.error();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em><strong>可用三目运算符对代码进行优化  <code>return teacherService.removeById(id) ? R.ok() : R.error();</code>另外是对 R进行导包的，注意导自己的包  <code>import com.atguigu.commonutils.R;</code>，不要导 baomidou的。</strong></em></p><h4 id="5、分页带条件查询功能实现-♥"><a href="#5、分页带条件查询功能实现-♥" class="headerlink" title="5、分页带条件查询功能实现 ♥"></a>5、分页带条件查询功能实现 ♥</h4><h5 id="1）首先在MP配置类中加入分页插件"><a href="#1）首先在MP配置类中加入分页插件" class="headerlink" title="1）首先在MP配置类中加入分页插件"></a>1）首先在MP配置类中加入分页插件</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2）在controller内编写简易分页的方法"><a href="#2）在controller内编写简易分页的方法" class="headerlink" title="2）在controller内编写简易分页的方法"></a>2）在controller内编写简易分页的方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//current 当前页</span></span><br><span class="line">   <span class="comment">//limit 每页记录数</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;pageTeacher/&#123;current&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> R <span class="title function_">pageListTeacher</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">long</span> current,</span></span><br><span class="line"><span class="params">                            <span class="meta">@PathVariable</span> <span class="type">long</span> limit)</span> &#123;</span><br><span class="line">       <span class="comment">//创建page对象</span></span><br><span class="line">       Page&lt;EduTeacher&gt; pageTeacher = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(current,limit);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//调用方法实现分页</span></span><br><span class="line">       <span class="comment">//调用方法时候，底层封装，把分页所有数据封装到pageTeacher对象里面</span></span><br><span class="line">       teacherService.page(pageTeacher,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">       <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> pageTeacher.getTotal();<span class="comment">//总记录数</span></span><br><span class="line">       List&lt;EduTeacher&gt; records = pageTeacher.getRecords(); <span class="comment">//数据list集合</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// Map map = new HashMap();</span></span><br><span class="line">       <span class="comment">// map.put(&quot;total&quot;,total);</span></span><br><span class="line">       <span class="comment">// map.put(&quot;rows&quot;,records);</span></span><br><span class="line">       <span class="comment">// return R.ok().data(map);</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> R.ok().data(<span class="string">&quot;total&quot;</span>,total).data(<span class="string">&quot;rows&quot;</span>,records);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>3）创建VO对象 <code>TeacherQuery</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TeacherQuery</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;教师名称,模糊查询&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;头衔 1高级讲师 2首席讲师&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer level;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;查询开始时间&quot;, example = &quot;2019-01-01 10:10:10&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String begin;</span><br><span class="line">    <span class="comment">//注意，这里使用的是String类型，前端传过来的数据无需进行类型转换</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;查询结束时间&quot;, example = &quot;2019-12-01 10:10:10&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>使用 ValueObject来封装业务数据，并且有一个单独的方法可以用来获取或者发送这个 VO，当客户端请求一些业务数据的时候，服务端就可以产生出一个 VO，并且将它赋值。最后，可以用传值的方法传递给客户端。</strong></em></p><p> <code>@Data</code> &#x3D;<code>@Setter</code> + <code>@Getter</code> +<code>@RequiredArgsConstructor</code> + <code>@ToString</code> + <code>@EqualsAndHashCode</code> </p><h5 id="4）在controller里编写带条件查询的分页方法"><a href="#4）在controller里编写带条件查询的分页方法" class="headerlink" title="4）在controller里编写带条件查询的分页方法"></a>4）在controller里编写带条件查询的分页方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;pageTeacherCondition/&#123;current&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">pageTeacherCondition</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">long</span> current,<span class="meta">@PathVariable</span> <span class="type">long</span> limit,</span></span><br><span class="line"><span class="params">                              <span class="meta">@RequestBody(required = false)</span>  TeacherQuery teacherQuery)</span> &#123;</span><br><span class="line">    <span class="comment">//创建page对象</span></span><br><span class="line">    Page&lt;EduTeacher&gt; pageTeacher = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(current,limit);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构建条件</span></span><br><span class="line">    QueryWrapper&lt;EduTeacher&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">// 多条件组合查询</span></span><br><span class="line">    <span class="comment">// mybatis学过 动态sql</span></span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> teacherQuery.getName();<span class="comment">//讲师名称</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">level</span> <span class="operator">=</span> teacherQuery.getLevel();<span class="comment">//讲师等级</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">begin</span> <span class="operator">=</span> teacherQuery.getBegin();<span class="comment">//开始时间</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> teacherQuery.getEnd();<span class="comment">//结束时间</span></span><br><span class="line">    <span class="comment">//判断条件值是否为空，如果不为空拼接条件</span></span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(name)) &#123;</span><br><span class="line">        <span class="comment">//构建条件</span></span><br><span class="line">        wrapper.like(<span class="string">&quot;name&quot;</span>,name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(level)) &#123;</span><br><span class="line">        wrapper.eq(<span class="string">&quot;level&quot;</span>,level);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(begin)) &#123;</span><br><span class="line">        wrapper.ge(<span class="string">&quot;gmt_create&quot;</span>,begin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(end)) &#123;</span><br><span class="line">        wrapper.le(<span class="string">&quot;gmt_create&quot;</span>,end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用方法实现条件查询分页</span></span><br><span class="line">    teacherService.page(pageTeacher,wrapper);</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> pageTeacher.getTotal();<span class="comment">//总记录数</span></span><br><span class="line">    List&lt;EduTeacher&gt; records = pageTeacher.getRecords(); <span class="comment">//数据list集合</span></span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;total&quot;</span>,total).data(<span class="string">&quot;rows&quot;</span>,records);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>:black_heart:看弹幕说可以使用MP中带condition参数的重载方法构建，自己尝试修改失败，有大神看见了麻烦知道怎么改，麻烦联系我一下。</p><p>@RequestBody使用 json传递数据，把json数据封装到对象里面。（必须使用post提交方式。）</p><p>@ResponseBody支持将返回值放在response体内，而不是返回一个页面。 </p><h4 id="6、新增和修改讲师功能实现"><a href="#6、新增和修改讲师功能实现" class="headerlink" title="6、新增和修改讲师功能实现"></a>6、新增和修改讲师功能实现</h4><p>1）在<code>service_base  </code> 模块下创建<code>handler</code>包，包下创建<code>MetaObjectHandler.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="comment">//属性名称，不是字段名称</span></span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;gmtCreate&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;gmtModified&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;gmtModified&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>:v: column就是数据库里的字段名称，field就是实体类的属性名称</p><p>2）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty(value = &quot;创建时间&quot;)</span></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line"><span class="keyword">private</span> Date gmtCreate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModelProperty(value = &quot;更新时间&quot;)</span></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line"><span class="keyword">private</span> Date gmtModified;</span><br></pre></td></tr></table></figure><h4 id="6、跨域问题-♥"><a href="#6、跨域问题-♥" class="headerlink" title="6、跨域问题 ♥"></a>6、跨域问题 ♥</h4>]]></content>
      
      
      
        <tags>
            
            <tag> 实战项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring IOC</title>
      <link href="/2022/07/28/Spring%20IOC/"/>
      <url>/2022/07/28/Spring%20IOC/</url>
      
        <content type="html"><![CDATA[<p>##Spring IOC</p><h3 id="1-SpringIOC的理解、原理与实现"><a href="#1-SpringIOC的理解、原理与实现" class="headerlink" title="1.SpringIOC的理解、原理与实现"></a>1.SpringIOC的理解、原理与实现</h3><ul><li>ioc容器的创建过程（beanFactory、DefaultListableBeanFactory），向bean工厂中设置参数（BeanPostProceedsor、Aware接口的子类）</li><li>加载解析bean对象，准备要创建的bean对象的定义对象beanDefinition（xml或者注解的解析过程）</li><li>beanFactoryPostProcessor的处理，此处是拓展点，PlaceHolderConfigurSupport,ConfigurationClassPostProcessor</li><li>BeanPostProcessor的注册功能，方便后续对bean对象完成具体的扩展功能</li><li>通过反射的方式将BeanDefinition对象实例化成具体的bean对象</li><li>bean对象的初始化工程（填充属性、调用aware子类的方法、调用BeanPostProcessor前置处理方法、调用init-method方法、调用BeanPostProcessor的后置处理方法）</li><li>生成完整的bean对象，通过getBean方法可以直接获取</li><li>销毁过程。接口DisposableBean方法destroy。</li></ul><h4 id="1-1-IOC是将对象交给容器管理，原来对象由使用者控制，现有spring控制"><a href="#1-1-IOC是将对象交给容器管理，原来对象由使用者控制，现有spring控制" class="headerlink" title="1.1 IOC是将对象交给容器管理，原来对象由使用者控制，现有spring控制"></a>1.1 IOC是将对象交给容器管理，原来对象由使用者控制，现有spring控制</h4><h5 id="简要思路："><a href="#简要思路：" class="headerlink" title="简要思路："></a>简要思路：</h5><p>管理什么？-》<strong>Service + Dao</strong></p><p>如何将被管理的对象告知IOC容器-》<strong>配置</strong></p><p>被管理的对象交给IOC容器，如何获取到IOC容器？-》<strong>接口</strong></p><p>IOC容器得到后，如何从容器中获取bean？-》<strong>接口方法</strong></p><p>使用Spring导入哪些坐标？-》<strong>pom.xml</strong></p><h5 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h5><ol><li><p>导入spring的坐标spring-context</p></li><li><p>配置bean（别配接口，配实现类，要拿bean造对象）</p><p>bean标签表示配置bean、id属性表示给bean起名字、class属性表示给bean定义类型</p></li><li><p>获取IOC容器</p></li><li><p>通过当时定义的id获取bean</p></li></ol><h4 id="1-2-DI依赖注入，把对应的属性值注入对象"><a href="#1-2-DI依赖注入，把对应的属性值注入对象" class="headerlink" title="1.2 DI依赖注入，把对应的属性值注入对象"></a>1.2 DI依赖注入，把对应的属性值注入对象</h4><h5 id="简要思路：-1"><a href="#简要思路：-1" class="headerlink" title="简要思路："></a>简要思路：</h5><p>基于IOC管理bean</p><p>Service中使用new形式创建的Dao对象是否保留？-》<strong>否</strong></p><p>Service中需要Dao对象如何进入到Service？-》<strong>提供方法</strong></p><p>Service与Dao间的关系如何描述？-》<strong>配置</strong></p><h5 id="具体步骤：-1"><a href="#具体步骤：-1" class="headerlink" title="具体步骤："></a>具体步骤：</h5><p>1.删除使用new形式创建对象的代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private XXXDao XXXDao;</span><br></pre></td></tr></table></figure><p>2.提供依赖对象对应的setter方法</p><p>3.配置service与dao之间的关系</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;property name=&quot;XXXDao属性名称&quot; ref=&quot;id名称&quot;&gt;</span><br></pre></td></tr></table></figure><p>4.通过当时定义的id获取bean</p><p>IOC体系结构设计</p><p><a href="https://postimg.cc/rKkJn6zM">spring-framework-ioc-source-7.png</a></p><ul><li><p><strong>BeanFactory： 工厂模式定义了IOC容器的基本功能规范</strong></p><p>BeanFactory 有三个子类：ListableBeanFactory、HierarchicalBeanFactory 和AutowireCapableBeanFactory，而BeanFactory定义多层次接口的原因在于<strong>区分在 Spring 内部在操作过程中对象的传递和转化过程中，对对象的数据访问所做的限制</strong>。 </p></li><li><p><strong>BeanRegistry： 向IOC容器手工注册 BeanDefinition 对象的方法</strong></p><p>Spring 配置文件中每一个<code>&lt;bean&gt;</code>节点元素在 Spring 容器里都通过一个 BeanDefinition 对象表示，它描述了 Bean 的配置信息。而 BeanDefinitionRegistry 接口提供了向容器手工注册 BeanDefinition 对象的方法。</p></li><li><h5 id="BeanDefinition：各种Bean对象及其相互的关系"><a href="#BeanDefinition：各种Bean对象及其相互的关系" class="headerlink" title="BeanDefinition：各种Bean对象及其相互的关系"></a>BeanDefinition：各种Bean对象及其相互的关系</h5><blockquote><p>Bean对象存在依赖嵌套等关系，所以设计者设计了BeanDefinition，它用来对Bean对象及关系定义；我们在理解时只需要抓住如下三个要点：</p><ul><li><strong>BeanDefinition 定义了各种Bean对象及其相互的关系</strong></li><li><strong>BeanDefinitionReader 这是BeanDefinition的解析器</strong></li><li><strong>BeanDefinitionHolder 这是BeanDefination的包装类，用来存储BeanDefinition，name以及aliases等。</strong></li></ul></blockquote></li></ul><p><a href="https://postimg.cc/bGJzbNnJ">spring-framework-ioc-source-71.png</a></p><h4 id="1-3Spring初始化和创建对象流程"><a href="#1-3Spring初始化和创建对象流程" class="headerlink" title="1.3Spring初始化和创建对象流程"></a>1.3Spring初始化和创建对象流程</h4><h5 id="初始化："><a href="#初始化：" class="headerlink" title="初始化："></a>初始化：</h5><p><strong>第一个过程：BeanDifinition的Resource定位</strong></p><p>这个Resource定位指的是BeanDifinition的资源定位，它由ResourceLoader通过统一的Resource接口来完成，这个Resource对各种形式的BeanDifinition的使用都提供了统一的接口。</p><p>对于这些BeanDifinition的存在形式，相信大家都不会感到陌生。比如，</p><p>在文件系统中的Bean定义信息可以使用FileSystemResource来进行抽象。</p><p>在类路劲中的Bean定义信息可以使用ClassPathResource。</p><p>这个定位过程类似于容器寻找数据的过程，就想水桶装水先要把水找到一样。</p><p><strong>第二个过程：BeanDifinition的载入</strong></p><p>这个载入过程是把用户定义好的Bean表示成Ioc容器内部的数据结构，而这个容器内部的数据结构就是BeanDifinition。具体来说，BeanDifinition实际上就是POJO对象在IOC容器中的抽象，通过这个BeanDifinition定义的数据结构，使IOC容器能够方便的对POJO对象也就是Bean进行管理。</p><p><strong>第三个过程：BeanDifinition的注册</strong></p><p>这个操作是通过调用BeanDifinitionRegistry借口来实现的。这个注册过程把载入过程中解析得到的BeanDifinition向Ioc容器进行注册。在阅读源码中可知，在IOC容器内部将BeanDifinition注入到一个HashMap中去，Ioc容器就是通过这个HashMap来持有这些BeanDifinition数据的。<br><a href="https://postimg.cc/jw35j7wX">spring-framework-ioc-source-9.png</a></p><h3 id="2-Spring-IOC的底层实现"><a href="#2-Spring-IOC的底层实现" class="headerlink" title="2.Spring IOC的底层实现"></a>2.Spring IOC的底层实现</h3><p>原理：xml解析、工厂模式、反射。 </p><ul><li>先通过createBeanFactory创建出一个Bean工厂</li><li>开始循环创建对象，优先通过getBean、doGetBean从容器中查找（容器中bean为单例模式）</li><li>若容器中找不到，则通过createBean、doCreatBean方法，以及反射的方式创建对象，一般情况下是使用的是无参构造器（getDeclareConstructor、newInstance）</li><li>进行对象的属性填充populateBean</li><li>进行其他初始化操作initializingBean</li></ul><h3 id="3-bean的生命周期"><a href="#3-bean的生命周期" class="headerlink" title="3.bean的生命周期"></a>3.bean的生命周期</h3><ol><li>实例化bean：反射的方式生成对象</li><li>填充bean的属性：populateBean（），循环依赖的问题（三级缓存）</li><li>调用aware接口相关的方法：invokeAwareMethod（完成BeanName，BeanFactory，BeanClassLoader对象的属性设置）</li><li>调用BeanPostProcessor中的前置处理方法：使用比较多的有（ApplicationContextPostProcessor设置ApplicationContext，Environment，ResourceLoader、EmbenddValueResolver等对象）</li><li>调用initmethod方法：invokerInitmethod（），判断是否实现了initlizingBean接口，如果有，调用afterPropertiesSet方法，没有就不调用</li><li>调用BeanPostProcess的后置处理方法：spring的aop就是在此处实现的，AbstractAutoProxyCreator注册Destuction相关的回调接口：钩子函数</li><li>获取完整的对象，可以通过getBean的方式来进行对象的获取</li><li>销毁流程：1.判断是否实现了DispoableBean接口。2.调用destroyMethod方法</li></ol><p><a href="https://postimg.cc/zVFb0QhK"><img src="/" alt="spring-framework-ioc-source-102.png"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
