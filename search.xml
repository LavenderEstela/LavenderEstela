<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>UCB CS61A</title>
      <link href="/2022/10/07/CS61A/"/>
      <url>/2022/10/07/CS61A/</url>
      
        <content type="html"><![CDATA[<h1 id="UCB-CS61A"><a href="#UCB-CS61A" class="headerlink" title="UCB CS61A"></a>UCB CS61A</h1><h2 id="1-Lectures"><a href="#1-Lectures" class="headerlink" title="1-Lectures"></a>1-Lectures</h2><h3 id="1-1-Lecture-1-Computer-Science"><a href="#1-1-Lecture-1-Computer-Science" class="headerlink" title="1.1 Lecture 1.Computer Science"></a>1.1 Lecture 1.Computer Science</h3><p>“Python like a prolifi bard.”</p><ul><li><p><em>Numeric expressions</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span></span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br><span class="line"></span><br><span class="line"><span class="number">2000</span> + <span class="number">20</span></span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br><span class="line"></span><br><span class="line">-<span class="number">1</span> + <span class="number">2</span> + <span class="number">3</span> + <span class="number">4</span> * ((<span class="number">5</span> // <span class="number">6</span>) + <span class="number">7</span> * <span class="number">8</span> * <span class="number">9</span>)</span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br></pre></td></tr></table></figure></li><li><p><em>Functions</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">abs</span>(-<span class="number">2</span>)</span><br><span class="line">&gt;&gt;<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">abs</span>(<span class="number">2301</span> - <span class="number">4321</span>)</span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br></pre></td></tr></table></figure><p>tips:abs函数为返回数字的绝对值 </p></li><li><p><em>Values</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Go Bears&quot;</span></span><br><span class="line">&gt;&gt;<span class="string">&quot;Go Bears&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;Gob&quot;</span> + <span class="string">&quot;ears&quot;</span></span><br><span class="line">&gt;&gt;<span class="string">&quot;Gobears&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><em>Objects</em></p></li><li><p>*Note: Download from <a href="http://composingprograms.com/shakespeare.txt">http://composingprograms.com/shakespeare.txt</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">shakes = <span class="built_in">open</span>(<span class="string">&#x27;shakespeare.txt&#x27;</span>)</span><br><span class="line">text = shakes.read().split()</span><br><span class="line"><span class="built_in">len</span>(text)</span><br><span class="line">text[:<span class="number">25</span>]</span><br><span class="line">text.count(<span class="string">&#x27;the&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;thou&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;you&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;forsooth&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;,&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p><em>Sets</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">words = <span class="built_in">set</span>(text)</span><br><span class="line"><span class="built_in">len</span>(words)</span><br></pre></td></tr></table></figure></li><li><p><em>Combinations</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;draw&#x27;</span></span><br><span class="line">&gt;&gt;<span class="string">&#x27;draw&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;draw&#x27;</span>[<span class="number">0</span>]</span><br><span class="line">&gt;&gt;<span class="string">&#x27;d&#x27;</span></span><br><span class="line"></span><br><span class="line">&#123;w[<span class="number">0</span>] <span class="keyword">for</span> w <span class="keyword">in</span> words&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>Data</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;draw&#x27;</span>[::-<span class="number">1</span>]</span><br><span class="line">&gt;&gt;<span class="string">&#x27;ward&#x27;</span></span><br><span class="line"></span><br><span class="line">&#123;w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w == w[::-<span class="number">1</span>] <span class="keyword">and</span> <span class="built_in">len</span>(w)&gt;<span class="number">4</span>&#125;</span><br><span class="line">&gt;&gt;</span><br><span class="line"></span><br><span class="line">&#123;w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w[::-<span class="number">1</span>] <span class="keyword">in</span> words <span class="keyword">and</span> <span class="built_in">len</span>(w) == <span class="number">4</span>&#125;</span><br><span class="line">&gt;&gt;</span><br><span class="line"></span><br><span class="line">&#123;w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w[::-<span class="number">1</span>] <span class="keyword">in</span> words <span class="keyword">and</span> <span class="built_in">len</span>(w) &gt; <span class="number">6</span>&#125;</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop【连载中】</title>
      <link href="/2022/10/07/Hadoop/"/>
      <url>/2022/10/07/Hadoop/</url>
      
        <content type="html"><![CDATA[<h1 id="Hadoop"><a href="#Hadoop" class="headerlink" title="Hadoop"></a>Hadoop</h1><p>Hadoop的优势（4高）</p><p>1）高可靠性：Hadoop底层维护多个数据副本，所以即使Hadoop某个计算元素或存储出现故障，也不会导致数据丢失。</p><p>2）高扩展性：在集群间分配任务数据，可方便的扩展数以千计的节点。</p><p>3）高效性：在MapReduce的思想下，Hadoop是并行工作的，以加快任务处理速度。</p><p>4）高容错性：能够自动将失败的任务重新分配。</p><p>Hadoop1.x和Hadoop2.x区别</p><p>在Hadoop1.x时代，Hadoop中的MapReduce同时处理业务逻辑运算和资源的调度，耦合性较大，在Hadoop2.x时代，增加了Yarn。Yarn只负责资源的调度，MapReduce只负责运算。</p><p>HDFS架构概述</p><p>1）NameNode（nn）：存储文件的元数据，如文件名，文件目录结构，文件属性（生成时间、副本数、文件权限），以及每个文件的块列表和块所在的DataNode等。</p><p>2）DataNode（dn）：在本地文件系统存储文件块数据，以及块数据的校验和。</p><p>3）SecondaryName Node（2nn）：每隔一段时间对NameNode元数据备份。</p><p>YARN架构</p>]]></content>
      
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UCB CS61A</title>
      <link href="/2022/10/07/%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82/"/>
      <url>/2022/10/07/%E7%A1%85%E8%B0%B7%E8%AF%BE%E5%A0%82/</url>
      
        <content type="html"><![CDATA[<h1 id="UCB-CS61A"><a href="#UCB-CS61A" class="headerlink" title="UCB CS61A"></a>UCB CS61A</h1><h2 id="1-Lectures"><a href="#1-Lectures" class="headerlink" title="1-Lectures"></a>1-Lectures</h2><h3 id="1-1-Lecture-1-Computer-Science"><a href="#1-1-Lecture-1-Computer-Science" class="headerlink" title="1.1 Lecture 1.Computer Science"></a>1.1 Lecture 1.Computer Science</h3><p>“Python like a prolifi bard.”</p><ul><li><p><em>Numeric expressions</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span></span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br><span class="line"></span><br><span class="line"><span class="number">2000</span> + <span class="number">20</span></span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br><span class="line"></span><br><span class="line">-<span class="number">1</span> + <span class="number">2</span> + <span class="number">3</span> + <span class="number">4</span> * ((<span class="number">5</span> // <span class="number">6</span>) + <span class="number">7</span> * <span class="number">8</span> * <span class="number">9</span>)</span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br></pre></td></tr></table></figure></li><li><p><em>Functions</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">abs</span>(-<span class="number">2</span>)</span><br><span class="line">&gt;&gt;<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">abs</span>(<span class="number">2301</span> - <span class="number">4321</span>)</span><br><span class="line">&gt;&gt;<span class="number">2020</span></span><br></pre></td></tr></table></figure><p>tips:abs函数为返回数字的绝对值 </p></li><li><p><em>Values</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Go Bears&quot;</span></span><br><span class="line">&gt;&gt;<span class="string">&quot;Go Bears&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;Gob&quot;</span> + <span class="string">&quot;ears&quot;</span></span><br><span class="line">&gt;&gt;<span class="string">&quot;Gobears&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><em>Objects</em></p></li><li><p>*Note: Download from <a href="http://composingprograms.com/shakespeare.txt">http://composingprograms.com/shakespeare.txt</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">shakes = <span class="built_in">open</span>(<span class="string">&#x27;shakespeare.txt&#x27;</span>)</span><br><span class="line">text = shakes.read().split()</span><br><span class="line"><span class="built_in">len</span>(text)</span><br><span class="line">text[:<span class="number">25</span>]</span><br><span class="line">text.count(<span class="string">&#x27;the&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;thou&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;you&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;forsooth&#x27;</span>)</span><br><span class="line">text.count(<span class="string">&#x27;,&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p><em>Sets</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">words = <span class="built_in">set</span>(text)</span><br><span class="line"><span class="built_in">len</span>(words)</span><br></pre></td></tr></table></figure></li><li><p><em>Combinations</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;draw&#x27;</span></span><br><span class="line">&gt;&gt;<span class="string">&#x27;draw&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;draw&#x27;</span>[<span class="number">0</span>]</span><br><span class="line">&gt;&gt;<span class="string">&#x27;d&#x27;</span></span><br><span class="line"></span><br><span class="line">&#123;w[<span class="number">0</span>] <span class="keyword">for</span> w <span class="keyword">in</span> words&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>Data</em></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;draw&#x27;</span>[::-<span class="number">1</span>]</span><br><span class="line">&gt;&gt;<span class="string">&#x27;ward&#x27;</span></span><br><span class="line"></span><br><span class="line">&#123;w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w == w[::-<span class="number">1</span>] <span class="keyword">and</span> <span class="built_in">len</span>(w)&gt;<span class="number">4</span>&#125;</span><br><span class="line">&gt;&gt;</span><br><span class="line"></span><br><span class="line">&#123;w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w[::-<span class="number">1</span>] <span class="keyword">in</span> words <span class="keyword">and</span> <span class="built_in">len</span>(w) == <span class="number">4</span>&#125;</span><br><span class="line">&gt;&gt;</span><br><span class="line"></span><br><span class="line">&#123;w <span class="keyword">for</span> w <span class="keyword">in</span> words <span class="keyword">if</span> w[::-<span class="number">1</span>] <span class="keyword">in</span> words <span class="keyword">and</span> <span class="built_in">len</span>(w) &gt; <span class="number">6</span>&#125;</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/2022/09/22/Linux/"/>
      <url>/2022/09/22/Linux/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux【连载中】"><a href="#Linux【连载中】" class="headerlink" title="Linux【连载中】"></a>Linux【连载中】</h1><p>快照——非常重要的一个功能</p><p>系统进行快照之后，即使文件进入到回收站被清空之后，返回快照状态依然可以恢复。</p><h2 id="Linux文件"><a href="#Linux文件" class="headerlink" title="Linux文件"></a>Linux文件</h2><p>linux中万物皆文件。</p><p>Linux中几个重要的目录结构</p><p>&#x2F;home </p><p>存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</p><p>&#x2F;root</p><p>该目录为系统管理员，也称作超级权限者的用户主目录。</p><p>&#x2F;etc</p><p>所有的系统管理所需要的配置文件和子目录</p><p>&#x2F;user</p><p>非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</p><p>&#x2F;boot</p><p>存在的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件，自己安装的东西别放这里。</p><p>&#x2F;media</p><p>linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。</p><p>&#x2F;mnt</p><p>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在&#x2F;mnt&#x2F;上，然后进入该目录就可以查看里面的内容了。</p><h3 id="一般模式"><a href="#一般模式" class="headerlink" title="一般模式"></a>一般模式</h3><p>以 vi&#x2F;vim 打开一个档案就直接进入一般模式了。</p><table><thead><tr><th>语法</th><th>功能描述</th></tr></thead><tbody><tr><td>yy</td><td><strong>复制</strong>光标当前一行</td></tr><tr><td>y数字y</td><td>复制一段（从第几行到第几行）</td></tr><tr><td>p</td><td>箭头移动到目的行<strong>粘贴</strong></td></tr><tr><td>u</td><td><strong>撤销上一步</strong></td></tr><tr><td>dd</td><td><strong>删除</strong>光标当前行</td></tr><tr><td>d数字d</td><td>删除光标（含）后多少行</td></tr><tr><td>x</td><td>删除一个字母，相当于del，<strong>向后删</strong></td></tr><tr><td>X</td><td>删除一个字母，相当于Backspace，向前删</td></tr><tr><td>yw</td><td>复制一个词</td></tr><tr><td>dw</td><td>删除一个词</td></tr><tr><td>^</td><td><strong>移动到行头</strong></td></tr><tr><td>$</td><td><strong>移动到行尾</strong></td></tr><tr><td>gg或者1+G</td><td><strong>移动到页头</strong></td></tr><tr><td>G</td><td><strong>移动到页尾</strong></td></tr><tr><td>数字+G（先输入数字，在按G）</td><td><strong>移动到目标行</strong></td></tr></tbody></table><h3 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h3><p>在一般模式中可以进行删除、复制、粘贴等的动作，但是无法编辑文件内容！要等到你按下『i, I, o, O, a, A』等任何一个字母之后才会进入编辑模式。</p><p>注意了！通常在Linux中，按下这些按键时，在画面的左下方会出现『INSERT或 REPLACE』的字样，此时才可以进行编辑。而如果要回到一般模式时， 则必须要按下<code>Esc</code>键这个按键即可退出编辑模式。</p><p>1）进入编辑模式</p><p>表1-2 常用语法</p><table><thead><tr><th>按键</th><th>功能</th></tr></thead><tbody><tr><td>i</td><td><strong>当前光标前</strong></td></tr><tr><td>a</td><td>当前光标后</td></tr><tr><td>o</td><td><strong>当前光标行的下一行</strong></td></tr><tr><td>I</td><td>光标所在行最前</td></tr><tr><td>A</td><td>光标所在行最后</td></tr><tr><td>O</td><td>当前光标行的上一行</td></tr></tbody></table><p>2）退出编辑模式</p><p>按<code>Esc</code>键</p><p>命令模式</p><p><strong>在一般模式当中</strong>，输入『 **: &#x2F; ?**』3个中的任何一个按钮，就可以将光标移动到最底下那一行。</p><p>在这个模式当中， 可以提供你『搜寻资料』的动作，而读取、存盘、大量取代字符、离开 vi 、显示行号等动作是在此模式中达成的！</p><p>基本语法</p><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>:w</td><td><strong>保存</strong></td></tr><tr><td>:q</td><td><strong>退出</strong></td></tr><tr><td>:!</td><td><strong>强制执行</strong></td></tr><tr><td>: %s&#x2F;旧字符&#x2F;新字符</td><td><strong>批量替换 只替换第一个词</strong></td></tr><tr><td>&#x2F; 要查找的词</td><td>n 查找下一个，N 往上查找</td></tr><tr><td>? 要查找的词</td><td>n是查找上一个，N是往下查找</td></tr><tr><td>:set nu</td><td>显示行号</td></tr><tr><td>:set nonu</td><td>关闭行号</td></tr><tr><td>ZZ（shift+zz） :nohl</td><td><strong>没有修改文件直接退出，如果修改了文件保存后退</strong>。去除高亮显示</td></tr></tbody></table><p>运行级别（runlevel）</p><p>开机 &#x3D;》BIOS &#x3D;》&#x2F;boot &#x3D;》init进程 &#x3D;》运行级别 &#x3D;》运行级对应的服务</p><p>查看默认级别：vi&#x2F;etc&#x2F;inittab</p><p>Linux系统有7种运行级别：<strong>常用的是级别3和5</strong></p><ul><li>运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动</li><li>运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆</li><li>运行级别2：多用户状态（没有NFS），不支持网络</li><li>运行级别3：完全的多用户状态（有NFS），登陆后进入控制台命令行模式</li><li>运行级别4：系统未使用，保留</li><li>运行级别5：X11控制台，登陆后进入图像GUI模式</li><li>运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统</title>
      <link href="/2022/09/22/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/09/22/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><p>学校所授课程已经不满足实际开发需要，故上网学习，本笔记基于b站视频bv号：<code>BV1Cm4y1d7Ur</code>，仅学习使用。</p><p>Q1：什么是操作系统   </p><p>Operating System：making it easy to run programs</p>]]></content>
      
      
      
        <tags>
            
            <tag> 应试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库系统概论</title>
      <link href="/2022/09/22/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/"/>
      <url>/2022/09/22/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库系统概论"><a href="#数据库系统概论" class="headerlink" title="数据库系统概论"></a>数据库系统概论</h1><h2 id="装杯自用"><a href="#装杯自用" class="headerlink" title="装杯自用"></a>装杯自用</h2><h3 id="1-1-1数据库的四个基本概念"><a href="#1-1-1数据库的四个基本概念" class="headerlink" title="1.1.1数据库的四个基本概念"></a>1.1.1数据库的四个基本概念</h3><ol><li><p><strong>数据</strong>：描述事物的符号记录</p></li><li><p><strong>数据库</strong>：概括地讲，数据库数据具有永久存储、有组织和可共享的三个基本特点。</p><p>严格的讲，数据库是长期储存在计算机内、有组织的、可共享的大量数据的集合。数据库中的数据按一定的数据模型组织、描述和储存，具有较小的冗余度、较高的数据独立性和易扩展性。并可为各种用户共享。</p></li><li><p><strong>数据库管理系统</strong>：是位于用户和操作系统之间的一层数据管理软件。和操作系统一样是计算机的基础软件。</p><p>主要功能：1、数据定义功能2、数据组织、存储和管理3、数据操纵功能4、数据库的事务管理和运行管理5、数据库的建立和维护功能6、其他功能（通信功能，数据转换功能，互访和互操作功能等）</p></li><li><p><strong>数据库系统</strong>：是由数据库、数据库管理系统（及其应用开发）、应用程序和数据库管理员（DBA）组成的存储、管理、处理和维护数据的系统。</p></li></ol><h3 id="1-2-1数据模型"><a href="#1-2-1数据模型" class="headerlink" title="1.2.1数据模型"></a>1.2.1数据模型</h3><p>两类数据模型：概念模型+逻辑模型和物理模型</p><ol><li><p>概念模型：也称信息模型，它是按用户观点来对数据和信息建模，主要用于数据库设计</p><p>基本概念——</p><p>实体：客观存在并相互区别的事物。人</p><p>属性：实体所具有的某一特性。     人的鼻子、嘴巴</p><p>码：唯一标识实体的属性。学号</p><p>实体型：用实体名及其属性集合来抽象和刻画同类实体。  含有鼻子和嘴巴的人</p><p>实体集：同一类型实体的集合。学校</p><p>联系：实体之间的联系通常是指不同实体类集之间的联系。实体之间的联系有一对一、一对多和多对多等多种联系。</p><p>概念模型的一种表示方法：实体-联系方法。用E-R图来表述现实时间的概念模型。</p></li><li><p>逻辑模型：它是按计算机系统的观点对数据建模，主要用于数据库管理系统的实现。</p><p>包括：1.层次模型</p><p>​2.网状模型</p><p>​3.关系模型</p></li><li><p>物理模型：是对数据最底层的抽象，它描述数据在系统内部的表示方法和存取方法，或在磁盘上的存储方式和存取方法，是面向计算机系统的。</p></li></ol><p>联系：</p><p>​实体之间的联系通常是指不同实体集之间的联系。实体之间的联系有一对一、一对多和多对多等多种联系。</p><p>​实体内部的联系通常是指实体各属性之间的联系。</p><h3 id="1-2-2常用的数据模型"><a href="#1-2-2常用的数据模型" class="headerlink" title="1.2.2常用的数据模型"></a>1.2.2常用的数据模型</h3><p>常用的数据模型：层次模型，网状模型，关系模型，面向对象数据模型，对象关系数据模型，半结构化数据模型。</p><ul><li><p>层次模型：1、有且只有一个结点没有双亲结点，这个节点称为根节点。</p><p>​   2、根以外的其他结点有且只有一个双亲结点。</p></li><li><p>网状模型：1、允许一个以上的结点无双亲</p><pre><code>         2、一个结点可以有多于一个双亲。</code></pre></li><li><p>关系模型</p><p>关系：一个关系对于通常说的一张表。</p><p>元组：表中的一行。</p><p>属性：表中的一列。</p><p>码：也称马键，表中的某个属性组。</p><p>域：是一组具有相同数据类型的值的集合。</p><p>分量：元组中的一个属性。</p></li></ul><h3 id="1-2-3数据库系统的结构"><a href="#1-2-3数据库系统的结构" class="headerlink" title="1.2.3数据库系统的结构"></a>1.2.3数据库系统的结构</h3><ol><li><p>模式数据库中全体数据的逻辑结构和特征的描述，它仅仅涉及型的描述，不涉及具体的值。其一个具体值称为模式的一个实例。</p><p>模式是相对稳定的，实例是相对变动的。</p><p>三级模式结构：外模式+模式+内模式</p><p>外模式：也称子模式或用户</p></li><li><p>二级映像</p></li></ol><p>外模式&#x2F;模式映像：当模式改变时，由数据库管理员对各个外模式&#x2F;模式映像作相应改变，可以使外模式保持不变。应用程序不必修改。保证了数据与程序的逻辑独立性。</p><p>模式&#x2F;内模式：当数据库的存储结构改变时，有数据库管理员对模式&#x2F;内模式作相应改变，可以使模式保持不变，从而应用程序也不用改变，保证了数据与程序的物理独立性。</p><p>数据与程序之间的独立性使得数据的定义和描述可以从应用程序中分离出去。另外，由于数据的存取由数据库管理系统管理，从而简化了应用程序的编制，大大减少了应用程序的维护和修改。</p><p>2.1.1关系模式</p><p>关系模式：对关系的描述</p><p>关系是一张表，一张二维表。</p><p>2.1.2关系操作</p><p>插入删除修改查询</p><p>查询操作：选择、投影、连接、除法、并、差、交、笛卡尔积。</p><p>查询操作的基本操作：选择、投影、并、差、笛卡尔积。</p><p>2.1.3关系语言的分类</p><p>分为关系代数语言、关系演算语言，SQL语言</p><p>2.2.1关系代数语言</p><p>关系代数是一种抽象的查询语言，它用对关系的运算来表达查询。</p><p>三大要素：运算对象（关系），运算符（集合运算符和专门的关系运算符）和运算结果（关系）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 应试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud Alibaba【连载中】</title>
      <link href="/2022/09/20/Spring%20Cloud%20Alibaba/"/>
      <url>/2022/09/20/Spring%20Cloud%20Alibaba/</url>
      
        <content type="html"><![CDATA[<p>#Spring Cloud Alibaba</p><p>1.1.1</p><p>单体应用架构</p><p>垂直架构</p><p>分布式架构</p><p>SOA架构</p><p>微服务架构</p><p>1.2.1 </p><p>管理：nacos【服务治理，注册中心[服务注册 发现 剔除]】</p><p>通讯：springBoot restTemplate（”url“，参数）【自动将数据序列化成json，也可以反序列化】，feign</p><p>访问：gateway</p><p>自处理：sentinel   【实现熔断降级等功能】 </p><p>排错：skywalking  【链路追踪】</p><p>1.2.2 常见微服务架构</p><p>1.dubbo：zookeeper + dubbo + SpringMVC&#x2F;SpringBoot</p><ul><li>配套 通信方式：rpc</li><li>注册中心：zookeeper&#x2F;redis</li><li>配置中心：diamond</li></ul><p>2.SpringCloud：全家桶+嵌入第三方组件（Netflix）</p><ul><li>配套 通信方式：http restful</li><li>注册中心：eruka&#x2F;consul</li><li>配置中心：config</li><li>断路器：hystrix</li><li>网关：zuul</li><li>分布式追踪系统：sleuth + zipkin</li></ul><p>要在order模块中调用stock模块要用到springMVC，所以要添加web依赖，并且注释掉plugin</p><h2 id="Alibaba微服务组件Nacos注册中心"><a href="#Alibaba微服务组件Nacos注册中心" class="headerlink" title="Alibaba微服务组件Nacos注册中心"></a>Alibaba微服务组件Nacos注册中心</h2><p>2.1注册中心演变及其设计思想</p><p> 注册中心引入了一个心跳的机制（Time Task）</p><p>每5s发送一个心跳到注册中心 ，注册中心在超过5s没有收到心跳，默认本模块修改成下线down，超过30s就默认本模块已经宕机，剔除该模块。</p><p><strong>服务注册</strong>：Nacos Client会通过发送REST请求的方式向Nacos Server注册自己的服务，提供自身的元数据，比如ip地址、端口等信息，Nacos Server接收到注册请求后，就会把这些元数据信息存储在一个双层的内存Map中。</p><p><strong>服务心跳</strong>：在服务注册后，Nacos Client会维护一个定时心跳来持续通知Nacos Server，说明服务一直处于可用状态，防止被剔除。默认5s发送一次心跳。</p><p><strong>服务同步</strong>：Nacos Server集群之间会互相同步服务实例，用来保证服务信息的一致性。</p><p><strong>服务发现</strong>：服务消费者在调用服务提供者的服务时，会发送一个REST请求给Nacos Server，获取上面注册的服务清单，并且缓存在Nacos Client本地，同时会在Nacos Client本地开启一个定时任务拉去服务端最新的注册表信息更新到本地缓存。</p><p><strong>服务健康检查</strong>：Nacos Server会开启一个定时任务用来检查注册服务实例的健康情况，对于超过15s没有收到客户端心跳的实例会将它的healthy属性设为false（客户端检查时不会发现），如果某个实例超过30s没有收到心跳，直接剔除该实例（被剔除的实例如果恢复发送心跳时会重新注册）。</p><p>三个指标：C一致性 A可用性 P分区容错性</p><p>一致性协议：CP+AP</p><p>先在setting中使用ignorance排除灰掉的pom依赖，再maven刷新</p><p>雪崩保护：</p><p>​保护阈值：设置0-1之间的值 比如0.5</p><p>​临时实例：当服务器宕机了也不会从服务列表中剔除</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">order-service</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line">        <span class="attr">ephemeral:</span> <span class="literal">false</span> <span class="comment">#永久实例  哪怕宕机了也不会删除实例</span></span><br></pre></td></tr></table></figure><p>有可能在注册中心服务下线了，但是因为定时拉取服务列表，还可能能够访问到。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#service：默认取 $&#123;spring.application.name&#125;,也可以通过该选项配置</span></span><br><span class="line"><span class="comment">#group：默认DEFAULT_GROUP 更细的相同特征的服务进行归类分组管理</span></span><br><span class="line"><span class="comment">#weight：通常要结合 安装 权重的负载均衡策略，权重越高分配的流量越大</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1 cd nacos/ </span><br><span class="line">2 mvn ‐Prelease‐nacos clean install ‐U </span><br><span class="line">3 cd nacos/distribution/target/ </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@centos ~]# yum -y install java-1.8.0-openjdk*</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认安装目录: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.x86_64</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:371)</span><br><span class="line">at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:452)</span><br><span class="line">at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:462)</span><br><span class="line">at org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:473)</span><br><span class="line">at org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:480)</span><br><span class="line">at com.alibaba.nacos.config.server.service.repository.extrnal.ExternalStoragePersistServiceImpl.findConfigMaxId(ExternalStoragePersistServiceImpl.java:553)</span><br><span class="line">at com.alibaba.nacos.config.server.service.dump.processor.DumpAllProcessor.process(DumpAllProcessor.java:51)</span><br><span class="line">at com.alibaba.nacos.config.server.service.dump.DumpService.dumpConfigInfo(DumpService.java:260)</span><br><span class="line">at com.alibaba.nacos.config.server.service.dump.DumpService.dumpOperate(DumpService.java:172)</span><br><span class="line">... 48 common frames omitted</span><br></pre></td></tr></table></figure><p>默认负载均衡策略类似于轮询机制，但是在轮询的基础上加入了区域和可用性。</p><p>负载均衡策略是在我们的消费端进行调用的。</p><p>线程安全：ThreadLocalRandom</p><p>使用配置文件进行负载均衡策略更方便一点</p><p>开启饥饿加载，解决第一次调用慢的问题</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">1 ribbon:</span> </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>   <span class="string">eager‐load:</span> </span><br><span class="line"></span><br><span class="line"><span class="number">3</span>     <span class="comment"># 开启ribbon饥饿加载 </span></span><br><span class="line"></span><br><span class="line"><span class="attr">4     enabled:</span> <span class="literal">true</span> </span><br><span class="line"></span><br><span class="line"><span class="number">5</span>     <span class="comment"># 配置mall‐user使用ribbon饥饿加载，多个使用逗号分隔 </span></span><br><span class="line"></span><br><span class="line"><span class="attr">6     clients:</span> <span class="string">mall‐order</span> </span><br></pre></td></tr></table></figure><p>Spring Cloud LoadBalancer </p><p>spring官方提供了两种负载均衡的客户端：</p><p>1.RestTemplate</p><p>2.WebClient （国内使用较少，但是该技术填补了其他技术没有的空缺）</p><p>WebClient 是从Spring WebFlux 5.0版本开始提供的一个非阻塞的基于响应式编程的进行http请求的客户端工具。</p><p>注意：nacos-discovery中引入了ribbon，需要移除ribbon的包，如果不移除，也可以在yml中配置不使用ribbon</p><h3 id="Feign"><a href="#Feign" class="headerlink" title="Feign"></a>Feign</h3><p>Spring Cloud openfeign对Feign进行了增强，使其支持SpringMVC注解，另外还整合了Ribbon和Nacos，从而使得Feign的使用更加方便。</p><p>全局配置：当使用@Configuartion 会将配置作用所有的服务提供放</p><p>局部配置：1.通过配置类：如果只想针对某一个服务进行配置，就不要加@Configuration</p><p>​   2.通过配置文件</p><p>springboot默认的日志级别是info，feign的debug日志级别就不会输入</p><p>3.2契约配置</p><p>1）修改契约配置，支持Fegin原生的注解</p><p>注意：修改契约配置后，OrderFeignService不再支持springmvc的注解，需要使用Feign原生的注解</p><p>在既能升级cloud版本的同时又能使用原生Feign，减少因为注解更迭而产生的bug</p><p>在做全局异常处理的时候可以使用Thread.sleep对超时异常处理的bug进行修改。</p><p>负载均衡器首选Ribbon,服务熔断使用Sentinel</p><p>Nacos客户端 默认设计Properties的文件拓展名</p><p>一旦 修改成了非Properties格式，则必须通过file-extension进行设置</p><h3 id="Sentinel"><a href="#Sentinel" class="headerlink" title="Sentinel"></a>Sentinel</h3><p>服务的可用性问题</p><p>当服务器挂掉的时候，我们首先想到什么原因？</p><p>1.<strong>激增流量打垮</strong>，Load飙高。有可能你的服务器抗住了，但是缓存还没有预热，或者我的数据连接池来不及创建，把这些请求全部打入数据库中，数据库的服务器挂掉了，正在使用的客户迟迟得不到响应。所有线程都堆积在服务器前得不到回应，从而导致线程池打满，拖垮我们的服务器。</p><p>2.<strong>被其他服务拖垮</strong>，当我们请求一些慢sql，db超时或者第三方的服务，出现的卡顿或者网络不稳定。</p><p>3.<strong>异常未处理</strong>。本该正常执行的一些代码，比如说释放内存，清空对象，因为异常没有进行处理，久而久之导致内存溢出。</p><p>缺乏高可用防护&#x2F;容错机制，尤其是针对流量的防护。</p><p>服务雪崩效应：因服务提供者的不可用导致服务调用者的不可用，并将不可用逐渐放大的过程，就叫服务雪崩效应。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Spring Cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《谷粒学苑》项目——</title>
      <link href="/2022/09/18/%E8%B0%B7%E7%B2%92%E5%AD%A6%E8%8B%91/"/>
      <url>/2022/09/18/%E8%B0%B7%E7%B2%92%E5%AD%A6%E8%8B%91/</url>
      
        <content type="html"><![CDATA[<h1 id="《谷粒学苑》项目总结1-0【连载中】"><a href="#《谷粒学苑》项目总结1-0【连载中】" class="headerlink" title="《谷粒学苑》项目总结1.0【连载中】"></a>《谷粒学苑》项目总结1.0【连载中】</h1><p>本项目基于尚硅谷 <code>2020-05-11</code> 年的视频，进行总结复习。</p><h2 id="1-前景知识篇"><a href="#1-前景知识篇" class="headerlink" title="1-前景知识篇"></a>1-前景知识篇</h2><h3 id="1-1商业模式"><a href="#1-1商业模式" class="headerlink" title="1.1商业模式"></a>1.1商业模式</h3><p>本项目采用，B2C模式（Business To Customer 会员模式 ） </p><p><img src="C:\Users\86182\AppData\Local\Temp\1662559527690.png" alt="1662559527690"></p><h3 id="1-2项目功能模块"><a href="#1-2项目功能模块" class="headerlink" title="1.2项目功能模块"></a>1.2项目功能模块</h3><p>通过项目功能模块，回忆起对应代码如何实现效果。</p><p><img src="C:\Users\86182\AppData\Local\Temp\1662631718440.png" alt="1662631718440"></p><h3 id="1-3系统架构"><a href="#1-3系统架构" class="headerlink" title="1.3系统架构"></a>1.3系统架构</h3><p><img src="D:\photo\8fed6b485db444e9a4d0e31102628a59.png"></p><p><img src="D:\photo\4cd65e1f7e8042b7ab1af10531af9b25.png"></p><hr><h2 id="2-项目构建篇"><a href="#2-项目构建篇" class="headerlink" title="2-项目构建篇"></a>2-项目构建篇</h2><h3 id="1-1MySQL环境"><a href="#1-1MySQL环境" class="headerlink" title="1.1MySQL环境"></a>1.1MySQL环境</h3><ul><li><p>数据库名称：guli</p></li><li><p>运行资料 <code>guli_edu.sql</code> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_chapter&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_chapter` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;章节ID&#x27;,</span><br><span class="line">  `course_id` char(19) NOT NULL COMMENT &#x27;课程ID&#x27;,</span><br><span class="line">  `title` varchar(50) NOT NULL COMMENT &#x27;章节名称&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;显示排序&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_course_id` (`course_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_chapter&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_chapter` VALUES (&#x27;1&#x27;,&#x27;14&#x27;,&#x27;第一章：HTML&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:55:30&#x27;),(&#x27;1181729226915577857&#x27;,&#x27;18&#x27;,&#x27;第七章：I/O流&#x27;,70,&#x27;2019-10-09 08:32:58&#x27;,&#x27;2019-10-09 08:33:20&#x27;),(&#x27;1192252428399751169&#x27;,&#x27;1192252213659774977&#x27;,&#x27;第一章节&#x27;,0,&#x27;2019-11-07 09:28:25&#x27;,&#x27;2019-11-07 09:28:25&#x27;),(&#x27;15&#x27;,&#x27;18&#x27;,&#x27;第一章：Java入门&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-10-09 09:13:19&#x27;),(&#x27;3&#x27;,&#x27;14&#x27;,&#x27;第二章：CSS&#x27;,0,&#x27;2019-01-01 12:55:35&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;32&#x27;,&#x27;18&#x27;,&#x27;第二章：控制台输入和输出&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;44&#x27;,&#x27;18&#x27;,&#x27;第三章：控制流&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;48&#x27;,&#x27;18&#x27;,&#x27;第四章：类的定义&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;63&#x27;,&#x27;18&#x27;,&#x27;第五章：数组&#x27;,0,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-01-01 12:27:40&#x27;),(&#x27;64&#x27;,&#x27;18&#x27;,&#x27;第六章：继承&#x27;,61,&#x27;2019-01-01 12:27:40&#x27;,&#x27;2019-10-09 08:32:47&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_comment&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_comment` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;讲师ID&#x27;,</span><br><span class="line">  `course_id` varchar(19) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;课程id&#x27;,</span><br><span class="line">  `teacher_id` char(19) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;讲师id&#x27;,</span><br><span class="line">  `member_id` varchar(19) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;会员id&#x27;,</span><br><span class="line">  `nickname` varchar(50) DEFAULT NULL COMMENT &#x27;会员昵称&#x27;,</span><br><span class="line">  `avatar` varchar(255) DEFAULT NULL COMMENT &#x27;会员头像&#x27;,</span><br><span class="line">  `content` varchar(500) DEFAULT NULL COMMENT &#x27;评论内容&#x27;,</span><br><span class="line">  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_course_id` (`course_id`),</span><br><span class="line">  KEY `idx_teacher_id` (`teacher_id`),</span><br><span class="line">  KEY `idx_member_id` (`member_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=&#x27;评论&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_comment&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_comment` VALUES (&#x27;1194499162790211585&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三123&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;课程很好&#x27;,0,&#x27;2019-11-13 14:16:08&#x27;,&#x27;2019-11-13 14:16:08&#x27;),(&#x27;1194898406466420738&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三123&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;11&#x27;,0,&#x27;2019-11-14 16:42:35&#x27;,&#x27;2019-11-14 16:42:35&#x27;),(&#x27;1194898484388200450&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三123&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;111&#x27;,0,&#x27;2019-11-14 16:42:53&#x27;,&#x27;2019-11-14 16:42:53&#x27;),(&#x27;1195251020861317122&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,NULL,NULL,&#x27;2233&#x27;,0,&#x27;2019-11-15 16:03:45&#x27;,&#x27;2019-11-15 16:03:45&#x27;),(&#x27;1195251382720700418&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,NULL,NULL,&#x27;4455&#x27;,0,&#x27;2019-11-15 16:05:11&#x27;,&#x27;2019-11-15 16:05:11&#x27;),(&#x27;1195252819177570306&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;55&#x27;,0,&#x27;2019-11-15 16:10:53&#x27;,&#x27;2019-11-15 16:10:53&#x27;),(&#x27;1195252899448160258&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;55&#x27;,0,&#x27;2019-11-15 16:11:13&#x27;,&#x27;2019-11-15 16:11:13&#x27;),(&#x27;1195252920587452417&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;223344&#x27;,0,&#x27;2019-11-15 16:11:18&#x27;,&#x27;2019-11-15 16:11:18&#x27;),(&#x27;1195262128095559681&#x27;,&#x27;14&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;11&#x27;,0,&#x27;2019-11-15 16:47:53&#x27;,&#x27;2019-11-15 16:47:53&#x27;),(&#x27;1196264505170767874&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1&#x27;,&#x27;小三1231&#x27;,&#x27;http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoj0hHXhgJNOTSOFsS4uZs8x1ConecaVOB8eIl115xmJZcT4oCicvia7wMEufibKtTLqiaJeanU2Lpg3w/132&#x27;,&#x27;666666&#x27;,0,&#x27;2019-11-18 11:10:58&#x27;,&#x27;2019-11-18 11:10:58&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_course&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_course` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;课程ID&#x27;,</span><br><span class="line">  `teacher_id` char(19) NOT NULL COMMENT &#x27;课程讲师ID&#x27;,</span><br><span class="line">  `subject_id` char(19) NOT NULL COMMENT &#x27;课程专业ID&#x27;,</span><br><span class="line">  `subject_parent_id` char(19) NOT NULL COMMENT &#x27;课程专业父级ID&#x27;,</span><br><span class="line">  `title` varchar(50) NOT NULL COMMENT &#x27;课程标题&#x27;,</span><br><span class="line">  `price` decimal(10,2) unsigned NOT NULL DEFAULT &#x27;0.00&#x27; COMMENT &#x27;课程销售价格，设置为0则可免费观看&#x27;,</span><br><span class="line">  `lesson_num` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;总课时&#x27;,</span><br><span class="line">  `cover` varchar(255) CHARACTER SET utf8 NOT NULL COMMENT &#x27;课程封面图片路径&#x27;,</span><br><span class="line">  `buy_count` bigint(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;销售数量&#x27;,</span><br><span class="line">  `view_count` bigint(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;浏览数量&#x27;,</span><br><span class="line">  `version` bigint(20) unsigned NOT NULL DEFAULT &#x27;1&#x27; COMMENT &#x27;乐观锁&#x27;,</span><br><span class="line">  `status` varchar(10) NOT NULL DEFAULT &#x27;Draft&#x27; COMMENT &#x27;课程状态 Draft未发布  Normal已发布&#x27;,</span><br><span class="line">  `is_deleted` tinyint(3) DEFAULT NULL COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_title` (`title`),</span><br><span class="line">  KEY `idx_subject_id` (`subject_id`),</span><br><span class="line">  KEY `idx_teacher_id` (`teacher_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_course&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_course` VALUES (&#x27;1192252213659774977&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1178214681139539969&#x27;,&#x27;1178214681118568449&#x27;,&#x27;java基础课程：test&#x27;,0.01,2,&#x27;https://guli-file-190513.oss-cn-beijing.aliyuncs.com/cover/default.gif&#x27;,4,387,1,&#x27;Normal&#x27;,0,&#x27;2019-11-07 09:27:33&#x27;,&#x27;2019-11-18 13:35:03&#x27;),(&#x27;14&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1101348944971091969&#x27;,&#x27;1101348944920760321&#x27;,&#x27;XHTML CSS2 JS整站制作教程课程学习&#x27;,0.00,3,&#x27;http://guli-file.oss-cn-beijing.aliyuncs.com/cover/2019/03/13/d0086eb0-f2dc-45f7-bba1-744d95e5be0f.jpg&#x27;,3,44,15,&#x27;Normal&#x27;,0,&#x27;2018-04-02 18:33:34&#x27;,&#x27;2019-11-16 21:21:45&#x27;),(&#x27;15&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1101348944971091969&#x27;,&#x27;1101348944920760321&#x27;,&#x27;HTML5入门课程学习&#x27;,0.00,23,&#x27;http://guli-file.oss-cn-beijing.aliyuncs.com/cover/2019/03/13/22997b8e-3606-4d2e-9b4f-09f48418b6e4.jpg&#x27;,0,51,17,&#x27;Normal&#x27;,0,&#x27;2018-04-02 18:34:32&#x27;,&#x27;2019-11-12 10:19:20&#x27;),(&#x27;18&#x27;,&#x27;1189389726308478977&#x27;,&#x27;1178214681139539969&#x27;,&#x27;1178214681118568449&#x27;,&#x27;Java精品课程&#x27;,0.01,20,&#x27;http://guli-file.oss-cn-beijing.aliyuncs.com/cover/2019/03/06/866e9aca-b530-4f71-a690-72d4a4bfd1e7.jpg&#x27;,151,737,6,&#x27;Normal&#x27;,0,&#x27;2018-04-02 21:28:46&#x27;,&#x27;2019-11-18 11:14:52&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_course_collect&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_course_collect` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;收藏ID&#x27;,</span><br><span class="line">  `course_id` char(19) NOT NULL COMMENT &#x27;课程讲师ID&#x27;,</span><br><span class="line">  `member_id` char(19) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;课程专业ID&#x27;,</span><br><span class="line">  `is_deleted` tinyint(3) NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程收藏&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_course_collect&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_course_collect` VALUES (&#x27;1196269345666019330&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1&#x27;,1,&#x27;2019-11-18 11:30:12&#x27;,&#x27;2019-11-18 11:30:12&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_course_description&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_course_description` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;课程ID&#x27;,</span><br><span class="line">  `description` text COMMENT &#x27;课程简介&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=&#x27;课程简介&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_course_description&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_course_description` VALUES (&#x27;1104870479077879809&#x27;,&#x27;&lt;p&gt;11&lt;/p&gt;&#x27;,&#x27;2019-03-11 06:23:44&#x27;,&#x27;2019-03-11 06:23:44&#x27;),(&#x27;1192252213659774977&#x27;,&#x27;&lt;p&gt;测试&lt;/p&gt;&#x27;,&#x27;2019-11-07 09:27:33&#x27;,&#x27;2019-11-13 16:21:28&#x27;),(&#x27;14&#x27;,&#x27;&#x27;,&#x27;2019-03-13 06:04:43&#x27;,&#x27;2019-03-13 06:05:33&#x27;),(&#x27;15&#x27;,&#x27;&#x27;,&#x27;2019-03-13 06:03:33&#x27;,&#x27;2019-03-13 06:04:22&#x27;),(&#x27;18&#x27;,&#x27;&lt;p&gt;本套Java视频完全针对零基础学员，课堂实录，自发布以来，好评如潮！Java视频中注重与学生互动，讲授幽默诙谐、细致入微，覆盖Java基础所有核心知识点，同类Java视频中也是代码量大、案例多、实战性强的。同时，本Java视频教程注重技术原理剖析，深入JDK源码，辅以代码实战贯穿始终，用实践驱动理论，并辅以必要的代码练习。&lt;/p&gt;\n&lt;p&gt;------------------------------------&lt;/p&gt;\n&lt;p&gt;视频特点：&lt;/p&gt;\n&lt;p&gt;通过学习本Java视频教程，大家能够真正将Java基础知识学以致用、活学活用，构架Java编程思想，牢牢掌握\&quot;源码级\&quot;的Javase核心技术，并为后续JavaWeb等技术的学习奠定扎实基础。&lt;br /&gt;&lt;br /&gt;1.通俗易懂，细致入微：每个知识点高屋建瓴，深入浅出，简洁明了的说明问题&lt;br /&gt;2.具实战性：全程真正代码实战，涵盖上百个企业应用案例及练习&lt;br /&gt;3.深入：源码分析，更有 Java 反射、动态代理的实际应用等&lt;br /&gt;4.登录尚硅谷官网，技术讲师免费在线答疑&lt;/p&gt;&#x27;,&#x27;2019-03-06 18:06:36&#x27;,&#x27;2019-10-30 19:58:36&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_subject&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_subject` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;课程类别ID&#x27;,</span><br><span class="line">  `title` varchar(10) NOT NULL COMMENT &#x27;类别名称&#x27;,</span><br><span class="line">  `parent_id` char(19) NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;父ID&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;排序字段&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_parent_id` (`parent_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程科目&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_subject&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_subject` VALUES (&#x27;1178214681118568449&#x27;,&#x27;后端开发&#x27;,&#x27;0&#x27;,1,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681139539969&#x27;,&#x27;Java&#x27;,&#x27;1178214681118568449&#x27;,1,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681181483010&#x27;,&#x27;前端开发&#x27;,&#x27;0&#x27;,3,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681210843137&#x27;,&#x27;JavaScript&#x27;,&#x27;1178214681181483010&#x27;,4,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681231814658&#x27;,&#x27;云计算&#x27;,&#x27;0&#x27;,5,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681252786178&#x27;,&#x27;Docker&#x27;,&#x27;1178214681231814658&#x27;,5,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681294729217&#x27;,&#x27;Linux&#x27;,&#x27;1178214681231814658&#x27;,6,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681324089345&#x27;,&#x27;系统/运维&#x27;,&#x27;0&#x27;,7,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681353449473&#x27;,&#x27;Linux&#x27;,&#x27;1178214681324089345&#x27;,7,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681382809602&#x27;,&#x27;Windows&#x27;,&#x27;1178214681324089345&#x27;,8,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681399586817&#x27;,&#x27;数据库&#x27;,&#x27;0&#x27;,9,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681428946945&#x27;,&#x27;MySQL&#x27;,&#x27;1178214681399586817&#x27;,9,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681454112770&#x27;,&#x27;MongoDB&#x27;,&#x27;1178214681399586817&#x27;,10,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681483472898&#x27;,&#x27;大数据&#x27;,&#x27;0&#x27;,11,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681504444418&#x27;,&#x27;Hadoop&#x27;,&#x27;1178214681483472898&#x27;,11,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681529610242&#x27;,&#x27;Spark&#x27;,&#x27;1178214681483472898&#x27;,12,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681554776066&#x27;,&#x27;人工智能&#x27;,&#x27;0&#x27;,13,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681584136193&#x27;,&#x27;Python&#x27;,&#x27;1178214681554776066&#x27;,13,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681613496321&#x27;,&#x27;编程语言&#x27;,&#x27;0&#x27;,14,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178214681626079234&#x27;,&#x27;Java&#x27;,&#x27;1178214681613496321&#x27;,14,&#x27;2019-09-29 15:47:25&#x27;,&#x27;2019-09-29 15:47:25&#x27;),(&#x27;1178585108407984130&#x27;,&#x27;Python&#x27;,&#x27;1178214681118568449&#x27;,2,&#x27;2019-09-30 16:19:22&#x27;,&#x27;2019-09-30 16:19:22&#x27;),(&#x27;1178585108454121473&#x27;,&#x27;HTML/CSS&#x27;,&#x27;1178214681181483010&#x27;,3,&#x27;2019-09-30 16:19:22&#x27;,&#x27;2019-09-30 16:19:22&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_teacher&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_teacher` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;讲师ID&#x27;,</span><br><span class="line">  `name` varchar(20) NOT NULL COMMENT &#x27;讲师姓名&#x27;,</span><br><span class="line">  `intro` varchar(500) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;讲师简介&#x27;,</span><br><span class="line">  `career` varchar(500) DEFAULT NULL COMMENT &#x27;讲师资历,一句话说明讲师&#x27;,</span><br><span class="line">  `level` int(10) unsigned NOT NULL COMMENT &#x27;头衔 1高级讲师 2首席讲师&#x27;,</span><br><span class="line">  `avatar` varchar(255) DEFAULT NULL COMMENT &#x27;讲师头像&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;排序&#x27;,</span><br><span class="line">  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `uk_name` (`name`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=&#x27;讲师&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_teacher&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_teacher` VALUES (&#x27;1&#x27;,&#x27;张三&#x27;,&#x27;近年主持国家自然科学基金（6项）、江苏省重大科技成果转化项目（5项）、江苏省产学研前瞻性联合研究项目（3项）、省工业科技支撑、省高技术、省自然科学基金等省部级及其企业的主要科研项目40多个，多个项目在企业成功转化，产生了较好的经济、社会和环境效益。积极开展产学研科技合作，并与省内16家企业建立了江苏省研究生工作站，其中6家为江苏省优秀研究生工作站&#x27;,&#x27;高级&#x27;,1,&#x27;https://guli-file-190513.oss-cn-beijing.aliyuncs.com/avatar/default.jpg&#x27;,0,0,&#x27;2019-10-30 14:18:46&#x27;,&#x27;2019-11-12 13:36:36&#x27;),(&#x27;1189389726308478977&#x27;,&#x27;晴天&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师资历&#x27;,2,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/10/30/de47ee9b-7fec-43c5-8173-13c5f7f689b2.png&#x27;,1,0,&#x27;2019-10-30 11:53:03&#x27;,&#x27;2019-10-30 11:53:03&#x27;),(&#x27;1189390295668469762&#x27;,&#x27;李刚&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师&#x27;,2,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/10/30/b8aa36a2-db50-4eca-a6e3-cc6e608355e0.png&#x27;,2,0,&#x27;2019-10-30 11:55:19&#x27;,&#x27;2019-11-12 13:37:52&#x27;),(&#x27;1189426437876985857&#x27;,&#x27;王二&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师&#x27;,1,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/08/e44a2e92-2421-4ea3-bb49-46f2ec96ef88.png&#x27;,0,0,&#x27;2019-10-30 14:18:56&#x27;,&#x27;2019-11-12 13:37:35&#x27;),(&#x27;1189426464967995393&#x27;,&#x27;王五&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师&#x27;,1,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/10/30/65423f14-49a9-4092-baf5-6d0ef9686a85.png&#x27;,0,0,&#x27;2019-10-30 14:19:02&#x27;,&#x27;2019-11-12 13:37:18&#x27;),(&#x27;1192249914833055746&#x27;,&#x27;李四&#x27;,&#x27;高级讲师简介&#x27;,&#x27;高级讲师&#x27;,1,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/07/91871e25-fd83-4af6-845f-ea8d471d825d.png&#x27;,0,0,&#x27;2019-11-07 09:18:25&#x27;,&#x27;2019-11-12 13:37:01&#x27;),(&#x27;1192327476087115778&#x27;,&#x27;1222-12-12&#x27;,&#x27;1111&#x27;,&#x27;11&#x27;,1,&#x27;https://online-teach-file.oss-cn-beijing.aliyuncs.com/teacher/2019/11/08/5805c6cd-c8ad-4a77-aafd-d2e083bfd8a4.png&#x27;,0,1,&#x27;2019-11-07 14:26:37&#x27;,&#x27;2019-11-11 16:26:26&#x27;),(&#x27;1195337453429129218&#x27;,&#x27;test&#x27;,&#x27;sdfsdf&#x27;,&#x27;sdfdf&#x27;,1,&#x27;https://guli-file-190513.oss-cn-beijing.aliyuncs.com/avatar/default.jpg&#x27;,0,1,&#x27;2019-11-15 21:47:12&#x27;,&#x27;2019-11-15 21:47:27&#x27;);</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Structure for table &quot;edu_video&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">CREATE TABLE `edu_video` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;视频ID&#x27;,</span><br><span class="line">  `course_id` char(19) NOT NULL COMMENT &#x27;课程ID&#x27;,</span><br><span class="line">  `chapter_id` char(19) NOT NULL COMMENT &#x27;章节ID&#x27;,</span><br><span class="line">  `title` varchar(50) NOT NULL COMMENT &#x27;节点名称&#x27;,</span><br><span class="line">  `video_source_id` varchar(100) DEFAULT NULL COMMENT &#x27;云端视频资源&#x27;,</span><br><span class="line">  `video_original_name` varchar(100) DEFAULT NULL COMMENT &#x27;原始文件名称&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;排序字段&#x27;,</span><br><span class="line">  `play_count` bigint(20) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;播放次数&#x27;,</span><br><span class="line">  `is_free` tinyint(1) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;是否可以试听：0收费 1免费&#x27;,</span><br><span class="line">  `duration` float NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;视频时长（秒）&#x27;,</span><br><span class="line">  `status` varchar(20) NOT NULL DEFAULT &#x27;Empty&#x27; COMMENT &#x27;Empty未上传 Transcoding转码中  Normal正常&#x27;,</span><br><span class="line">  `size` bigint(20) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;视频源文件大小（字节）&#x27;,</span><br><span class="line">  `version` bigint(20) unsigned NOT NULL DEFAULT &#x27;1&#x27; COMMENT &#x27;乐观锁&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_course_id` (`course_id`),</span><br><span class="line">  KEY `idx_chapter_id` (`chapter_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;课程视频&#x27;;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Data for table &quot;edu_video&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">INSERT INTO `edu_video` VALUES (&#x27;1182499307429339137&#x27;,&#x27;18&#x27;,&#x27;32&#x27;,&#x27;第一节&#x27;,&#x27;&#x27;,&#x27;&#x27;,0,0,0,0,&#x27;&#x27;,0,1,&#x27;2019-10-11 11:32:59&#x27;,&#x27;2019-10-11 11:57:38&#x27;),(&#x27;1185312444399071234&#x27;,&#x27;14&#x27;,&#x27;1&#x27;,&#x27;12&#x27;,&#x27;&#x27;,&#x27;&#x27;,0,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-10-19 05:51:23&#x27;,&#x27;2019-10-19 05:51:33&#x27;),(&#x27;1189434737808990210&#x27;,&#x27;18&#x27;,&#x27;44&#x27;,&#x27;测试&#x27;,&#x27;&#x27;,&#x27;&#x27;,1,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-10-30 14:51:55&#x27;,&#x27;2019-10-30 14:51:55&#x27;),(&#x27;1189471423678939138&#x27;,&#x27;18&#x27;,&#x27;1181729226915577857&#x27;,&#x27;test&#x27;,&#x27;2b887dc9584d4dc68908780ec57cd3b9&#x27;,&#x27;视频&#x27;,1,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-10-30 17:17:41&#x27;,&#x27;2019-10-30 17:17:41&#x27;),(&#x27;1189476403626409986&#x27;,&#x27;18&#x27;,&#x27;1181729226915577857&#x27;,&#x27;22&#x27;,&#x27;5155c73dc112475cbbddccf4723f7cef&#x27;,&#x27;视频.mp4&#x27;,0,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-10-30 17:37:29&#x27;,&#x27;2019-10-30 17:37:29&#x27;),(&#x27;1192252824606289921&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第一课时&#x27;,&#x27;756cf06db9cb4f30be85a9758b19c645&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,0,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-07 09:29:59&#x27;,&#x27;2019-11-07 09:29:59&#x27;),(&#x27;1192628092797730818&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第二课时&#x27;,&#x27;2a02d726622f4c7089d44cb993c531e1&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,0,0,1,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-08 10:21:10&#x27;,&#x27;2019-11-08 10:21:22&#x27;),(&#x27;1192632495013380097&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第三课时&#x27;,&#x27;4e560c892fdf4fa2b42e0671aa42fa9d&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,0,0,1,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-08 10:38:40&#x27;,&#x27;2019-11-08 10:38:40&#x27;),(&#x27;1194117638832111617&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第四课时&#x27;,&#x27;4e560c892fdf4fa2b42e0671aa42fa9d&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,0,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-12 13:00:05&#x27;,&#x27;2019-11-12 13:00:05&#x27;),(&#x27;1196263770832023554&#x27;,&#x27;1192252213659774977&#x27;,&#x27;1192252428399751169&#x27;,&#x27;第五课时&#x27;,&#x27;27d21158b0834cb5a8d50710937de330&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,5,0,0,0,&#x27;Empty&#x27;,0,1,&#x27;2019-11-18 11:08:03&#x27;,&#x27;2019-11-18 11:08:03&#x27;),(&#x27;17&#x27;,&#x27;18&#x27;,&#x27;15&#x27;,&#x27;第一节：Java简介&#x27;,&#x27;196116a6fee742e1ba9f6c18f65bd8c1&#x27;,&#x27;1&#x27;,1,1000,1,100,&#x27;Draft&#x27;,0,1,&#x27;2019-01-01 13:08:57&#x27;,&#x27;2019-10-11 11:26:39&#x27;),(&#x27;18&#x27;,&#x27;18&#x27;,&#x27;15&#x27;,&#x27;第二节：表达式和赋值语句&#x27;,&#x27;2d99b08ca0214909899910c9ba042d47&#x27;,&#x27;7 - How Do I Find Time for My &#x27;,2,999,1,100,&#x27;Draft&#x27;,0,1,&#x27;2019-01-01 13:09:02&#x27;,&#x27;2019-03-08 03:30:27&#x27;),(&#x27;19&#x27;,&#x27;18&#x27;,&#x27;15&#x27;,&#x27;第三节：String类&#x27;,&#x27;51120d59ddfd424cb5ab08b44fc8b23a&#x27;,&#x27;eae2b847ef8503b81f5d5593d769dde2.mp4&#x27;,3,888,0,100,&#x27;Draft&#x27;,0,1,&#x27;2019-01-01 13:09:05&#x27;,&#x27;2019-11-12 12:50:45&#x27;),(&#x27;20&#x27;,&#x27;18&#x27;,&#x27;15&#x27;,&#x27;第四节：程序风格&#x27;,&#x27;2a38988892d84df598752226c50f3fa3&#x27;,&#x27;00-day10总结.avi&#x27;,4,666,0,100,&#x27;Draft&#x27;,0,1,&#x27;2019-01-01 13:09:05&#x27;,&#x27;2019-10-11 09:20:09&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>表目录结构：<img src="D:\photo\谷粒数据库表图.png"></p></li></ul><p>ps：数据库设计遵循规约 ，详情可以查看<a href="https://www.cnblogs.com/yujiwei/p/6886260.html">《阿里巴巴Java开发手册》</a>。</p><h3 id="1-2项目架构"><a href="#1-2项目架构" class="headerlink" title="1.2项目架构"></a>1.2项目架构</h3><p><img src="D:\photo\项目架构.png" alt="项目架构"></p><h3 id="1-3前后端分离概念"><a href="#1-3前后端分离概念" class="headerlink" title="1.3前后端分离概念"></a>1.3前后端分离概念</h3><p><img src="D:\photo\前后端分离概念图.png" alt="前后端分离概念图"></p><h3 id="1-4创建父工程"><a href="#1-4创建父工程" class="headerlink" title="1.4创建父工程"></a>1.4创建父工程</h3><h5 id="1-创建springboot工程guli-parent"><a href="#1-创建springboot工程guli-parent" class="headerlink" title="1.创建springboot工程guli-parent"></a>1.创建springboot工程guli-parent</h5><p>版本使用：<code>2.2.1.RELEASE</code> </p><p>创建期间不勾选任何工具，并且若无以上版本，可以先使用其他版本，最后修改pom文件进行依赖导入。</p><h5 id="2-删除src目录"><a href="#2-删除src目录" class="headerlink" title="2.删除src目录"></a>2.删除src目录</h5><p>父工程主要是进行依赖管理和版本控制，所以并不需要src目录，故删除。</p><h5 id="3-配置-pom-xml-♥"><a href="#3-配置-pom-xml-♥" class="headerlink" title="3.配置 pom.xml ♥"></a>3.配置 pom.xml ♥</h5><p>加标注为需要谨慎的地方，这个地方会报很多红，但是影响不大。</p><p>指定打包方式：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;artifactId&gt;guli-parent&lt;/artifactId&gt;</span><br><span class="line">&lt;packaging&gt;pom&lt;/packaging&gt;</span><br></pre></td></tr></table></figure><p>添加依赖：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;project xmlns=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span><br><span class="line">         xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">&quot;http://maven.apache.org/POM/4.0.0   http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="line">    &lt;parent&gt;</span><br><span class="line">        &lt;artifactId&gt;guli_parent&lt;/artifactId&gt;</span><br><span class="line">        &lt;groupId&gt;com.atguigu&lt;/groupId&gt;</span><br><span class="line">        &lt;version&gt;<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/parent&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;modelVersion&gt;<span class="number">4.0</span><span class="number">.0</span>&lt;/modelVersion&gt;</span><br><span class="line"></span><br><span class="line">&lt;artifactId&gt;service&lt;/artifactId&gt;</span><br><span class="line">&lt;packaging&gt;pom&lt;/packaging&gt;</span><br><span class="line"></span><br><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;maven.compiler.source&gt;<span class="number">8</span>&lt;/maven.compiler.source&gt;</span><br><span class="line">    &lt;maven.compiler.target&gt;<span class="number">8</span>&lt;/maven.compiler.target&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-netflix-ribbon&lt;/artifactId&gt;--&gt;</span><br><span class="line">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;!--hystrix依赖，主要是用 <span class="meta">@HystrixCommand</span> --&gt;</span><br><span class="line">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;/artifactId&gt;--&gt;</span><br><span class="line">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;!--服务注册--&gt;</span><br><span class="line">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;--&gt;</span><br><span class="line">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><span class="line">        &lt;!--服务调用--&gt;</span><br><span class="line">&lt;!--        &lt;dependency&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;--&gt;</span><br><span class="line">&lt;!--            &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;--&gt;</span><br><span class="line">&lt;!--        &lt;/dependency&gt;--&gt;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--mybatis-plus--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--mysql--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.velocity&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;velocity-engine-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--swagger--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--xls--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;poi&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--httpclient--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;httpclient&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--commons-io--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-io&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-io&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!--gson--&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;gson&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;<span class="number">4.12</span>&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><p><em><strong>注意：中间部分保持注解的状态，防止其影响项目启动。另外是，首次导入依赖会报红，原因是需要在子工程中逐步导入，此处也可将老师的 <code> repository</code> 导入到自己本地 maven仓库。</strong></em></p><h5 id="4-搭建service-edu模块"><a href="#4-搭建service-edu模块" class="headerlink" title="4.搭建service-edu模块"></a>4.搭建service-edu模块</h5><p>1.在resources目录下修改配置文件。</p><p><em><strong>注意：下面两个配置都是基于 MySQL为 8.0以上版本。</strong></em></p><p>properites:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># 服务端口</span><br><span class="line"></span><br><span class="line">server.port=<span class="number">8001</span></span><br><span class="line"></span><br><span class="line"># 服务名</span><br><span class="line"></span><br><span class="line">spring.application.name=service-edu</span><br><span class="line"></span><br><span class="line"># 环境设置：dev、test、prod</span><br><span class="line"></span><br><span class="line">spring.profiles.active=dev</span><br><span class="line"></span><br><span class="line"># mysql数据库连接</span><br><span class="line"></span><br><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url=jdbc:mysql:<span class="comment">//localhost:3306/guli?serverTimezone=GMT%2B8</span></span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=root</span><br><span class="line"></span><br><span class="line"># mybatis日志</span><br><span class="line"></span><br><span class="line">mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</span><br></pre></td></tr></table></figure><p>YML:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line"> # 服务名</span><br><span class="line">  application:</span><br><span class="line">    name: service-edu</span><br><span class="line"></span><br><span class="line"># 环境设置：dev、test、prod</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev</span><br><span class="line"></span><br><span class="line"># mysql数据库连接</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql:<span class="comment">//192.168.88.130:3306/guli?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line"></span><br><span class="line"># 统一返回的json时间格式</span><br><span class="line"></span><br><span class="line">  jackson:</span><br><span class="line">    date-format: yyyy-MM-dd HH:mm:ss</span><br><span class="line">    time-zone: GMT+<span class="number">8</span></span><br><span class="line"></span><br><span class="line"># mybatis日志</span><br><span class="line"></span><br><span class="line">mybatis-plus:</span><br><span class="line">  configuration:</span><br><span class="line">    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl</span><br><span class="line"></span><br><span class="line"># 服务端口</span><br><span class="line"></span><br><span class="line">server:</span><br><span class="line">  port: <span class="number">8001</span></span><br></pre></td></tr></table></figure><p>2.创建MP代码生成器</p><p>在test&#x2F;java下创建 <code>com.atguigu.demo</code>  的包，接着创建 <code>CodeGenerator.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.DateType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGenerator</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">projectPath</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\work\\guli_parent\\service\\service_edu&quot;</span> + <span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line"></span><br><span class="line">        gc.setAuthor(<span class="string">&quot;testjava&quot;</span>);</span><br><span class="line">        gc.setOpen(<span class="literal">false</span>); <span class="comment">//生成后是否打开资源管理器</span></span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>); <span class="comment">//重新生成时文件是否覆盖</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//UserServie</span></span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);    <span class="comment">//去掉Service接口的首字母I</span></span><br><span class="line"></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR); <span class="comment">//主键策略</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);<span class="comment">//定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);<span class="comment">//开启Swagger2模式</span></span><br><span class="line"></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/guli?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        pc.setModuleName(<span class="string">&quot;eduservice&quot;</span>); <span class="comment">//模块名</span></span><br><span class="line">        <span class="comment">//包  com.atguigu.eduservice</span></span><br><span class="line">        pc.setParent(<span class="string">&quot;com.atguigu&quot;</span>);</span><br><span class="line">        <span class="comment">//包  com.atguigu.eduservice.controller</span></span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line"></span><br><span class="line">        strategy.setInclude(<span class="string">&quot;edu_teacher&quot;</span>);</span><br><span class="line"></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//数据库表映射到实体的命名策略</span></span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">&quot;_&quot;</span>); </span><br><span class="line">        <span class="comment">//生成实体时去掉表前缀</span></span><br><span class="line"></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>); </span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line"></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>); <span class="comment">//restful api风格控制器</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>); </span><br><span class="line">        <span class="comment">//url中驼峰转连字符</span></span><br><span class="line"></span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>tips：使用本代码生成器时需要注意全局配置路径是否为项目路径，其次在数据源配置时与自己设备的配置保持一致（查看 username和 password），不然会报  <code>Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: YES)</code>  。</strong></em></p><p><img src="D:\photo\代码生成器运行失败.png"></p><h3 id="1-5后台管理系统-讲师管理接口"><a href="#1-5后台管理系统-讲师管理接口" class="headerlink" title="1.5后台管理系统-讲师管理接口"></a>1.5后台管理系统-讲师管理接口</h3><h4 id="1、测试查询所有讲师功能"><a href="#1、测试查询所有讲师功能" class="headerlink" title="1、测试查询所有讲师功能"></a>1、测试查询所有讲师功能</h4><h5 id="1）创建MP配置类"><a href="#1）创建MP配置类" class="headerlink" title="1）创建MP配置类"></a>1）创建MP配置类</h5><p>在edu模块下，创建config包，包下创建<code>EduConfig.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.eduservice.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EduConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2）编写controller进行测试"><a href="#2）编写controller进行测试" class="headerlink" title="2）编写controller进行测试"></a>2）编写controller进行测试</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/eduservice/teacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EduTeacherController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduTeacherService eduTeacherService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询讲师表所有数据</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;EduTeacher&gt; <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> eduTeacherService.list(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>tips：代码生成器的名字为edu-teacher，视频中为teacher，为保证与视频一致不报错不失误，建议修改。另外补充知识  <code>@RestController</code> &#x3D; <code>@Controller</code> + <code>@ResponseBody</code> ，当开发一个和页面交互数据的控制时，比如 bbs-web（电子布告栏系统）的api接口需要此注解</strong></em> </p><h5 id="3）主启动类"><a href="#3）主启动类" class="headerlink" title="3）主启动类"></a>3）主启动类</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class EduApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(EduApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4）启动项目★-°-☆-￣▽￣-x2F-°★"><a href="#4）启动项目★-°-☆-￣▽￣-x2F-°★" class="headerlink" title="4）启动项目★,°:.☆(￣▽￣)&#x2F;$:.°★"></a>4）启动项目<em>★,°</em>:.☆(￣▽￣)&#x2F;$:<em>.°★</em></h5><p>访问：<code>http://localhost:8001/eduservice/teacher/findAll</code></p><p><img src="D:\photo\返回数据.png"></p><h4 id="2、测试逻辑删除功能"><a href="#2、测试逻辑删除功能" class="headerlink" title="2、测试逻辑删除功能"></a>2、测试逻辑删除功能</h4><h5 id="1）在实体类上加注解-TableLogic"><a href="#1）在实体类上加注解-TableLogic" class="headerlink" title="1）在实体类上加注解@TableLogic"></a>1）在实体类上加注解<code>@TableLogic</code></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="keyword">private</span> Boolean isDeleted;</span><br></pre></td></tr></table></figure><h5 id="2）在EduConfig中加入逻辑删除的插件"><a href="#2）在EduConfig中加入逻辑删除的插件" class="headerlink" title="2）在EduConfig中加入逻辑删除的插件"></a>2）在EduConfig中加入逻辑删除的插件</h5><p>（MBP3.1.1以上版本无需配置，本项目采用版本为3.0.5） </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> ISqlInjector <span class="title function_">sqlInjector</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LogicSqlInjector</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3）编写EduTeacherController"><a href="#3）编写EduTeacherController" class="headerlink" title="3）编写EduTeacherController"></a>3）编写EduTeacherController</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping(&quot;/deleteTeacherById/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteTeacherById</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> eduTeacherService.removeById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4）访问地址测试代码"><a href="#4）访问地址测试代码" class="headerlink" title="4）访问地址测试代码"></a>4）访问地址测试代码</h5><p><code>http://localhost:8001/eduservice/teacher/deleteTeacherById/1</code></p><p>:bride_with_veil:<em><strong>虽然页面内容显示 <code> Whitelabel Error Page</code>，但是执行成功需要查看数据库 <code>is_deleted</code>字段是否从0变成1。</strong></em> </p><p><img src="D:\photo\逻辑删除.png"></p><h4 id="3、整合Swagger技术"><a href="#3、整合Swagger技术" class="headerlink" title="3、整合Swagger技术"></a>3、整合Swagger技术</h4><h5 id="1）创建公共模块-common-，并且删除src目录"><a href="#1）创建公共模块-common-，并且删除src目录" class="headerlink" title="1）创建公共模块 common ，并且删除src目录"></a>1）创建公共模块 <code>common</code> ，并且删除src目录</h5><h5 id="2）导入需要的坐标依赖"><a href="#2）导入需要的坐标依赖" class="headerlink" title="2）导入需要的坐标依赖"></a>2）导入需要的坐标依赖</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--mybatis-plus--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--swagger--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;provided &lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- redis --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- spring2.X集成redis所需common-pool2</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.6.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;--&gt;</span><br></pre></td></tr></table></figure><h5 id="3）创建Maven工程子模块-service-base"><a href="#3）创建Maven工程子模块-service-base" class="headerlink" title="3）创建Maven工程子模块  service-base"></a>3）创建Maven工程子模块  <code>service-base</code></h5><h5 id="4）创建包com-atguigu-servicebase-创建配置类-SwaggerConfig-java"><a href="#4）创建包com-atguigu-servicebase-创建配置类-SwaggerConfig-java" class="headerlink" title="4）创建包com.atguigu.servicebase,创建配置类 SwaggerConfig.java"></a>4）创建包<code>com.atguigu.servicebase</code>,创建配置类 <code>SwaggerConfig.java</code></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span><span class="comment">//配置类</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span> <span class="comment">//swagger注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwaggerConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">webApiConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">&quot;webApi&quot;</span>)</span><br><span class="line">                .apiInfo(webApiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">&quot;/admin/.*&quot;</span>)))</span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">&quot;/error.*&quot;</span>)))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApiInfo <span class="title function_">webApiInfo</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">                .title(<span class="string">&quot;网站-课程中心API文档&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;本文档描述了课程中心微服务接口定义&quot;</span>)</span><br><span class="line">                .version(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">                .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>(<span class="string">&quot;java&quot;</span>, <span class="string">&quot;http://atguigu.com&quot;</span>, <span class="string">&quot;1123@qq.com&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4）在service模块中引入common模板"><a href="#4）在service模块中引入common模板" class="headerlink" title="4）在service模块中引入common模板"></a>4）在service模块中引入common模板</h5><p>因为要在service模块中测试，而common模块主要存放一些依赖，想要启用模板内工具，需要将模块导入到service模块中。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.atguigu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;service_base&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h5 id="5）在启动类上加入扫描注解类"><a href="#5）在启动类上加入扫描注解类" class="headerlink" title="5）在启动类上加入扫描注解类"></a>5）在启动类上加入扫描注解类</h5><p>表示只要是这个包下的类都默认启动加载，保持包名与配置包名一致。主要因为不在同一个模块下@Configuration也没有用╮(╯▽╰)╭。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;com.atguigu&quot;&#125;)</span></span><br></pre></td></tr></table></figure><h5 id="6）重新启动程序后，访问固定地址"><a href="#6）重新启动程序后，访问固定地址" class="headerlink" title="6）重新启动程序后，访问固定地址"></a>6）重新启动程序后，访问固定地址</h5><p><code>http://localhost:8001/swagger-ui.html</code> </p><p><img src="D:\photo\swagger.png"></p><p>:bride_with_veil:<strong>在今后的学习中，swagger将起到重要作用，感兴趣的可以了解一下加强版的swagger——<a href="https://doc.xiaominfo.com/docs/quick-start">knife4j</a>。</strong></p><h5 id="7）配置SwaggerApi文档接口"><a href="#7）配置SwaggerApi文档接口" class="headerlink" title="7）配置SwaggerApi文档接口"></a>7）配置SwaggerApi文档接口</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Api(tags = &quot;讲师管理模块&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/eduservice/teacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EduTeacherController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduTeacherService eduTeacherService;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     查询所有讲师</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="meta">@ApiOperation(&quot;查询所有讲师&quot;)</span></span><br><span class="line">      <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">      <span class="keyword">public</span> List&lt;EduTeacher&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> eduTeacherService.list(<span class="literal">null</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     逻辑删除讲师</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="meta">@ApiOperation(&quot;逻辑删除讲师&quot;)</span></span><br><span class="line">      <span class="meta">@DeleteMapping(&quot;/deleteTeacherById/&#123;id&#125;&quot;)</span></span><br><span class="line">      <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteTeacherById</span><span class="params">(<span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;讲师ID&quot;, required = true)</span>  <span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> eduTeacherService.removeById(id);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>由于技术革新太快，视频的 Api注解已经不能再用，可替换成 tags，功能不变。</strong></em></p><h4 id="4、统一返回结果类-♥"><a href="#4、统一返回结果类-♥" class="headerlink" title="4、统一返回结果类 ♥"></a>4、统一返回结果类 ♥</h4><h5 id="1）在common模块下创建模块-common-utils，创建-R-java-和-ResultCode-java"><a href="#1）在common模块下创建模块-common-utils，创建-R-java-和-ResultCode-java" class="headerlink" title="1）在common模块下创建模块 common_utils，创建 R.java 和 ResultCode.java"></a>1）在<code>common</code>模块下创建模块 <code>common_utils</code>，创建 <code>R.java</code> 和 <code>ResultCode.java</code></h5><p>R.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//统一返回结果的类</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">R</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;是否成功&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回消息&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回数据&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; data = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把构造方法私有</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">R</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成功静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">        r.setSuccess(<span class="literal">true</span>);</span><br><span class="line">        r.setCode(ResultCode.SUCCESS);</span><br><span class="line">        r.setMessage(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//失败静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">        r.setSuccess(<span class="literal">false</span>);</span><br><span class="line">        r.setCode(ResultCode.ERROR);</span><br><span class="line">        r.setMessage(<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">success</span><span class="params">(Boolean success)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setSuccess(success);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">message</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setMessage(message);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">code</span><span class="params">(Integer code)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setCode(code);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">data</span><span class="params">(String key, Object value)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.data.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">data</span><span class="params">(Map&lt;String, Object&gt; map)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setData(map);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ResultCode.java</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ResultCode</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Integer</span> <span class="variable">SUCCESS</span> <span class="operator">=</span> <span class="number">20000</span>; <span class="comment">//成功</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">Integer</span> <span class="variable">ERROR</span> <span class="operator">=</span> <span class="number">20001</span>; <span class="comment">//失败</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tips：代码采用链式编程，Lombok支持链式编程，加注解@Accessors（chain&#x3D;true）即可。【博主还没有测试是否能成功，成功后修改博客内容。】 </p><h5 id="2）在service中引入-common-utils"><a href="#2）在service中引入-common-utils" class="headerlink" title="2）在service中引入 common_utils"></a>2）在<code>service</code>中引入 <code>common_utils</code></h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.atguigu&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;common_utils&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><em><strong>用 maven把 utils install一下，安装到 maven仓库中</strong></em></p><h5 id="3）对controller内的代码进行修改"><a href="#3）对controller内的代码进行修改" class="headerlink" title="3）对controller内的代码进行修改"></a>3）对controller内的代码进行修改</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Api(tags = &quot;讲师管理模块&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/eduservice/teacher&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EduTeacherController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EduTeacherService eduTeacherService;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     查询所有讲师</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">      <span class="meta">@ApiOperation(&quot;查询所有讲师&quot;)</span></span><br><span class="line">      <span class="meta">@GetMapping(&quot;/findAll&quot;)</span></span><br><span class="line">      <span class="keyword">public</span> R <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">      List&lt;EduTeacher&gt; list = eduTeacherService.list(<span class="literal">null</span>);</span><br><span class="line">      <span class="keyword">return</span> R.ok().data(<span class="string">&quot;items&quot;</span>, list);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     逻辑删除讲师</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">      <span class="meta">@ApiOperation(&quot;逻辑删除讲师&quot;)</span></span><br><span class="line">      <span class="meta">@DeleteMapping(&quot;/deleteTeacherById/&#123;id&#125;&quot;)</span></span><br><span class="line">      <span class="keyword">public</span> R <span class="title function_">deleteTeacherById</span><span class="params">(<span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;讲师ID&quot;, required = true)</span> <span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">      <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> eduTeacherService.removeById(id);</span><br><span class="line">      <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">              <span class="keyword">return</span> R.ok();</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="keyword">return</span> R.error();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em><strong>可用三目运算符对代码进行优化  <code>return teacherService.removeById(id) ? R.ok() : R.error();</code>另外是对 R进行导包的，注意导自己的包  <code>import com.atguigu.commonutils.R;</code>，不要导 baomidou的。</strong></em></p><h4 id="5、分页带条件查询功能实现-♥"><a href="#5、分页带条件查询功能实现-♥" class="headerlink" title="5、分页带条件查询功能实现 ♥"></a>5、分页带条件查询功能实现 ♥</h4><h5 id="1）首先在MP配置类中加入分页插件"><a href="#1）首先在MP配置类中加入分页插件" class="headerlink" title="1）首先在MP配置类中加入分页插件"></a>1）首先在MP配置类中加入分页插件</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页插件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2）在controller内编写简易分页的方法"><a href="#2）在controller内编写简易分页的方法" class="headerlink" title="2）在controller内编写简易分页的方法"></a>2）在controller内编写简易分页的方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//current 当前页</span></span><br><span class="line">   <span class="comment">//limit 每页记录数</span></span><br><span class="line">   <span class="meta">@GetMapping(&quot;pageTeacher/&#123;current&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> R <span class="title function_">pageListTeacher</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">long</span> current,</span></span><br><span class="line"><span class="params">                            <span class="meta">@PathVariable</span> <span class="type">long</span> limit)</span> &#123;</span><br><span class="line">       <span class="comment">//创建page对象</span></span><br><span class="line">       Page&lt;EduTeacher&gt; pageTeacher = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(current,limit);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//调用方法实现分页</span></span><br><span class="line">       <span class="comment">//调用方法时候，底层封装，把分页所有数据封装到pageTeacher对象里面</span></span><br><span class="line">       teacherService.page(pageTeacher,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">       <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> pageTeacher.getTotal();<span class="comment">//总记录数</span></span><br><span class="line">       List&lt;EduTeacher&gt; records = pageTeacher.getRecords(); <span class="comment">//数据list集合</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// Map map = new HashMap();</span></span><br><span class="line">       <span class="comment">// map.put(&quot;total&quot;,total);</span></span><br><span class="line">       <span class="comment">// map.put(&quot;rows&quot;,records);</span></span><br><span class="line">       <span class="comment">// return R.ok().data(map);</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> R.ok().data(<span class="string">&quot;total&quot;</span>,total).data(<span class="string">&quot;rows&quot;</span>,records);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>3）创建VO对象 <code>TeacherQuery</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TeacherQuery</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;教师名称,模糊查询&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;头衔 1高级讲师 2首席讲师&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer level;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;查询开始时间&quot;, example = &quot;2019-01-01 10:10:10&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String begin;</span><br><span class="line">    <span class="comment">//注意，这里使用的是String类型，前端传过来的数据无需进行类型转换</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;查询结束时间&quot;, example = &quot;2019-12-01 10:10:10&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>使用 ValueObject来封装业务数据，并且有一个单独的方法可以用来获取或者发送这个 VO，当客户端请求一些业务数据的时候，服务端就可以产生出一个 VO，并且将它赋值。最后，可以用传值的方法传递给客户端。</strong></em></p><p> <code>@Data</code> &#x3D;<code>@Setter</code> + <code>@Getter</code> +<code>@RequiredArgsConstructor</code> + <code>@ToString</code> + <code>@EqualsAndHashCode</code> </p><h5 id="4）在controller里编写带条件查询的分页方法"><a href="#4）在controller里编写带条件查询的分页方法" class="headerlink" title="4）在controller里编写带条件查询的分页方法"></a>4）在controller里编写带条件查询的分页方法</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;pageTeacherCondition/&#123;current&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">pageTeacherCondition</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">long</span> current,<span class="meta">@PathVariable</span> <span class="type">long</span> limit,</span></span><br><span class="line"><span class="params">                              <span class="meta">@RequestBody(required = false)</span>  TeacherQuery teacherQuery)</span> &#123;</span><br><span class="line">    <span class="comment">//创建page对象</span></span><br><span class="line">    Page&lt;EduTeacher&gt; pageTeacher = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(current,limit);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构建条件</span></span><br><span class="line">    QueryWrapper&lt;EduTeacher&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">// 多条件组合查询</span></span><br><span class="line">    <span class="comment">// mybatis学过 动态sql</span></span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> teacherQuery.getName();<span class="comment">//讲师名称</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">level</span> <span class="operator">=</span> teacherQuery.getLevel();<span class="comment">//讲师等级</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">begin</span> <span class="operator">=</span> teacherQuery.getBegin();<span class="comment">//开始时间</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> teacherQuery.getEnd();<span class="comment">//结束时间</span></span><br><span class="line">    <span class="comment">//判断条件值是否为空，如果不为空拼接条件</span></span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(name)) &#123;</span><br><span class="line">        <span class="comment">//构建条件</span></span><br><span class="line">        wrapper.like(<span class="string">&quot;name&quot;</span>,name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(level)) &#123;</span><br><span class="line">        wrapper.eq(<span class="string">&quot;level&quot;</span>,level);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(begin)) &#123;</span><br><span class="line">        wrapper.ge(<span class="string">&quot;gmt_create&quot;</span>,begin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!StringUtils.isEmpty(end)) &#123;</span><br><span class="line">        wrapper.le(<span class="string">&quot;gmt_create&quot;</span>,end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用方法实现条件查询分页</span></span><br><span class="line">    teacherService.page(pageTeacher,wrapper);</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> pageTeacher.getTotal();<span class="comment">//总记录数</span></span><br><span class="line">    List&lt;EduTeacher&gt; records = pageTeacher.getRecords(); <span class="comment">//数据list集合</span></span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;total&quot;</span>,total).data(<span class="string">&quot;rows&quot;</span>,records);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>:black_heart:看弹幕说可以使用MP中带condition参数的重载方法构建，自己尝试修改失败，有大神看见了麻烦知道怎么改，麻烦联系我一下。</p><p>@RequestBody使用 json传递数据，把json数据封装到对象里面。（必须使用post提交方式。）</p><p>@ResponseBody支持将返回值放在response体内，而不是返回一个页面。 </p><h4 id="6、新增和修改讲师功能实现"><a href="#6、新增和修改讲师功能实现" class="headerlink" title="6、新增和修改讲师功能实现"></a>6、新增和修改讲师功能实现</h4><p>1）在<code>service_base  </code> 模块下创建<code>handler</code>包，包下创建<code>MetaObjectHandler.java</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="comment">//属性名称，不是字段名称</span></span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;gmtCreate&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;gmtModified&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;gmtModified&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>:v: column就是数据库里的字段名称，field就是实体类的属性名称</p><p>2）</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty(value = &quot;创建时间&quot;)</span></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line"><span class="keyword">private</span> Date gmtCreate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModelProperty(value = &quot;更新时间&quot;)</span></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line"><span class="keyword">private</span> Date gmtModified;</span><br></pre></td></tr></table></figure><h4 id="6、跨域问题-♥"><a href="#6、跨域问题-♥" class="headerlink" title="6、跨域问题 ♥"></a>6、跨域问题 ♥</h4>]]></content>
      
      
      
        <tags>
            
            <tag> 实战项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring IOC</title>
      <link href="/2022/07/28/Spring%20IOC/"/>
      <url>/2022/07/28/Spring%20IOC/</url>
      
        <content type="html"><![CDATA[<p>##Spring IOC</p><h3 id="1-SpringIOC的理解、原理与实现"><a href="#1-SpringIOC的理解、原理与实现" class="headerlink" title="1.SpringIOC的理解、原理与实现"></a>1.SpringIOC的理解、原理与实现</h3><ul><li>ioc容器的创建过程（beanFactory、DefaultListableBeanFactory），向bean工厂中设置参数（BeanPostProceedsor、Aware接口的子类）</li><li>加载解析bean对象，准备要创建的bean对象的定义对象beanDefinition（xml或者注解的解析过程）</li><li>beanFactoryPostProcessor的处理，此处是拓展点，PlaceHolderConfigurSupport,ConfigurationClassPostProcessor</li><li>BeanPostProcessor的注册功能，方便后续对bean对象完成具体的扩展功能</li><li>通过反射的方式将BeanDefinition对象实例化成具体的bean对象</li><li>bean对象的初始化工程（填充属性、调用aware子类的方法、调用BeanPostProcessor前置处理方法、调用init-method方法、调用BeanPostProcessor的后置处理方法）</li><li>生成完整的bean对象，通过getBean方法可以直接获取</li><li>销毁过程。接口DisposableBean方法destroy。</li></ul><h4 id="1-1-IOC是将对象交给容器管理，原来对象由使用者控制，现有spring控制"><a href="#1-1-IOC是将对象交给容器管理，原来对象由使用者控制，现有spring控制" class="headerlink" title="1.1 IOC是将对象交给容器管理，原来对象由使用者控制，现有spring控制"></a>1.1 IOC是将对象交给容器管理，原来对象由使用者控制，现有spring控制</h4><h5 id="简要思路："><a href="#简要思路：" class="headerlink" title="简要思路："></a>简要思路：</h5><p>管理什么？-》<strong>Service + Dao</strong></p><p>如何将被管理的对象告知IOC容器-》<strong>配置</strong></p><p>被管理的对象交给IOC容器，如何获取到IOC容器？-》<strong>接口</strong></p><p>IOC容器得到后，如何从容器中获取bean？-》<strong>接口方法</strong></p><p>使用Spring导入哪些坐标？-》<strong>pom.xml</strong></p><h5 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h5><ol><li><p>导入spring的坐标spring-context</p></li><li><p>配置bean（别配接口，配实现类，要拿bean造对象）</p><p>bean标签表示配置bean、id属性表示给bean起名字、class属性表示给bean定义类型</p></li><li><p>获取IOC容器</p></li><li><p>通过当时定义的id获取bean</p></li></ol><h4 id="1-2-DI依赖注入，把对应的属性值注入对象"><a href="#1-2-DI依赖注入，把对应的属性值注入对象" class="headerlink" title="1.2 DI依赖注入，把对应的属性值注入对象"></a>1.2 DI依赖注入，把对应的属性值注入对象</h4><h5 id="简要思路：-1"><a href="#简要思路：-1" class="headerlink" title="简要思路："></a>简要思路：</h5><p>基于IOC管理bean</p><p>Service中使用new形式创建的Dao对象是否保留？-》<strong>否</strong></p><p>Service中需要Dao对象如何进入到Service？-》<strong>提供方法</strong></p><p>Service与Dao间的关系如何描述？-》<strong>配置</strong></p><h5 id="具体步骤：-1"><a href="#具体步骤：-1" class="headerlink" title="具体步骤："></a>具体步骤：</h5><p>1.删除使用new形式创建对象的代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private XXXDao XXXDao;</span><br></pre></td></tr></table></figure><p>2.提供依赖对象对应的setter方法</p><p>3.配置service与dao之间的关系</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;property name=&quot;XXXDao属性名称&quot; ref=&quot;id名称&quot;&gt;</span><br></pre></td></tr></table></figure><p>4.通过当时定义的id获取bean</p><p>IOC体系结构设计</p><p><a href="https://postimg.cc/rKkJn6zM">spring-framework-ioc-source-7.png</a></p><ul><li><p><strong>BeanFactory： 工厂模式定义了IOC容器的基本功能规范</strong></p><p>BeanFactory 有三个子类：ListableBeanFactory、HierarchicalBeanFactory 和AutowireCapableBeanFactory，而BeanFactory定义多层次接口的原因在于<strong>区分在 Spring 内部在操作过程中对象的传递和转化过程中，对对象的数据访问所做的限制</strong>。 </p></li><li><p><strong>BeanRegistry： 向IOC容器手工注册 BeanDefinition 对象的方法</strong></p><p>Spring 配置文件中每一个<code>&lt;bean&gt;</code>节点元素在 Spring 容器里都通过一个 BeanDefinition 对象表示，它描述了 Bean 的配置信息。而 BeanDefinitionRegistry 接口提供了向容器手工注册 BeanDefinition 对象的方法。</p></li><li><h5 id="BeanDefinition：各种Bean对象及其相互的关系"><a href="#BeanDefinition：各种Bean对象及其相互的关系" class="headerlink" title="BeanDefinition：各种Bean对象及其相互的关系"></a>BeanDefinition：各种Bean对象及其相互的关系</h5><blockquote><p>Bean对象存在依赖嵌套等关系，所以设计者设计了BeanDefinition，它用来对Bean对象及关系定义；我们在理解时只需要抓住如下三个要点：</p><ul><li><strong>BeanDefinition 定义了各种Bean对象及其相互的关系</strong></li><li><strong>BeanDefinitionReader 这是BeanDefinition的解析器</strong></li><li><strong>BeanDefinitionHolder 这是BeanDefination的包装类，用来存储BeanDefinition，name以及aliases等。</strong></li></ul></blockquote></li></ul><p><a href="https://postimg.cc/bGJzbNnJ">spring-framework-ioc-source-71.png</a></p><h4 id="1-3Spring初始化和创建对象流程"><a href="#1-3Spring初始化和创建对象流程" class="headerlink" title="1.3Spring初始化和创建对象流程"></a>1.3Spring初始化和创建对象流程</h4><h5 id="初始化："><a href="#初始化：" class="headerlink" title="初始化："></a>初始化：</h5><p><strong>第一个过程：BeanDifinition的Resource定位</strong></p><p>这个Resource定位指的是BeanDifinition的资源定位，它由ResourceLoader通过统一的Resource接口来完成，这个Resource对各种形式的BeanDifinition的使用都提供了统一的接口。</p><p>对于这些BeanDifinition的存在形式，相信大家都不会感到陌生。比如，</p><p>在文件系统中的Bean定义信息可以使用FileSystemResource来进行抽象。</p><p>在类路劲中的Bean定义信息可以使用ClassPathResource。</p><p>这个定位过程类似于容器寻找数据的过程，就想水桶装水先要把水找到一样。</p><p><strong>第二个过程：BeanDifinition的载入</strong></p><p>这个载入过程是把用户定义好的Bean表示成Ioc容器内部的数据结构，而这个容器内部的数据结构就是BeanDifinition。具体来说，BeanDifinition实际上就是POJO对象在IOC容器中的抽象，通过这个BeanDifinition定义的数据结构，使IOC容器能够方便的对POJO对象也就是Bean进行管理。</p><p><strong>第三个过程：BeanDifinition的注册</strong></p><p>这个操作是通过调用BeanDifinitionRegistry借口来实现的。这个注册过程把载入过程中解析得到的BeanDifinition向Ioc容器进行注册。在阅读源码中可知，在IOC容器内部将BeanDifinition注入到一个HashMap中去，Ioc容器就是通过这个HashMap来持有这些BeanDifinition数据的。<br><a href="https://postimg.cc/jw35j7wX">spring-framework-ioc-source-9.png</a></p><h3 id="2-Spring-IOC的底层实现"><a href="#2-Spring-IOC的底层实现" class="headerlink" title="2.Spring IOC的底层实现"></a>2.Spring IOC的底层实现</h3><p>原理：xml解析、工厂模式、反射。 </p><ul><li>先通过createBeanFactory创建出一个Bean工厂</li><li>开始循环创建对象，优先通过getBean、doGetBean从容器中查找（容器中bean为单例模式）</li><li>若容器中找不到，则通过createBean、doCreatBean方法，以及反射的方式创建对象，一般情况下是使用的是无参构造器（getDeclareConstructor、newInstance）</li><li>进行对象的属性填充populateBean</li><li>进行其他初始化操作initializingBean</li></ul><h3 id="3-bean的生命周期"><a href="#3-bean的生命周期" class="headerlink" title="3.bean的生命周期"></a>3.bean的生命周期</h3><ol><li>实例化bean：反射的方式生成对象</li><li>填充bean的属性：populateBean（），循环依赖的问题（三级缓存）</li><li>调用aware接口相关的方法：invokeAwareMethod（完成BeanName，BeanFactory，BeanClassLoader对象的属性设置）</li><li>调用BeanPostProcessor中的前置处理方法：使用比较多的有（ApplicationContextPostProcessor设置ApplicationContext，Environment，ResourceLoader、EmbenddValueResolver等对象）</li><li>调用initmethod方法：invokerInitmethod（），判断是否实现了initlizingBean接口，如果有，调用afterPropertiesSet方法，没有就不调用</li><li>调用BeanPostProcess的后置处理方法：spring的aop就是在此处实现的，AbstractAutoProxyCreator注册Destuction相关的回调接口：钩子函数</li><li>获取完整的对象，可以通过getBean的方式来进行对象的获取</li><li>销毁流程：1.判断是否实现了DispoableBean接口。2.调用destroyMethod方法</li></ol><p><a href="https://postimg.cc/zVFb0QhK"><img src="https://i.postimg.cc/X7Tf7S7H/spring-framework-ioc-source-102.png" alt="spring-framework-ioc-source-102.png"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
